{"version":3,"sources":["app/pages/common/Privacy.js","_metronic/ducks/i18n.js","_metronic/layout/LayoutConfig.js","app/constant/role.js","_metronic/layout/MenuConfig.js","_metronic/ducks/builder.js","_metronic/layout/LayoutContext.js","app/helpers/axios.js","app/crud/auth.crud.js","_metronic/__mocks__/userTableMock.js","_metronic/layout/LayoutInitializer.js","_metronic/i18n/I18nProvider.js","_metronic/materialUIThemeProvider/ThemeProvider.js","_metronic/index.js","app/router/RouterHelpers.js","app/store/ducks/brand.duck.js","app/store/ducks/auth.duck.js","app/store/ducks/common.duck.js","app/store/ducks/process.duck.js","app/store/ducks/finance.duck.js","app/store/rootDuck.js","app/store/store.js","app/styles/globalStyles.js","app/pages/home/components/RangeDatePicker.js","app/crud/brand.crud.js","app/crud/statitics.crud.js","app/constant/orderStatus.js","app/helpers/helper.js","app/constant/marketplace.js","app/pages/home/UploadPage.js","app/pages/home/FormEntry.js","app/pages/home/statistics/OrderList.js","app/pages/home/components/RevenueCard.js","app/pages/home/components/OrderStatusCard.js","app/pages/home/components/chart/DonutChart.js","app/pages/home/components/chart/LineChart.js","app/pages/home/statistics/RevenueStatistics.js","app/pages/home/components/CropImageForm.js","app/partials/popup/ConfirmationPopup.js","app/pages/home/Authorization.js","app/pages/home/BrandDetail.js","app/pages/home/statistics/Dashboard.js","app/pages/home/BrandList.js","app/pages/home/components/GoogleDriveFilesTracking.js","app/pages/home/ConnectMarket.js","app/pages/home/Profile.js","app/pages/home/ActivityLog.js","app/pages/home/ShopList.js","app/pages/home/PermissionList.js","app/pages/home/UserList.js","app/pages/home/InternalReport.js","app/crud/finance.crud.js","app/pages/home/finance/BankAccountDetail.js","app/pages/home/finance/BankDetail.js","app/pages/home/finance/BankManagement.js","app/pages/home/finance/FinanceReport.js","app/pages/home/finance/FinanceOverview.js","app/pages/home/Deparments.js","app/crud/process.crud.js","app/pages/home/ProcessSetting.js","app/pages/home/components/ProcessForm.js","app/pages/home/RequestPage.js","app/pages/home/CreateProcess.js","app/pages/home/RequestDetail.js","app/pages/home/ProcessDashboard.js","app/pages/home/RequestDashboard.js","app/pages/home/livestream/LiveStreaming.js","app/crud/pricing.crud.js","app/pages/home/pricing/Compare.js","app/crud/landing.crud.js","app/pages/home/post/PostManagement.js","app/pages/home/post/PostDetail.js","app/pages/home/livestream/CampaignManagement.js","app/pages/crawl/CrawlHistory.js","app/crud/data.crud.js","app/pages/home/pricing/ProductPool.js","app/pages/home/pricing/Group.js","app/router/RouterConfig.js","app/pages/home/HomePage.js","app/pages/errors/ErrorPage1.js","app/pages/errors/ErrorPage2.js","app/pages/errors/ErrorPage3.js","app/pages/errors/ErrorPage4.js","app/pages/errors/ErrorPage5.js","app/pages/errors/ErrorPage6.js","app/pages/errors/ErrorsPage.js","app/pages/auth/Logout.js","app/partials/layout/SearchResult.js","app/partials/content/CustomDropdowns/HeaderDropdownToggle.js","_metronic/layout/assets/layout-svg-icons/Search.svg","app/partials/layout/SearchDropdown.js","_metronic/layout/assets/layout-svg-icons/Compiling.svg","app/partials/layout/UserNotifications.js","_metronic/layout/assets/layout-svg-icons/CartNum3.svg","app/partials/layout/MyCart.js","_metronic/layout/assets/layout-svg-icons/Equalizer.svg","_metronic/layout/assets/layout-svg-icons/Euro.svg","_metronic/layout/assets/layout-svg-icons/Mail-attachment.svg","_metronic/layout/assets/layout-svg-icons/BoxNum2.svg","_metronic/layout/assets/layout-svg-icons/Group.svg","app/partials/layout/QuickActionsPanel.js","_metronic/layout/assets/layout-svg-icons/Layout-4-blocks.svg","app/partials/layout/LanguageSelector.js","_metronic/layout/header/QuickPanelToggle.js","app/partials/layout/UserProfile.js","_metronic/layout/header/Topbar.js","_metronic/layout/header/HMenu/HMenuItemInner.js","_metronic/layout/header/HMenu/HMenuColumn.js","_metronic/layout/header/HMenu/HMenuItem.js","_metronic/layout/header/HMenu/HMenu.js","app/partials/layout/AnimateLoading.js","_metronic/layout/header/Header.js","_metronic/layout/assets/layout-svg-icons/File-plus.svg","_metronic/layout/sub-header/components/QuickActions.js","_metronic/layout/assets/layout-svg-icons/SortNum1.svg","_metronic/layout/sub-header/SubHeader.js","_metronic/layout/header/HeaderMobile.js","_metronic/layout/brand/Brand.js","_metronic/layout/aside/MenuSection.js","_metronic/layout/aside/MenuItemSeparator.js","_metronic/layout/aside/MenuItemText.js","_metronic/layout/aside/MenuSubmenu.js","_metronic/layout/aside/MenuItem.js","_metronic/layout/aside/MenuList.js","_metronic/layout/aside/Menu.js","_metronic/layout/aside/AsideLeft.js","_metronic/layout/footer/Footer.js","_metronic/layout/HTMLClassService.js","app/partials/layout/QuickPanel.js","_metronic/layout/KtContent.js","_metronic/layout/Layout.js","app/pages/auth/Login.js","app/pages/auth/Registration.js","app/pages/auth/ForgotPassword.js","app/pages/auth/SetPassword.js","app/pages/auth/AuthPage.js","app/pages/home/CreateBrand.js","app/pages/common/ConfirmInvitation.js","app/pages/crawl/CrawlData.js","app/pages/common/TermsAndConditions.js","app/partials/layout/BackdropLoading.js","app/router/Routes.js","app.js","index.js","_metronic/_assets/js/offcanvas.js","_metronic/utils/utils.js","_metronic/_assets/js/menu.js","_metronic/_assets/js/toggle.js","_metronic/_assets/js/header.js","_metronic/_assets/js/util.js"],"names":["useStyles","makeStyles","root","Privacy","props","classes","className","maxWidth","to","src","toAbsoluteUrl","actionTypes","initialState","lang","reducer","persistReducer","storage","key","state","action","type","payload","actions","setLanguage","initLayoutConfig","demo","self","layout","logo","dark","light","brand","green","loader","enabled","message","colors","primary","success","info","warning","danger","base","label","shape","toolbar","display","header","width","skin","fixed","desktop","mobile","menu","arrow","toggle","submenu","accordion","subheader","displayDesc","displayDaterangepicker","clear","style","content","aside","minimize","default","footer","dropdown","scroll","LayoutConfig","JSON","parse","stringify","ROLES","ROLE_DETAIL","brandAdmin","level","brandOwner","systemAdmin","PERMISSIONS","items","title","icon","page","permissions","role","SetMenuConfig","SetLayoutConfigs","SetLayoutConfigsWithPageRefresh","SetHtmlClassService","selectors","getClasses","store","params","htmlClassServiceObjects","builder","path","toString","getAttributes","getConfig","layoutConfig","objectPath","get","getLogo","menuAsideLeftSkin","logoObject","logos","Object","keys","e","getStickyLogo","menuConfig","MenuConfig","undefined","blacklist","setMenuConfig","setLayoutConfigs","setLayoutConfigsWithPageRefresh","setHtmlClassService","LayoutContext","State","createContext","Dispatch","findPageConfig","currentPage","breadcrumbs","Array","isArray","item","pageConfig","push","init","pathname","slice","reverse","breadcrumb","description","splashScreen","refs","desc","nextState","id","nextRefs","LayoutContextProvider","history","children","useReducer","location","dispatch","useEffect","listen","splashScreenRefs","splashScreenVisible","useMemo","length","document","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","Provider","value","LayoutContextConsumer","Consumer","LayoutSplashScreen","visible","useContext","Math","random","axiosInstance","axios","create","baseURL","withCredentials","interceptors","response","use","_","dispatchEvent","CustomEvent","SET_PASSWORD_URL","token","INVITE_USER","brandId","ACCEPT_INVITATION","REMOVE_ADMIN","register","email","password","data","FormData","append","method","url","getRoleList","inviteUser","LayoutInitializer","htmlClassService","useDispatch","builderState","useSelector","allMessages","de","en","es","fr","ja","zh","I18nProvider","locale","i18n","messages","theme","createMuiTheme","typography","fontFamily","join","body","fontSize","palette","contrastThreshold","main","secondary","contrastText","error","MuiButtonBase","disableRipple","MuiPopover","elevation","ThemeProvider","metronic","forgotLastLocation","utils","getLastLocation","localStorateLocations","_userLocations","pop","initialBrandState","selectedBrand","selectedShop","selectedSource","brandList","filter","from","mode","whitelist","shop","source","_id","updatedList","map","saga","initialAuthState","user","authToken","defaultPage","isFirstLoad","roles","routerHelpers","login","logout","requestUser","fulfillUser","setPage","setFirstLoad","flag","setRoles","SetPermissions","updateUser","takeLatest","loginSaga","registerSaga","put","userRequested","initialCommonState","isShowBackdropLoading","processList","bankList","balanceList","rootSaga","appReducer","combineReducers","auth","common","process","finance","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","localStorage","applyMiddleware","persistor","persistStore","run","globalStyles","datatable","border","table","tableHeader","fontWeight","margin","padding","headerLegend","borderBottom","headerTitle","color","form","textAlign","right","formContainer","leftBtnContainer","justifyContent","btnChip","backgroundColor","borderRadius","FILTER_OPTION","DATE_OPTIONS","datepickerContainer","overflow","position","background","dateFilterBtnGroup","RangeDatePicker","setFrom","setTo","setMode","isShowDateSelection","isShowAll","datepickerWrapper","useRef","useState","Date","setEnteredTo","setIsShowDatePicker","monthSelection","setMonthSelection","moment","format","tempFrom","setTempFrom","tempTo","setTempTo","handleClickOutside","event","current","contains","target","changeDateRange","option","eDate","sDate","subtract","startOf","_d","addEventListener","removeEventListener","alignItems","marginRight","noValidate","onBlur","onChange","ButtonGroup","aria-label","Button","onClick","FormControl","marginLeft","height","variant","Select","val","currentYear","getFullYear","endOf","handleChangeMonthSelection","maxHeight","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","labelId","index","BRAND_DETAIL_URL","EDIT_BRAND_URL","GET_FILES_FROM_GOOGLE_SHEET","SELECT_FILE_FROM_GOOGLE_DRIVE","DISCONNECT","shopid","UPLOAD_EXTERNAL_DATA","DELETE_BRAND","UPLOAD_ORDER","sourceId","CONNECT_SENDO","SELECT_SPREADSHEET","connectSendo","shopKey","secretKey","editBrand","name","avatar","getBrandList","getBrandDetail","uploadExternalData","formdata","uploadOrder","REVENUE_BY_BRAND","PRODUCT_HIGHLIGHT_BY_BRAND","GET_ORDER_LIST","limit","endpoint","INTERNAL_REPORT","groupBy","ADD_USER_TO_DEPARTMENTS","departId","getUserList","ORDER_STATUS","shopee","CANCELLED","code","TO_RETURN","READY_TO_SHIP","IN_CANCEL","COMPLETED","SHIPPED","sendo","7","8","10","2","3","6","11","12","14","15","19","23","13","21","22","lazada","canceled","returned","failed","pending","ready_to_ship","delivered","shipped","INFO_ST_DOMESTIC_RETURN_AT_TRANSIT_HUB","googleSheet","Canceled","Done","Shipping","tiki","complete","successful_delivery","closed","queueing","processing","waiting_payment","handover_to_partner","packaging","picking","shipping","paid","hold","payment_review","finished_packing","ORDER_CANCELLED_ORDER","others","parseLocaleString","num","isPrice","Number","toLocaleString","maximumFractionDigits","isValidEmail","test","String","toLowerCase","randomColor","padStart","groupOrderStatus","status","baseConfig","SHIPPING","amount","orderCount","forEach","count","totalAmount","calucateGrowthRate","oldRevenue","revenue","percentageChange","abs","isInvariant","isIncrease","isAuthenticated","userPermission","targetPermission","mergedPermissions","Set","size","MARKET_PLACE","image","uploadSource","yes24","CELL_TYPE","VALID_FILES","FILE_COLLUMNS_CONFIG","date_request","isRequired","marketplace","order_number","shipping_code","seller_sku","item_name","unit_price","paid_price","total","created_at","quality_confirm","confirm_time","pakaging_time","deliver_time","year","month","day","unique","uploadFormTitle","marginBottom","dragAndDropBox","uploadFormAction","flexWrap","uploadIcon","marginTop","uploadFormProgress","borderTop","paddingTop","progressBar","uploadedFile","paddingBottom","connectForm","errorBox","errorBoxLegend","cancelErrorBox","top","cursor","injectIntl","progress","setProgress","err","setErr","fileInput","file","setFile","setData","completedRecords","setCompletedRecords","intl","useHistory","handleCloseErrPopup","uploadFile","timer","setInterval","oldProgress","validateFile","then","res","catch","clearInterval","tempErr","Promise","resolve","reject","includes","split","getFileExtension","sheet","reader","FileReader","onload","result","Uint8Array","workbook","XLSX","read","SheetNames","sheetName","roa","sheet_to_json","Sheets","raw","readAsArrayBuffer","readExcelFile","col","shift","keyCol","c","trim","replace","row","sItem","sIndex","isValid","uploadFormContainer","uploadBox","onDragOver","stopPropagation","preventDefault","dataTransfer","dropEffect","onDrop","files","Icon","htmlFor","ref","Avatar","LinearProgress","resultBox","initialValues","fileName","validate","values","errors","formatMessage","onSubmit","setStatus","setSubmitting","chunk","promiseArr","executePromise","array","tempArray","splice","temp","onDone","touched","handleChange","handleBlur","handleSubmit","isSubmitting","resetForm","FormGroup","TextField","required","fullWidth","placeholder","helperText","Boolean","disabled","clsx","FormEntry","gridRow","setGridRow","gridCol","setGridCol","errPopup","setErrPopup","submitLoading","setSubmitLoading","initData","initialRow","tempRow","tempCol","editable","i","validateRow","columns","rowGetter","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","rows","enableCellSelect","isEmptyRow","errMsg","Dialog","open","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","colSetting","whiteSpace","sourceFilterBtnGroup","filterSection","createRoleForm","createRoleFormContainer","formLegend","tablePagination","connect","shops","setShops","setBrandList","errorMessage","setErrorMessage","loading","setLoading","orders","setOrders","setLimit","setCount","addOrderPopup","setAddOrderPopup","uploadSourcePopup","setUploadSourcePopup","formEntryPopup","setFormEntryPopup","useLocation","search","paramsBrandId","useParams","paramsShopId","shopId","paramsSource","brandTypes","currentShop","currentSource","resizable","rowData","allowEdit","fetchData","changeUrl","changeShop","shopList","p","getOrders","orderList","getPropertybySource","property","itemCol","Fragment","sindex","Table","TableHead","TableCell","tableCell","align","TableBody","TableRow","getSendoOrderLabel","CircularProgress","gotoPage","ceil","TablePagination","onChangePage","onChangeRowsPerPage","component","rowsPerPage","SelectProps","native","boxShadow","detailSection","left","bottom","zIndex","topSection","minHeight","textTransform","lineHeight","RevenueCard","tooltip","detail","showIcon","alt","toUpperCase","Tooltip","STATUS_CONFIG","quantity","OrderStatusCard","totalOrder","setTotalOrders","orderData","setOrderData","Grid","container","spacing","xs","sm","transform","DonutChart","revenueList","donutChartData","labels","datasets","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","find","donutChartOptions","responsive","maintainAspectRatio","legend","fontColor","boxWidth","tooltips","callbacks","tooltipItem","datasetIndex","plugins","render","elements","arc","borderWidth","options","LineChart","dataset","currentValue","scales","yAxes","ticks","beginAtZero","callback","date","borderColor","dataTemp","sort","x","y","uniq","GROUP_BY","MARKET_FILTER","ALL","chart","sku","orderStatus","marketFilterContainer","backgroundImage","backgroundSize","marketFilter","minWidth","fontStyle","tableLegend","brandDropdown","setRevenueList","comparisonRevenueList","setComparisonRevenueList","setSku","bestSellingSKU","setBestSellingSKU","orderStatusList","setOrderStatusList","setMarketFilter","totalRevenue","setTotalRevenue","cancelledTotal","setCancelledTotal","comparisonTotalRevenue","setComparisonTotalRevenue","comparisonCancelledTotal","setComparisonCancelledTotal","revenueTooltip","setRevenueTooltip","startDateConfig","hour","minute","second","millisecond","endDateConfig","startDate","endDate","dateFilterOption","commonTypes","getRevenue","getRangeDateComparison","sortBy","o","console","log","getGroupBy","s","diff","range","set","toISOString","dateFrom","dateTo","isGetOldRevenue","getRevenueByBrand","dataStatitics","shopeeEscrowAmount","escrowAmount","reduce","a","b","grantTotal","revenueTemp","gmv","r","utc","dayOfMonth","local","assign","getProductHighlightByBrand","md","lg","xl","lineChart","chartContainer","lineChartTitle","donutChart","skuStatitics","tableContainer","images","cropImageContainer","cropImageWrapper","formAction","CropImageForm","aspect","unit","avatarCrop","setAvatarCrop","imageRef","setImageRef","makeClientCrop","crop","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","toBlob","blob","URL","createObjectURL","getCroppedImg","img","onSave","circularCrop","onImageLoaded","ruleOfThirds","onCancel","ConfirmationPopup","Link","onOK","REMOVE_ADMIN_PERMISSONS","permissionList","listStyle","admins","selectedRole","setSelectedRole","deleteLoading","setDeleteLoading","adminLoading","successToast","setSuccessToast","deleteConfirmationPopup","setDeleteConfirmationPopup","selectedUser","setSelectedUser","userRole","onUpdatedAdmin","flexDirection","InputProps","startAdornment","InputLabel","horizontalAlign","cellFormat","isPending","href","Snackbar","autoHideDuration","removeAdmin","btnAction","brandLogo","brandInfo","brandLogoImg","uploadAction","actionBtn","brandName","brandNameViewMode","brandNameEditMode","CONNECT_PERMISSION","DISCONNECT_PERMISSION","setBrand","isEditMode","setIsEditMode","tempImageURL","setTempImageURL","brandDefaultLogo","setBrandDefaultLogo","logoErr","setLogoErr","openUploadDataDialog","setUploadDataDialog","uploadLogoLoading","setUploadLogoLoading","disconnectId","setDisconnectId","disconnectConfirmationPopup","setDisconnectConfirmationPopup","disconnectLoading","setDisconnectLoading","connectingURL","setConnectingURL","connectSendoPopup","setConnectSendoPopup","shop_key","secret_key","sendoKey","setSendoKey","fetchBrandDetail","uploadImage","webkitURL","handleCloseUploadDialog","getConnectLink","enableReinitialize","autoComplete","for","when","disconnected","connectedShop","shop_name","created","spreadSheet","invitations","ROUTES","pointerEvent","currentPath","setCurrentPath","getCurrentPath","m","RevenueStatistics","OrderList","BrandDetail","shopStatus","deleteBtn","searchBlock","CREATE_BRAND_PERMISSONS","UPDATE_BRAND_PERMISSONS","setUserAvatarList","selectedDeleteBrand","setSelectedDeleteBrand","List","ListItem","listFile","tableRow","listFolder","overflowY","borderRight","listStyleType","transition","setFileNameForm","selectedFile","setSelectedFile","speadSheetList","webViewLink","selectSpreadsheet","Transition","React","forwardRef","Slide","direction","pointerEvents","formCotnainer","formWrapper","formBanner","formTitle","marketOption","marketOptionLink","flex","connectBtn","marketOptionGroup","googleSheetDialog","setSource","uploadExternalDialog","setUploadExternalDialog","googleSheetFileDialog","setGoogleSheetFileDialog","setSpeadSheetList","setIsDriveConnected","setShop","isCreateSheet","setIsCreateSheet","googleWindow","getFileTimer","getGoogleSheetFiles","spreadSheetList","close","formContent","justify","TransitionComponent","selectGoogleDriveFile","win","w","h","outerHeight","screenY","outerWidth","screenX","popupWindow","userInfo","commomInfor","userLogo","userLogoImg","avatarContainer","previewAvatar","uploadBtn","resetPasswordForm","resetPasswordFormContainer","openChangePasswordDialog","setChangePasswordDialog","userDefaultLogo","setUserDefaultLogo","changePasswordLoading","setChangePasswordLoading","oldPW","newPW","confirmPW","pwConfig","setPWConfig","authAction","readOnly","opacity","editUser","oldpassword","confirmPassword","oldPas","newPas","changePassword","endAdornment","IconButton","ActivityLog","setLogs","ShopList","wordBreak","sourceDetail","syncDate","users","setUsers","emails","setEmails","setEmail","createRolePopup","setCreateRolePopup","createRoleloading","setCreateRoleLoading","selectedPermissons","setSelectedPermissons","emailList","localeCompare","end","scope","start","createRole","FormControlLabel","control","Checkbox","checked","indexOf","handleSelectPermissions","ischecked","addRoleForm","addRoleFormContainer","addRoleDialog","setAddRoleDialog","selectedBrands","setSelectedBrands","selectedEmail","setSelectedEmail","selectBrand","requestes","addAdmin","input","Input","multiple","renderValue","selected","names","ListItemText","FILTER_CHART","revenueSection","brandFilter","setFilter","dateFilter","queryString","groupedData","setgroupedData","brands","setBrands","chartData","setChartData","oldGroupedData","setOldGroupedData","oldBrands","setOldBrands","chartDataByBrand","setChartDataByBrand","filterChart","setFilterChart","setBrandFilter","apiRes","setApiRes","oldApiRes","setOldApiRes","getLostRevenue","getStatus","getLostOrder","settings","dots","infinite","speed","slidesToShow","slidesToScroll","isCheckAll","checkAllBrandFilter","oldRangeDate","visualizeData","refactorData","f","t","getBrandReport","tempBrand","tempChartData","tempDate","tempTotalAmount","tempChartDataByBrand","lost_revenue","total_order","total_lost_order","revenueGroupByStatusBrand","subItem","total_lost_revenue","revenueGroupByTimeBrand","time","newDate","newData","newTotalAmount","tempData","handleChangeBrandFilter","newGMV","oldGMV","gmvComparison","newAOV","oldAOV","aovComparison","newLostRevenue","oldLostRevenue","lostRevenueComparison","newLostOrder","oldLostOrder","lostOrderComparison","newNMV","oldNMV","nmvComparison","newRateofLostRevenue","oldRateofLostRevenue","rateofLostRevenueComparison","CREATE_BANK_ACCOUNT","bankId","ADD_BALANCE","GET_BALANCE","DELETE_ACCOUNT","EDIT_BALANCE","balanceId","GET_BALANCE_DETAIL","accountNumber","DELETE_BANK","DELETE_BALANCE","getListBank","bankAccountId","bankAcc","setBankAcc","selectedBalance","setSelectedBalance","editBalancePopup","setEditBalancePopup","deleteBalancePopup","setDeleteBalancePopup","deleteBalanceLoading","setDeleteBalanceLoading","balances","balance","editBalance","bankName","accountName","createBankForm","createBankFormContainer","bank","deleteBankPopup","setDeleteBankPopup","createBankAccountPopup","setCreateBankAccountPopup","selectedAccount","setSelectedAccount","fetchBankList","accounts","bank_name","bank_account","createBankAccount","deleteAccount","createBankPopup","setCreateBankPopup","deleteBankLoading","setDeleteBankLoading","setBankList","selectedBank","setSelectedBank","fetchBankListLoading","setFetchBankListLoading","createBank","FinanceReport","recipientsList","recipient","float","financeReportPopup","setFinanceReportPopup","setBalance","setTotal","recipients","setRecipients","setRecipient","recipientStatus","setRecipientStatus","recipientLoading","setRecipientLoading","fetchBalance","getBalance","acc","obj","addBalance","banbalance","Chip","onDelete","onKeyUp","keyCode","handleInputRecipient","sendReport","departmentList","deparmentCard","addUserBtn","deparmentName","paddingRight","departmentPopup","setDepartmentPopup","deparments","setDeparments","addUserPopup","setAddUserPopup","selectedDepartment","setSelectedDepartment","fetchDepartmentList","fetchUserList","d","userIndex","createDepartments","addUserToDepartment","CheckBox","CREATE_STEP","processId","EDIT_STEP","stepSlug","CREATE_REQUEST","GET_REQUEST_DETAIL","requestId","getProcessList","createProcessPopup","setCreateProcessPopup","processes","setProcesses","fetchProcessList","steps","createProcess","ProcessForm","setInitialValues","request","stepId","isPreview","currentStep","step","setSteps","selectedAction","setSelectedAction","inputData","createRequest","_processId","controller","exceptProperty","button","instructions","currentForm","activeStep","selectProcessPopup","setSelectProcessPopup","setProcess","isShowStep","setIsShowStep","processObj","setProcessObj","selectedStep","setSelectedStep","requestList","setRequestList","fetchRequestListLoading","setFetchRequestListLoading","requestDetailPopup","setRequestDetailPopup","selectedRequest","fetchRequestList","Stepper","labelProps","Step","StepLabel","Typography","stepName","requestName","formData","selectRequest","processCard","processName","stepList","stepItem","stepOptions","absoluteAction","stepHeader","stepTitle","stepIconButton","stepField","baseField","hint","baseNextStep","nextStep","createStepPopup","setcreateStepPopup","currentProcess","setCurrentProcess","stepActionList","setStepActionList","fetchStepActionList","tempStep","cloneDeep","removeStep","TextareaAutosize","rowsMax","stepDes","handleChangeStepDescription","addField","subIndex","removeField","handleChangeKey","handleChangeLabel","handleChangetype","string","handleCheckRequired","handleChangeHint","addNextStep","removeNextStep","handleChangeActionName","handleChangeActionController","handleChangeActionDescription","processors","pro","proIndex","u","editPromise","editStep","tempProcessor","handleSelectUser","processor","some","slug","createStep","tempSteps","setFieldValue","RequestDetail","setSelectedRequest","getRequestDetail","processCardContainer","processCardBanner","processCardAction","ProcessDashboard","requestCard","RequestDashboard","requestStatusBar","requestCardContainer","informationSection","downloadSection","downloadOptionsSection","LiveStreaming","information","os","cIndex","DELETE_TARGET_DATA","targetId","EDIT_GROUP","groupId","getProductGroup","category","getProductPool","chartSection","actionSection","pricingList","setPricingList","addLinkDialog","setAddLinkDialog","categories","setCategories","filterCategory","setFilterCategory","selectedCategory","setSelectedCategory","selectedTarget","setSelectedTarget","selectedData","setSelectedData","chartTarget","setChartTarget","link","productName","groupContent","setGroupContent","fetchPricingList","visualizeChartData","targets","currentPrice","getPricingList","addGroup","handleChangeChartFilter","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","legendTemplate","marignTop","originPrice","stock","sold","gorup","txt","group","addLink","removeGroup","dataId","deleteTargetData","EDIT_CAMPAIGN","campaignId","GET_CAMPAIGN_DETAIL","createPostPopup","setCreatePostPopup","postList","setPostList","fetchPostListLoading","setFetchPostListLoading","fetchPostList","createPost","PostDetail","toolbarClassName","wrapperClassName","editorClassName","uploadCallback","xhr","XMLHttpRequest","setRequestHeader","send","responseText","present","mandatory","createCampaignPopup","setCreateCampaignPopup","editCampaignPopup","setEditCampaignPopup","campaignList","setCampaignList","fetchCampaignListLoading","setFetchCampaignListLoading","selectedCampaign","setSelectedCampagin","fetchCampaignList","handleGetCampaignDetail","createCampaign","outputStream","editCampaign","CrawlHistory","historyList","setHistoryList","fetchHistoryListLoading","setFetchHistoryListLoading","fetchHistory","keyword","productList","setProductPool","fetchProductPoolLoading","setFetchProductPoolLoading","fetchProductPool","productOriginId","addProduct","setCreateGroupPopup","groupList","setProductGroup","setProductList","selectedProduct","setSelectedProduct","setFetchProductGroupLoading","selectedGroup","setSelectedGroup","fetchProductGroup","fetchProduct","groupName","groupDes","products","handleEdit","editGroup","product","HOME_ROUTER_CONFIG","Dashboard","permissons","BrandList","ConnectMarket","Profile","Authorization","PermissionList","UserList","InternalReport","FinanceOverview","BankAccountDetail","BankManagement","BankDetail","Deparments","ProcessSetting","RequestPage","CreateProcess","Compare","ProductPool","PostManagement","isExact","CampaignManagement","Group","setOpen","userPermissions","isLoadedUserProfile","setIsLoadedUserProfile","fallback","route","DialogActions","ErrorPage1","ErrorPage2","ErrorPage3","ErrorPage4","ErrorPage5","ErrorPage6","ErrorsPage","exact","Logout","this","brandAction","Component","SearchResult","iconImage","iconClassName","text","HeaderDropdownToggle","displayName","_extends","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","stroke","strokeWidth","fillRule","_ref","svgRef","viewBox","ForwardRef","perfectScrollbarOptions","wheelSpeed","wheelPropagation","fakeData","rx","points","languages","LanguageSelector","iconType","currentLanguage","Dropdown","drop","alignRight","Toggle","as","Menu","language","setState","reload","UserProfile","showHi","showAvatar","showBadge","Topbar","HMenuItemInner","parentItem","bullet","itemCssClassWithBullet","badge","HMenuColumn","currentUrl","heading","child","HMenuItem","getItemAttrSubmenuToggle","isMenuItemIsActive","isMenuRootItemIsActive","_subItem","_column","getItemCssClasses","isActive","menuType","parseInt","customClass","getItemMenuSubmenuClass","alignment","rootArrowEnabled","aria-haspopup","data-ktmenu-submenu-toggle","data-ktmenu-submenu-mode","data-ktmenu-dropdown-toggle-class","offcanvasOptions","overlay","baseClass","closeBy","toggleBy","HMenu","offCanvasCommonRef","createRef","ktMenuCommonRef","initOffCanvas","KTOffcanvas","initKTMenu","menuOptions","tablet","slideSpeed","expandAll","menuDesktopMode","getAttribute","KTMenu","headerSelfSkin","disabledAsideSelfDisplay","ktMenuClasses","ulClasses","getHeaderLogo","withRouter","config","AnimateLoading","routeChanged","nextProps","animate","animateTimeout","stopAnimate","animateInterval","stopAnimateTimeout","Progress","Header","headerCommonRef","KTHeader","menuHeaderDisplay","headerAttributes","headerClasses","fluid","QuickActionsDropdownToggle","SubHeader","subheaderCssClasses","subheaderContainerCssClasses","subheaderMobileToggle","HeaderMobile","toggleButtonRef","KTToggle","toggleOptions","headerLogo","asideDisplay","headerMenuSelfDisplay","headerMobileCssClasses","headerMobileAttributes","targetState","togglerState","Brand","ktToggleRef","brandClasses","asideSelfMinimizeToggle","headerStickyLogo","MenuSection","section","MenuItemSeparator","MenuItemText","translate","defaultMessage","MenuSubmenu","separator","MenuItem","asideLeftLIRef","isDropdown","submenuToggle","mouseEnter","setAttribute","mouseLeave","removeAttribute","data-placement","onMouseEnter","onMouseLeave","MenuList","AsideLeft","asideMenuRef","outsideTm","insideTm","KTUtil","isInResponsiveRange","removeCSSClass","kUtilIsResponsiveRange","initMenu","setupMenuOptions","asideMenuAttr","asideClassesFromConfig","data-ktmenu-vertical","disableAsideSelfDisplay","asideOffCanvasRef","menuCanvasOptions","disableScroll","Footer","today","footerClasses","footerContainerClasses","rel","HtmlClassService","header_container","header_mobile","header_menu","aside_menu","subheader_container","content_container","footer_container","attributes","initLayout","initLoader","initHeader","initSubheader","initContent","initAside","initFooter","initSkin","has","_selfBodyClass","cssClass","additionalHeaderCssClass","asideSubmenuDHoverTimeout","QuickPanel","selectedTab","setTab","_tabName","Tab","Container","defaultActiveKey","Nav","onSelect","Item","eventKey","Content","Pane","contentContainerClasses","match","useRouteMatch","cssClassesState","setCssClassesState","fullClasses","startAnimation","el","timeOutId","HTMLClassService","selfLayout","subheaderDisplay","desktopHeaderDisplay","setConfig","contentCssClasses","TabPanel","other","hidden","Box","a11yProps","willChange","tab","loginLoading","setLoginLoading","registerLoading","setRegisterLoading","loginPW","registerPW","registerCPW","Tabs","indicatorColor","textColor","centered","onChangeIndex","fullName","phone","company","username","accessToken","requestPassword","autoFocus","setPassword","paper","rightSideBanner","backgroundPosition","backgroundRepeat","bannerTitle","formHeader","formFooter","AuthPage","Login","Registration","ForgotPassword","SetPassword","mainLogo","formLogo","createBtn","loadingButtonStyle","setLoadingButtonStyle","disableLoading","createBrand","errMgs","invitationTitle","invitationAction","setBrandId","registerDialog","setRegisterDialog","isMember","setIsMember","setRole","cPassowrd","VIEW_INVITATION","viewInvitation","isObject","acceptInvitation","invitationContainer","errorSection","invitation","textDecoration","cPassword","TRICKS","CELL_FORMAT","MARKET","fields","price","price_before_discount","discount","historical_sold","view_count","liked_count","cmt_count","rating_star","ratings_count","shop_location","setProducts","setTimer","market","setMarket","marketList","searchBy","setSearchBy","errMessage","setErrMessage","defaultValue","getCellFormatTemplate","exportExcel","wb","book_new","Props","Title","Subject","Author","CreatedDate","ws_data","ws","aoa_to_sheet","wbout","write","bookType","saveAs","Blob","buf","ArrayBuffer","view","charCodeAt","s2ab","getTime","handleSearchByChange","getShopId","isLink","CRAWL_DATA_GET_JOB","getJob","job","localTimer","CRAWL_DATA_GET_DATA","getData","sum","TermsAndConditions","BackdropLoading","Routes","lastLocation","_useLocations","acceptLocation","useLastLocation","urls","isAuthorized","userLastLocation","shallowEqual","lazy","ConfirmInvitation","CrawlData","LogoutPage","CreateBrand","App","basename","Suspense","setupAxios","ReactDOM","elementId","the","element","defaultOptions","Plugin","construct","build","events","deepExtend","classBase","classShown","classOverlay","hasClass","addEvent","hide","isShown","eventTrigger","show","togglerClass","addClass","insertAfter","removeClass","attr","args","one","handler","fired","setDefaults","on","module","exports","ele","cls","reg","RegExp","getState","headers","removeStorage","setItem","getStorage","now","expiresIn","getItem","setStorage","expires","schedule","rememberPosition","autoScroll","autoScrollSpeed","reset","eventHandlers","pauseDropdownHoverTime","uid","getUniqueID","update","resetSubmenuProps","handleSubmenuAccordion","getSubmenuMode","isConditionalSubmenuDropdown","handleSubmenuDrodownHoverEnter","handleSubmenuDrodownHoverExit","handleSubmenuDropdownClick","handleSubmenuDropdownTabClick","handleLinkClick","scrollInit","off","scrollDestroy","mobileNativeScroll","windowScroll","resetHeightOnDestroy","handleWindowResize","scrollUpdate","scrollTop","hasAttr","isset","hasClasses","submenus","findAll","len","css","resumeDropdownHover","showSubmenuDropdown","hideSubmenuDropdown","closest","hideSubmenuDropdowns","handleSubmenuDropdownClose","shown","querySelectorAll","query","li","subnav","closables","el_","submenu_","slideUp","slideDown","scrollToItem","scrollTo","classAlso","j","cnt","list","createSubmenuDropdownClickDropoff","dropoff","appendChild","pauseDropdownHover","resetActiveItem","parents","i_","len_","setActiveItem","getBreadcrumbs","innerHTML","submenuLink","getPageTitle","removeEvent","scrollReInit","hideDropdown","hideDropdowns","addResizeHandler","parentNode","toggleOn","toggleOff","classic","offset","lastScrollTop","eventTriggerState","getViewPort","getDocumentHeight","st","getScrollTop","Element","matches","msMatchesSelector","webkitMatchesSelector","ancestor","documentElement","parentElement","elem","removeChild","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","timeToCall","max","Document","DocumentFragment","defineProperty","configurable","enumerable","writable","argArr","docFrag","createDocumentFragment","argItem","isNode","Node","createTextNode","insertBefore","firstChild","KTUtilElementDataStore","KTUtilElementDataStoreID","KTUtilDelegatedEventHandlers","resizeHandlers","breakpoints","_windowResizeHandler","_runResizeHandlers","removeResizeHandler","runResizeHandlers","resize","Event","evt","createEvent","initUIEvent","getURLParam","paramName","substring","unescape","isMobileDevice","getBreakpoint","isDesktopDevice","breakpoint","prefix","floor","stone","Error","getHighestZindex","isNaN","hasFixedPositionedParent","sleep","milliseconds","getRandomInt","min","isAngularVersion","Zone","out","extend","nodeType","getElementsByTagName","getElementsByClassName","getByID","getByTag","getByClass","classesArr","classNames","triggerCustomEvent","eventName","initCustomEvent","triggerEvent","node","doc","ownerDocument","eventClass","bubbles","initEvent","synthetic","fireEvent","createEventObject","elm","eventTriggered","currentTarget","triggered","parent","querySelector","referenceNode","nextSibling","selector","matchesSelector","mozMatchesSelector","oMatchesSelector","childNodes","l","tagName","customDataTag","parseFloat","offsetWidth","rect","getClientRects","getBoundingClientRect","defaultView","pageYOffset","pageXOffset","offsetHeight","removeAttr","duration","easing","done","easings","linear","rAF","change","performance","loop","timestamp","actualCss","prop","cache","HTMLElement","cssText","actualHeight","actualWidth","getScroll","browserSupportsBoxModel","styleProp","getComputedStyle","getPropertyValue","currentStyle","str","letter","oldLeft","oldRsLeft","runtimeStyle","pixelLeft","slide","dir","recalcMaxHeight","calcHeight","calcPaddingTop","calcPaddingBottom","eventId","callee","hash","animateClass","animationName","animation","animations","OAnimation","MozAnimation","WebkitAnimation","msAnimation","transitionEnd","transitions","OTransition","MozTransition","WebkitTransition","msTransition","animationEnd","animateDelay","animateDuration","targetPos","scrollPos","ready","attachEvent","readyState","isEmpty","numberString","nStr","x1","x2","rgx","detectIE","ua","navigator","userAgent","msie","rv","edge","isRTL","ps","Function","disableForMobile","destroy","desktopNativeScroll","PerfectScrollbar","swipeEasing","minScrollbarLength","maxScrollbarLength","suppressScrollX","Cookies","pos","scrollUpdateAll","scrollers","setHTML","html","getHTML","scrollHeight","clientHeight","scrollingElement"],"mappings":"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","file":"static/js/main.9c65fc4e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\"\nimport { Link } from \"react-router-dom\";\n\nPrivacy.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    }\n})\n\nfunction Privacy(props) {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <div className=\"sticky-header\">\n                <Container maxWidth=\"lg\">\n                    <Link to=\"/\"><img src={toAbsoluteUrl('/media/logos/ece-logo.svg')} /></Link>\n                </Container>\n            </div>\n            <Container maxWidth=\"lg\">\n                <div className=\"information\">\n                    <p className=\"information__legend\">Privacy</p>\n                    <p className=\"information__title\">CHÍNH SÁCH BẢO VỆ<br />\nTHÔNG TIN CÁ NHÂN CỦA THÀNH VIÊN</p>\n                    <ul className=\"information__level1\">\n                        <li><span>Mục đích và phạm vi thu thập thông tin khách hàng</span>\n                            <ul className=\"information__level2\">\n                                <li><span>Mục đích thu thập thông tin:</span>\n                                    <ul className=\"information__level3\">\n                                        <li><span>\n                                            Sử dụng để xác nhận Thành viên khi Thành viên dùng thông tin để đăng nhập vào hệ\n                                            thống của ECOMEASY.</span></li>\n                                        <li><span>Sử dụng để xác nhận Thành viên khi Thành viên dùng thông tin để đăng nhập vào hệ\n                                            thống của ECOMEASY.</span></li>\n                                        <li><span>Dùng để giao dịch trong khi mua hàng hóa, dịch của Đối tác trên ECOMEASY như dùng\n                                        để đặt dịch vụ, mua hàng hóa, gửi hàng hóa, thanh toán tiền sau khi mua hàng hóa, dịch\n                                            vụ....</span></li>\n                                        <li><span>ECOMEASY thu thập thông tin Thành viên để quản lý thông tin, phục vụ cho hoạt động\n                                        cung cấp mã sản phẩm và hỗ trợ sau mua, để hồi đáp những câu hỏi hay thực hiện các yêu\n                                            cầu của Thành viên.</span></li>\n                                        <li><span>Dùng trong tuyên truyền quảng cáo các thông tin của ECOMEASY đến các Thành viên\n                                            gửi email giới thiệu về các sản phẩm dịch vụ trên ECOMEASY.</span></li>\n                                        <li><span>Cung cấp thông tin về dịch vụ bằng email, bưu điện, điện thoại...</span></li>\n                                        <li><span>Dùng để cá nhân hóa nội dung mỗi khi Thành viên truy cập vào ECOMEASY, dựa theo\n                                            giới tính, tuổi, nơi sinh sống, sở thích, lịch sử mua hàng, trang web Thành viên đã xem.</span></li>\n                                        <li><span>Dùng để phân tích xu hướng tiêu dùng của Thành viên, với mục đích xây dựng những\n                                            dịch vụ mới, hoặc cải thiện những dịch vụ cũ.</span></li>\n                                        <li><span>Dùng để liên lạc với Thành viên khi ECOMEASY điều tra thông tin Thành viên, tổ chức\n                                            khuyến mại, trao đổi ý kiến thông tin trên bảng đánh giá, bình luận.</span></li>\n                                        <li><span>Dùng để trả lời khi Thành viên thắc mắc: công ty chúng tôi sẽ trả lời Thành viên bằng\n                                            email, điện thoại, hoặc gửi thư tới địa chỉ của Thành viên, khi Thành viên thắc mắc.</span></li>\n                                        <li><span>Dùng trong các dịch vụ khác do ECOMEASY cung cấp.</span></li>\n                                        <li><span>Dùng cung cấp thông tin cá nhân cho Đối tác.</span></li>\n                                        <li><span>Dùng cho những mục đích khác của ECOMEASY không ghi ở trên. Khi đó chúng tôi sẽ\nthông báo việc sử dụng đó trên ECOMEASY.</span></li>\n                                    </ul>\n                                </li>\n                                <li><span>Phạm vi thu thập thông tin:</span>\n                                    <ul className=\"information__level3\">\n                                        <li><span>\n                                            ECOMEASY tiến hành thu thập các thông tin cá nhân của Thành viên khi Thành viên\n                                            đăng ký Thành viên, và các thông tin khác trong quá trình Thành viên phản hồi về chất\nlượng sản phẩm, dịch vụ…</span></li>\n                                        <li><span>Thông tin của Thành viên cung cấp khi đăng ký : Tên, địa chỉ, điện thoại, địa chỉ email,\nsố điện thoại di động, ngày tháng năm sinh, giới tính...</span></li>\n                                        <li><span>Thông tin nhận được khi Thành viên sử dụng dịch vụ: Thông tin do Thành viên đăng trên\n                                        các bảng đánh giá, bình chọn, bình luận về sản phẩm. Thông tin khi các Thành viên trả lời\ncác bảng điều tra thông tin ECOMEASY đưa ra bằng email, hay trên ECOMEASY.</span></li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                        <li><span>Phạm vi sử dụng thông tin</span>\n                            <ul className=\"information__level3\">\n                                <li><span>\n                                    Thông tin của Thành viên chỉ được sử dụng trong hoạt động quản lý và kinh doanh của\n                                    ECOMEASY, cũng như cung cấp cho các bên liên kết. Chúng tôi cũng có thể dùng\n                                    những thông tin chúng tôi tập hợp được để thông báo đến Thành viên những sản phẩm\n                                    hoặc dịch vụ khác đang có trên ECOMEASY hoặc những công ty liên kết với nó hoặc để\n                                    liên hệ với Thành viên để biết quan niệm của Thành viên về những sản phẩm và những\n\n                                    dịch vụ hiện tại hoặc những sản phẩm và dịch vụ mới tiềm năng có thể được đưa ra.\n                                    Thông tin cá nhân của Thành viên có thể bị chia sẻ với những công ty khác, nhưng chỉ khi\ncần thiết để đáp ứng các yêu cầu của Thành viên hay cho những mục đích liên quan.</span></li>\n                                <li><span>Để cung cấp dịch vụ và đủ thông tin đảm bảo cho việc thanh toán, phục vụ hỗ trợ hệ\n                                thống chăm sóc Thành viên, quản lý Thành viên, chăm sóc và nhận ý kiến phản hồi từ\nphía Thành viên.</span></li>\n                            </ul></li>\n                        <li><span>Thời gian lưu trữ thông tin</span>\n                            <ul className=\"information__level3\">\n                                <li><span>\n                                    ECOMEASY có hệ thống máy chủ có khả năng lưu trữ thông tin khách hàng tối thiểu là 02\n                                    năm và tối đa là 05 năm. Trong quá trình hoạt động, ECOMEASY có thể nâng cao khả\nnăng lưu trữ thông tin nếu cần thiết.</span></li>\n                            </ul></li>\n                        <li><span>Những người hoặc tổ chức có thể tiếp cận với các thông tin đó</span>\n                            <ul className=\"information__level3\">\n                                <li><span>Các nhân viên có thẩm quyền của ECOMEASY. Nhân viên được ủy quyền có thể sử\n                                dụng thông tin cá nhân của Thành viên ECOMEASY nhằm mục đích phục vụ kinh\n                                doanh. Nhân viên của ECOMEASY bị ràng buộc bởi Chính Sách Bảo Mật của\n                                ECOMEASY, đòi hỏi họ phải duy trì tính bảo mật của thông tin cá nhân của Thành viên.\n                                Nhân viên nào vi phạm các yêu cầu này có thể bị xử lý kỷ luật, lên đến hình thức chấm\ndứt hợp đồng.</span></li>\n                                <li><span>Những bên thứ ba muốn cung cấp cho Thành viên Sản Phẩm và Dịch vụ của họ khi\n                                Thành viên yêu cầu ECOMEASY thực hiện việc cung cấp thông tin cho những bên thứ\nba này.</span></li>\n                                <li><span>Các bên thứ ba hoặc đối tác mà ECOMEASY đã ký hợp đồng để thực hiện dịch vụ thay\n                                mặt ECOMEASY, ví dụ như để hoàn thành Sản Phẩm và dịch vụ hoặc cho các mục đích\n                                tiếp thị. Tất cả các công ty hoạt động thay mặt cho ECOMEASY đều bắt buộc phải ký kết\n                                các cam kết bảo mật các thông tin cá nhân ECOMEASY cung cấp cho họ và sử dụng\n                                thông tin cá nhân ECOMEASY chia sẻ chỉ để cung cấp các dịch vụ ECOMEASY yêu\ncầu.</span></li>\n                                <li><span>Tòa án, cơ quan nhà nước có thẩm quyền khi ECOMEASY được các cơ quan này yêu cầu\ncung cấp thông tin của Thành viên.</span></li>\n                            </ul></li>\n                        <li><span>Địa chỉ của đơn vị thu thập và quản lý thông tin cá nhân:</span><ul className=\"information__level3\">\n                            <li><span>Đơn vị thu thập và quản lý thông tin: Công ty TNHH ECOMEASY</span></li>\n                            <li><span>Mã số Thuế: 0315191541</span></li>\n                            <li><span>Địa chỉ: Tầng 3, 208-210 Khánh Hội, Phường 6, Quận 4, Tp HCM.</span></li>\n                        </ul></li>\n                        <li><span>Cách thức liên hệ để Thành viên có thể hỏi về hoạt động thu thập, xử lý thông tin\nliên quan đến cá nhân mình</span>\n                            <p>Thành viên có thể sử dụng các phương thức sau để hỏi về hoạt động thu thập, xử lý thông tin\nliên quan đến cá nhân mình:</p>\n                            <ul className=\"information__level3\">\n                                <li><span>Gửi email tới địa chỉ email: lienhe@ecomeasy.asia; hoặc</span></li>\n                                <li><span>Gọi đến số điện thoại 0928625037; hoặc</span></li>\n                                <li><span>Gửi thư đến địa chỉ Công ty TNHH ECOMEASY, Địa chỉ: Tầng 3, 208-210 Khánh Hội, Phường 6, Quận 4, Tp HCM.</span></li>\n                            </ul>\n                        </li>\n                        <li><span>Phương thức và công cụ để Thành viên tiếp cận và chỉnh sửa dữ liệu cá nhân của\nmình trên hệ thống ECOMEASY</span>\n                            <ul className=\"information__level3\">\n                                <li><span>Thành viên có quyền tự kiểm tra, cập nhật, điều chỉnh hoặc hủy bỏ thông tin cá nhân của\n                                mình bằng cách đăng nhập vào tài khoản trên Hệ thống ECOMEASY và chỉnh sửa thông\ntin cá nhân hoặc yêu cầu ECOMEASY thực hiện việc này.</span></li>\n                                <li><span>Khi tiếp nhận những phản hồi này, ECOMEASY sẽ xác nhận lại thông tin, phải có trách\n                                nhiệm trả lời lý do và hướng dẫn Thành viên cập nhật lại thông tin mới hoặc xóa bỏ thông\ntin cá nhân Thành viên tùy thao tác của Thành viên.</span></li>\n                                <li><span>Việc đăng nhập của Thành viên có thể thực hiện trên máy tính, điện thoại, hay các công\ncụ khác có tính năng truy cập vào Ứng dụng ECOMEASY.</span></li>\n                            </ul></li>\n                        <li><span>Cam kết bảo mật thông tin cá nhân thành viên</span>\n                            <ul className=\"information__level3\">\n                                <li><span>ECOMEASY không bán thông tin cá nhân của Thành viên với bên thứ ba vì bất cứ lý do\nnào.</span></li>\n                                <li><span>ECOMEASY chỉ tập hợp lại các thông tin cá nhân trong phạm vi phù hợp và cần thiết\n                                cho mục đích thương mại đúng đắn của ECOMEASY. ECOMEASY duy trì các biện\n                                pháp thích hợp nhằm bảo đảm tính an toàn, nguyên vẹn, độ chính xác, và tính bảo mật\nnhững thông tin mà Người sử dụng đã cung cấp.</span></li>\n                                <li><span>Thông tin cá nhân, thông tin riêng của người sử dụng được thu thập, lưu trữ và bảo vệ\n                                một cách nghiêm túc, chính xác và bảo mật. Các thông tin cá nhân, thông tin riêng của\n                                người sử dụng sẽ được lưu trữ theo các bước và thực hiện bảo mật nghiêm ngặt theo các\nquy định của pháp luật</span></li>\n                                <li><span>ECOMEASY đảm bảo an toàn, an ninh cho thông tin cá nhân mà ECOMEASY thu thập\n                                và lưu trữ, ngăn ngừa các hành vi sau: Đánh cắp hoặc tiếp cận thông tin trái phép; Sử\ndụng thông tin trái phép; Thay đổi, phá hủy thông tin trái phép.</span></li>\n                                <li><span>ECOMEASY thiết lập hệ thống bảo vệ thông tin cá nhân người sử dụng qua các hình\n                                thức: Thiết lập hệ thống tường lửa ngăn ngừa các hình thức tấn công mạng; Đội ngũ kỹ\n                                thuật, nhân viên của ECOMEASY thường xuyên túc trực theo dõi toàn bộ hoạt động của\n                                trang mạng. Đảm bảo mọi cuộc tấn công mạng từ các phía đều được phát hiện kịp thời và\nthực hiện biện pháp ngăn chặn</span></li>\n                                <li><span>Trong trường hợp hệ thống thông tin bị tấn công làm phát sinh nguy cơ mất thông tin của\n                                Thành viên, ECOMEASY sẽ thông báo cho cơ quan chức năng trong vòng 24 (hai mươi\nbốn) giờ sau khi phát hiện sự cố.</span></li>\n                                <li><span>Do không có dịch vụ truyền dữ liệu nào qua Internet được đảm bảo tuyệt đối an toàn vì\n                                vậy mặc dù ECOMEASY cố gắng hết sức để bảo vệ thông tin cá nhân của Thành viên,\n                                ECOMEASY không thể đảm bảo tính bảo mật tuyệt đối của bất kỳ thông tin mà Thành\nviên chuyển tới ECOMEASY.</span></li>\n                                <li><span>ECOMEASY và các bên đối tác khác không chịu trách nhiệm về bất kỳ tổn thất nào do\n                                những hậu quả trực tiếp, tình cờ hay gián tiếp khi Thành viên truy cập vào ECOMEASY,\n                                Thành viên đồng ý chấp nhận mọi rủi ro, bao gồm nhưng không giới hạn, những thất\n                                thoát, chi phí (bao gồm chi phí pháp lý, chi phí tư vấn hoặc các khoản chi tiêu khác) có\n                                thể phát sinh trực tiếp hoặc gián tiếp do việc truy cập ECOMEASY hoặc khi tải dữ liệu\n                                về máy; lỗi phần cứng, lỗi phần mềm, lỗi chương trình, đường truyền dẫn của máy tính\n                                hoặc nối kết mạng bị chậm hoặc bất kì các lỗi nào khác mà không do lỗi của\nECOMEASY</span></li>\n                                <li><span>Trong trường hợp có vi phạm bảo mật hoặc an toàn thông tin cá nhân của Thành viên,\n                                ECOMEASY sẽ thông báo cho Thành viên và trong phạm vi có thể, Thành viên có thể\n                                thực hiện các bước bảo vệ thích hợp. ECOMEASY có thể thông báo cho Thành viên\n                                những trường hợp nghi ngờ bằng cách sử dụng địa chỉ email mà Thành viên cung cấp cho\nECOMEASY khi Thành viên đăng ký với ECOMEASY.</span></li>\n                            </ul></li>\n                        <li><span>Cơ chế tiếp cận và giải quyết khiếu nại của Thành viên liên quan đến việc thông tin\ncá nhân bị sử dụng sai mục đích hoặc phạm vi đã thông báo</span>\n                            <ul className=\"information__level3\">\n                                <li><span>Khi phát hiện thông tin cá nhân bị sử dụng sai mục đích hoặc phạm vi mà ECOMEASY\n                                đã thông báo, thành viên có thể cung cấp thông tin và chứng cứ liên quan đến việc này\ncho ECOMEASY theo có phương thức dưới đây:</span></li>\n                                <li><span>Gửi email tới địa chỉ email: lienhe@Ecomeasy.vn; hoặc</span></li>\n                                <li><span>Gửi thư đến địa chỉ Công ty TNHH ECOMEASY, địa chỉ: Tầng 3, 208-210 Khánh Hội,\nPhường 6, Quận 4, Tp HCM.</span></li>\n                                <li><span>Trong thời hạn 15 (mười lăm) ngày kể từ ngày nhận được khiếu nại của thành viên,\n                                ECOMEASY trả lời cho thành viên khiếu nại kết quả và phương án giải quyết khiếu nại.\n                                Biện pháp giải quyết cụ thể tùy thuộc vào mức độ, tính chất nghiêm trọng của khiếu nại.\n                                Nếu Thành viên khiếu nại và ECOMEASY thông thể đạt được thỏa thuận thì một trong\n                                hai bên có quyền khiếu nại/khởi kiện với cơ quan nhà nước có thẩm quyền để bảo vệ các\n                                quyền và lợi ích hợp pháp của mình. Trường hợp này ECOMEASY sẽ hỗ trợ cung cấp\ncác thông tin có liên quan.</span></li>\n                            </ul></li>\n                        <li><span>ECOMEASY sẽ thông báo cho Thành viên về việc Ứng dụng ECOMEASY sẽ thu thập\nnhững thông tin gì trên thiết bị di động khi được cài đặt và sử dụng</span></li>\n                        <li><span>ECOMEASY không mặc định buộc Thành viên phải sử dụng các dịch vụ đính kèm khi\ncài đặt và sử dụng ứng dụng của mình</span></li>\n                        <li><span>Chính sách bảo mật thông tin Thành viên này sẽ được hiển thị rõ ràng cho Thành viên\ntrước hoặc tại thời điểm ECOMEASY thu thập thông tin.</span></li>\n                    </ul>\n                </div>\n            </Container>\n        </div >\n\n    );\n}\n\nexport default Privacy;","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst actionTypes = {\r\n  SetLanguage: \"i18n/SET_LANGUAGE\"\r\n};\r\n\r\nconst initialState = {\r\n  lang: \"en\"\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"i18n\" },\r\n  (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.SetLanguage:\r\n        return { ...state, lang: action.payload.lang };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  setLanguage: lang => ({ type: actionTypes.SetLanguage, payload: { lang } })\r\n};\r\n","import { toAbsoluteUrl } from \"../utils/utils\";\r\n\r\nexport const initLayoutConfig = {\r\n  demo: \"demo1\",\r\n  // == Base Layout\r\n  self: {\r\n    layout: \"fluid\",\r\n    // body: { \"background-image\": toAbsoluteUrl(\"/media/misc/bg-1.jpg\") },\r\n    logo: {\r\n      dark: toAbsoluteUrl(\"/media/logos/logo-light.png\"),\r\n      light: toAbsoluteUrl(\"/media/logos/logo-dark.png\"),\r\n      brand: toAbsoluteUrl(\"/media/logos/logo-light.png\"),\r\n      green: toAbsoluteUrl(\"/media/logos/logo-light.png\")\r\n    }\r\n  },\r\n  // == Portlet Plugin\r\n  // portlet: {\r\n  //   sticky: {\r\n  //     offset: 50\r\n  //   }\r\n  // },\r\n  // == Page Splash Screen loading\r\n  loader: {\r\n    enabled: true,\r\n    type: \"spinner-logo\",\r\n    logo: toAbsoluteUrl(\"/media/logos/logo-mini-md.png\"),\r\n    message: \"Please wait...\"\r\n  },\r\n  // == Colors for javascript\r\n  colors: {\r\n    state: {\r\n      brand: \"#5d78ff\",\r\n      dark: \"#282a3c\",\r\n      light: \"#ffffff\",\r\n      primary: \"#5867dd\",\r\n      success: \"#34bfa3\",\r\n      info: \"#36a3f7\",\r\n      warning: \"#ffb822\",\r\n      danger: \"#fd3995\"\r\n    },\r\n    base: {\r\n      label: [\"#c5cbe3\", \"#a1a8c3\", \"#3d4465\", \"#3e4466\"],\r\n      shape: [\"#f0f3ff\", \"#d9dffa\", \"#afb4d4\", \"#646c9a\"]\r\n    }\r\n  },\r\n  // page toolbar\r\n  toolbar: {\r\n    display: true\r\n  },\r\n  header: {\r\n    self: {\r\n      width: \"fluid\", // fixed|fluid\r\n      skin: \"light\",\r\n      fixed: {\r\n        desktop: true,\r\n        mobile: true\r\n      }\r\n    },\r\n    menu: {\r\n      self: {\r\n        display: true,\r\n        layout: \"default\",\r\n        \"root-arrow\": false,\r\n        \"icon-style\": \"duotone\"\r\n      },\r\n      desktop: {\r\n        arrow: true,\r\n        toggle: \"click\",\r\n        submenu: {\r\n          skin: \"light\",\r\n          arrow: true\r\n        }\r\n      },\r\n      mobile: {\r\n        submenu: {\r\n          skin: \"dark\",\r\n          accordion: true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  subheader: {\r\n    display: true,\r\n    displayDesc: false,\r\n    displayDaterangepicker: true,\r\n    layout: \"subheader-v1\",\r\n    fixed: true,\r\n    width: 'fluid', // fixed|fluid,\r\n    clear: false,\r\n    style: 'solid'\r\n  },\r\n  content: {\r\n    width: \"fluid\"\r\n  },\r\n  brand: {\r\n    self: {\r\n      skin: \"dark\"\r\n    }\r\n  },\r\n  aside: {\r\n    self: {\r\n      skin: \"dark\",\r\n      display: true,\r\n      fixed: true,\r\n      minimize: {\r\n        toggle: true,\r\n        default: false\r\n      }\r\n    },\r\n    footer: {\r\n      self: {\r\n        display: true\r\n      }\r\n    },\r\n    menu: {\r\n      dropdown: \"false\",\r\n      scroll: false,\r\n      \"icon-style\": \"duotone\",\r\n      submenu: {\r\n        accordion: true,\r\n        dropdown: {\r\n          arrow: true,\r\n          \"hover-timeout\": 100\r\n        }\r\n      }\r\n    }\r\n  },\r\n  footer: {\r\n    self: {\r\n      width: 'fluid',\r\n      fixed: false\r\n    }\r\n  }\r\n};\r\n\r\nlet LayoutConfig = JSON.parse(JSON.stringify(initLayoutConfig)); // deep object copy\r\nexport default LayoutConfig;","export const ROLES = {\n  ADMIN: 'brandAdmin',\n  OWNER: 'brandOwner',\n  SUPERADMIN: 'systemAdmin'\n}\n\nexport const ROLE_DETAIL = {\n  brandAdmin: {\n    label: 'Admin',\n    level: 2\n  },\n  brandOwner: {\n    label: 'Owner',\n    level: 1\n  },\n  systemAdmin: {\n    label: 'Super Admin',\n    level: 3\n  }\n}\n\nexport const PERMISSIONS = {\n  CONNECT_SOURCE: 'connectSource',\n  CREATE_BRAND: 'createBrand',\n  DISCONNECT_SOURCE: 'disconnectSource',\n  INTERNAL_REPORT: 'internalReport',\n  INVITE_TO_BE_ADMIN: 'inviteTobeAdmin',\n  READ_ADMIN_BRAND: 'readAdminBrand',\n  READ_ALL_BRAND: 'readAllBrand',\n  READ_OWNER_BRAND: 'readOwnerBrand',\n  REVENUE_STATISTICS: 'revenueStat',\n  UPDATE_ADMIN_BRAND: 'updateAdminBrand',\n  READ_FINANCE: 'readFinance',\n  WRITE_FINANCE: 'writeFinance',\n  PROCESS_SETTING: 'processSetting'\n}","import { ROLE_DETAIL, PERMISSIONS } from \"../../app/constant/role\"\nexport default {\n  header: {\n    self: {},\n    items: [\n    ],\n  },\n  aside: {\n    self: {},\n    items: [\n      {\n        title: 'Dashboard',\n        icon: 'flaticon-analytics',\n        page: 'dashboard',\n        permissions: [PERMISSIONS.REVENUE_STATISTICS]\n      },\n      {\n        title: 'Finance',\n        icon: 'flaticon-piggy-bank',\n        permissions: [PERMISSIONS.READ_FINANCE, PERMISSIONS.WRITE_FINANCE],\n        submenu: [\n          {\n            title: \"Overview\",\n            page: 'finance-overview',\n            icon: 'flaticon2-menu-3',\n            permissions: [PERMISSIONS.READ_FINANCE, PERMISSIONS.WRITE_FINANCE],\n          },\n          {\n            title: \"Bank Management\",\n            page: \"bank-list\",\n            icon: 'flaticon-notepad',\n            permissions: [PERMISSIONS.READ_FINANCE, PERMISSIONS.WRITE_FINANCE],\n          },\n        ]\n      },\n      {\n        title: 'Internal Report',\n        icon: 'flaticon2-paper',\n        page: 'internal-report',\n        permissions: [PERMISSIONS.INTERNAL_REPORT]\n      },\n      {\n        title: 'Pricing',\n        icon: 'flaticon-diagram',\n        submenu: [\n          {\n            title: 'Compare',\n            icon: 'flaticon2-size',\n            page: 'compare',\n            permissions: [],\n            role: ROLE_DETAIL.systemAdmin.level,\n          },\n          {\n            title: 'Product Pool',\n            icon: 'flaticon-list-2',\n            page: 'product-pool',\n            role: ROLE_DETAIL.systemAdmin.level\n          },\n          {\n            title: 'Group',\n            icon: 'flaticon-layers',\n            page: 'group',\n            role: ROLE_DETAIL.systemAdmin.level\n          },\n        ]\n      },\n      {\n        title: 'Crawl Setting',\n        icon: 'flaticon-search',\n        permissions: [],\n        submenu: [\n          {\n            title: 'Crawl',\n            icon: 'flaticon-search',\n            page: 'crawl-data',\n            permissions: []\n          },\n          {\n            title: 'Crawl History',\n            icon: 'flaticon-interface-4',\n            page: 'crawl-history',\n            role: ROLE_DETAIL.systemAdmin.level\n          },\n        ]\n      },\n      {\n        title: 'Collections',\n        icon: 'flaticon-more-v2',\n        permissions: [PERMISSIONS.READ_ALL_BRAND, PERMISSIONS.READ_ADMIN_BRAND, PERMISSIONS.READ_OWNER_BRAND],\n        submenu: [\n          {\n            title: \"Quản lý brand\",\n            page: \"brand\",\n            icon: 'flaticon-book',\n            permissions: [PERMISSIONS.READ_ALL_BRAND, PERMISSIONS.READ_ADMIN_BRAND, PERMISSIONS.READ_OWNER_BRAND]\n          },\n          {\n            title: 'Shops',\n            icon: 'flaticon2-architecture-and-city',\n            page: 'shops',\n            role: ROLE_DETAIL.systemAdmin.level\n          },\n          {\n            title: 'Permissions',\n            icon: 'flaticon-users-1',\n            page: 'permissions',\n            role: ROLE_DETAIL.systemAdmin.level\n          },\n        ]\n      },\n      {\n        title: \"Post\",\n        page: \"post\",\n        icon: 'flaticon-notes',\n        role: ROLE_DETAIL.systemAdmin.level\n      },\n      {\n        title: \"Campaign\",\n        page: \"campaign\",\n        icon: 'flaticon-earth-globe',\n        role: ROLE_DETAIL.systemAdmin.level\n      },\n      {\n        title: 'Live streaming',\n        icon: 'flaticon-laptop',\n        page: 'live-streaming',\n        role: ROLE_DETAIL.systemAdmin.level,\n      },\n      {\n        title: 'Users',\n        icon: 'flaticon-users-1',\n        page: 'users',\n        role: ROLE_DETAIL.systemAdmin.level\n      },\n      {\n        title: 'Activity logs',\n        icon: 'flaticon-list-3',\n        page: 'log',\n        role: ROLE_DETAIL.systemAdmin.level\n      },\n      {\n        title: 'Departments',\n        icon: 'flaticon-buildings',\n        page: 'departments',\n        role: ROLE_DETAIL.systemAdmin.level,\n        permissions: [PERMISSIONS.PROCESS_SETTING]\n      },\n      {\n        title: 'Process',\n        icon: 'flaticon2-group',\n        role: ROLE_DETAIL.systemAdmin.level,\n        permissions: [PERMISSIONS.PROCESS_SETTING],\n        submenu: [\n          {\n            title: 'Process Dasboard',\n            icon: 'flaticon-car',\n            page: 'process-dashboard',\n            role: ROLE_DETAIL.systemAdmin.level,\n            permissions: [PERMISSIONS.PROCESS_SETTING],\n          },\n          {\n            title: 'Process Setting',\n            icon: 'flaticon2-group',\n            page: 'process-setting',\n            role: ROLE_DETAIL.systemAdmin.level,\n            permissions: [PERMISSIONS.PROCESS_SETTING],\n          },\n        ]\n      },\n      {\n        title: 'Request',\n        icon: 'flaticon2-send-1',\n        role: ROLE_DETAIL.systemAdmin.level,\n        permissions: [PERMISSIONS.PROCESS_SETTING],\n        submenu: [\n          {\n            title: 'Request Dashboard',\n            icon: 'flaticon-car',\n            page: 'request-dashboard',\n            role: ROLE_DETAIL.systemAdmin.level,\n            permissions: [PERMISSIONS.PROCESS_SETTING],\n          },\n          {\n            title: 'Request Setting',\n            icon: 'flaticon2-send-1',\n            page: 'requests',\n            role: ROLE_DETAIL.systemAdmin.level,\n            permissions: [PERMISSIONS.PROCESS_SETTING],\n          },\n        ]\n      },\n    ],\n  },\n}\n","import objectPath from \"object-path\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport LayoutConfig from \"../layout/LayoutConfig\";\r\nimport MenuConfig from \"../layout/MenuConfig\";\r\n\r\nexport const actionTypes = {\r\n  SetMenuConfig: \"builder/SET_MENU_CONFIG\",\r\n  SetLayoutConfigs: \"builder/SET_LAYOUT_CONFIGS\",\r\n  SetLayoutConfigsWithPageRefresh: \"builder/SET_LAYOUT_CONFIGS_WITH_PAGE_REFRESH\",\r\n  SetHtmlClassService: \"builder/SET_HTML_CLASS_SERVICE\"\r\n};\r\n\r\nexport const selectors = {\r\n  getClasses: (store, params) => {\r\n    const { htmlClassServiceObjects } = store.builder;\r\n\r\n    return htmlClassServiceObjects\r\n      ? htmlClassServiceObjects.getClasses(params.path, params.toString)\r\n      : \"\";\r\n  },\r\n  getAttributes: (store, params) => {\r\n    if (params.path) {\r\n      // if path is specified, get the value within object\r\n      const { htmlClassServiceObjects } = store.builder;\r\n\r\n      return htmlClassServiceObjects\r\n          ? htmlClassServiceObjects.getAttributes(params.path)\r\n          : [];    }\r\n\r\n    return [];\r\n  },\r\n  getConfig: (state, path) => {\r\n    const { layoutConfig } = state.builder;\r\n\r\n    if (path) {\r\n      // if path is specified, get the value within object\r\n      return objectPath.get(layoutConfig, path);\r\n    }\r\n\r\n    return \"\";\r\n  },\r\n\r\n  getLogo: ({ builder: { layoutConfig } }) => {\r\n    const menuAsideLeftSkin = objectPath.get(layoutConfig, \"brand.self.skin\");\r\n    // set brand logo\r\n    const logoObject = objectPath.get(layoutConfig, \"self.logo\");\r\n    let logo;\r\n    if (typeof logoObject === \"string\") {\r\n      logo = logoObject;\r\n    }\r\n\r\n    if (typeof logoObject === \"object\") {\r\n      logo = objectPath.get(logoObject, menuAsideLeftSkin + \"\");\r\n    }\r\n\r\n    if (typeof logo === \"undefined\") {\r\n      try {\r\n        const logos = objectPath.get(this.layoutConfig, \"self.logo\");\r\n        logo = logos[Object.keys(logos)[0]];\r\n      } catch (e) {}\r\n    }\r\n    return logo;\r\n  },\r\n\r\n  getStickyLogo: store => {\r\n    const { layoutConfig } = store.builder;\r\n    let logo = objectPath.get(layoutConfig, \"self.logo.sticky\");\r\n    if (typeof logo === \"undefined\") {\r\n      logo = selectors.getLogo(store);\r\n    }\r\n    return logo + \"\";\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  menuConfig: MenuConfig,\r\n  layoutConfig: LayoutConfig,\r\n  htmlClassServiceObjects: undefined\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  {\r\n    storage,\r\n    key: \"build-demo1\",\r\n    blacklist: [\"htmlClassServiceObjects\"]\r\n  },\r\n  (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case actionTypes.SetMenuConfig:\r\n        return { ...state, menuConfig: payload };\r\n\r\n      case actionTypes.SetLayoutConfigs:\r\n        return { ...state, layoutConfig: payload };\r\n\r\n      case actionTypes.SetLayoutConfigsWithPageRefresh: {\r\n        return {...state, layoutConfig: payload};\r\n      }\r\n      case actionTypes.SetHtmlClassService:\r\n        return { ...state, htmlClassServiceObjects: payload };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  setMenuConfig: payload => ({ payload, type: actionTypes.SetMenuConfig }),\r\n\r\n  setLayoutConfigs: payload => ({\r\n    payload,\r\n    type: actionTypes.SetLayoutConfigs\r\n  }),\r\n\r\n  setLayoutConfigsWithPageRefresh: payload => ({\r\n    payload,\r\n    type: actionTypes.SetLayoutConfigsWithPageRefresh\r\n  }),\r\n\r\n  setHtmlClassService: payload => ({\r\n    payload,\r\n    type: actionTypes.SetHtmlClassService\r\n  })\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer\r\n} from \"react\";\r\n\r\n/**\r\n * Both context used to create inside react `redux`-like global state managed\r\n * entirely by react.\r\n *\r\n * @see https://kentcdodds.com/blog/how-to-use-react-context-effectively\r\n */\r\n\r\nconst LayoutContext = {\r\n  /**\r\n   * Stores layout state, can be consumed globally.\r\n   */\r\n  State: createContext(null),\r\n\r\n  /**\r\n   * Stores `dispatch` function to update layout state, intended to be internal.\r\n   */\r\n  Dispatch: createContext(null)\r\n};\r\n\r\n/**\r\n * Layout action types, used to filter out dispatched actions.\r\n */\r\nconst actionTypes = {\r\n  /**\r\n   * Initializes layout state from provided `{ pathname, menuConfig }` action\r\n   * payload.\r\n   */\r\n  INIT: \"INIT\",\r\n\r\n  /**\r\n   * Updates current subheader from provided `{ title }` action payload.\r\n   */\r\n  SET_SUBHEADER: \"SET_SUBHEADER\",\r\n\r\n  /**\r\n   * Controls splash screen visibility.\r\n   */\r\n  SHOW_SPLASH_SCREEN: \"SHOW_SPLASH_SCREEN\",\r\n  HIDE_SPLASH_SCREEN: \"HIDE_SPLASH_SCREEN\"\r\n};\r\n\r\n/**\r\n * Recursively runs over `items` to find `pageConfig` of `currentPage`.\r\n *\r\n * Returns `undefined` if there are no matches.\r\n */\r\nfunction findPageConfig(currentPage, items, breadcrumbs) {\r\n  // Ignore non array `items`.\r\n  if (!items || !Array.isArray(items)) {\r\n    return;\r\n  }\r\n\r\n  for (const item of items) {\r\n    // Return `item` if it's `page` matches `currentPage`\r\n    if (currentPage === item.page && !item.submenu) {\r\n      return item;\r\n    }\r\n\r\n    // Try to `pageConfig` in `item.submenu` if it is defined.\r\n    if (item.submenu) {\r\n      const pageConfig = findPageConfig(currentPage, item.submenu, breadcrumbs);\r\n      if (pageConfig) {\r\n        breadcrumbs.push(item);\r\n        return pageConfig;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Used to lazily create initial layout state.\r\n */\r\nfunction init({ pathname, menuConfig }) {\r\n  const currentPage = pathname.slice(1 /* Remove leading slash. */);\r\n  let breadcrumbs = [];\r\n  const pageConfig =\r\n      findPageConfig(currentPage, menuConfig.aside.items, breadcrumbs) ||\r\n      findPageConfig(currentPage, menuConfig.header.items, breadcrumbs);\r\n\r\n  breadcrumbs.reverse();\r\n  const state = { subheader: { title: \"\", breadcrumb: [], description: \"\" }, splashScreen: { refs: {} } };\r\n  if (pageConfig) {\r\n    breadcrumbs.push(pageConfig);\r\n    state.subheader.title = pageConfig.desc || pageConfig.title;\r\n    state.subheader.breadcrumb = breadcrumbs;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  if (type === actionTypes.INIT) {\r\n    const nextState = init(payload);\r\n\r\n    // Update only subheader.\r\n    return { ...state, subheader: nextState.subheader };\r\n  }\r\n\r\n  if (type === actionTypes.SET_SUBHEADER) {\r\n    return { ...state, subheader: payload };\r\n  }\r\n\r\n  if (type === actionTypes.SHOW_SPLASH_SCREEN) {\r\n    return {\r\n      ...state,\r\n      splashScreen: {\r\n        ...state.splashScreen,\r\n        refs: { ...state.splashScreen.refs, [payload.id]: true }\r\n      }\r\n    };\r\n  }\r\n\r\n  if (type === actionTypes.HIDE_SPLASH_SCREEN) {\r\n    const { [payload.id]: skip, ...nextRefs } = state.splashScreen.refs;\r\n\r\n    return {\r\n      ...state,\r\n      splashScreen: { ...state.splashScreen, refs: nextRefs }\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * Creates layout reducer and provides it's `state` and ` dispatch`.\r\n */\r\nexport function LayoutContextProvider({ history, children, menuConfig }) {\r\n  const [state, dispatch] = useReducer(\r\n      reducer,\r\n      { menuConfig, pathname: history.location.pathname },\r\n      // See https://reactjs.org/docs/hooks-reference.html#lazy-initialization\r\n      init\r\n  );\r\n\r\n  // Subscribe to history changes and reinitialize on each change.\r\n  useEffect(\r\n      () =>\r\n          history.listen(({ pathname }) => {\r\n            dispatch({\r\n              type: actionTypes.INIT,\r\n              payload: { pathname, menuConfig }\r\n            });\r\n          }),\r\n\r\n      /**\r\n       * Passing `history` and `menuConfig` to `deps` ensures that `useEffect`\r\n       * will cleanup current `history` listener and will dispatch `INIT`\r\n       * with `menuConfig` reference from current render.\r\n       *\r\n       * @see https://reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\r\n       */\r\n      [history, menuConfig]\r\n  );\r\n\r\n  const { refs: splashScreenRefs } = state.splashScreen;\r\n  const splashScreenVisible = useMemo(\r\n      () => Object.keys(splashScreenRefs).length > 0,\r\n      [splashScreenRefs]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const splashScreen = document.getElementById(\"splash-screen\");\r\n\r\n    if (splashScreenVisible) {\r\n      splashScreen.classList.remove(\"hidden\");\r\n\r\n      return () => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      };\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      splashScreen.classList.add(\"hidden\");\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [splashScreenVisible]);\r\n\r\n  // Pass state and dispatch to it's contexts.\r\n  return (\r\n      <LayoutContext.State.Provider value={state}>\r\n        <LayoutContext.Dispatch.Provider value={dispatch}>\r\n          {children}\r\n        </LayoutContext.Dispatch.Provider>\r\n      </LayoutContext.State.Provider>\r\n  );\r\n}\r\n\r\n/**\r\n * Used to access latest layout context state.\r\n *\r\n * @example\r\n *\r\n * export function Subheader() {\r\n *   return (\r\n *     <LayoutContextConsumer>\r\n *       {({ subheader: { title } }) => <h1>{title}</h1>}\r\n *     </LayoutContextConsumer>\r\n *   );\r\n * }\r\n */\r\nexport const LayoutContextConsumer = LayoutContext.State.Consumer;\r\n\r\n/**\r\n * Hook to access latest layout context state.\r\n *\r\n * @example\r\n *\r\n * export function Subheader() {\r\n *   const { subheader: { title } } = useLayoutContext();\r\n *\r\n *   return <h1>{title}</h1>;\r\n * }\r\n */\r\nexport function useLayoutContext() {\r\n  const context = useContext(LayoutContext.State);\r\n\r\n  if (!context) {\r\n    throw new Error(\"\");\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\n/**\r\n * Used to override layout subheader state.\r\n */\r\nexport function LayoutSubheader({ title, breadcrumb, description }) {\r\n  const dispatch = useContext(LayoutContext.Dispatch);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actionTypes.SET_SUBHEADER,\r\n      payload: { title, breadcrumb, description }\r\n    });\r\n  }, [dispatch, title, breadcrumb, description]);\r\n\r\n  return null;\r\n}\r\n\r\nexport function LayoutSplashScreen({ visible = false }) {\r\n  const dispatch = useContext(LayoutContext.Dispatch);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      return;\r\n    }\r\n\r\n    const id = Math.random();\r\n\r\n    dispatch({ type: actionTypes.SHOW_SPLASH_SCREEN, payload: { id } });\r\n\r\n    return () => {\r\n      dispatch({ type: actionTypes.HIDE_SPLASH_SCREEN, payload: { id } });\r\n    };\r\n  }, [visible, dispatch]);\r\n\r\n  return null;\r\n}\r\n","import axios from \"axios\";\nimport _ from \"lodash\"\n\nvar axiosInstance = axios.create({\n  baseURL: '/',\n  withCredentials: true,\n  /* other custom settings */\n});\n\naxiosInstance.interceptors.response.use(response => {\n  //Token expired\n  if (_.get(response, 'data.err') === 401 || _.get(response, 'data.errMsg') === 'token is required') {\n    document.dispatchEvent(new CustomEvent('tokenExpired'))\n  }\n  else {\n    return response\n  }\n})\n\n\nexport default axiosInstance","import axios from '../helpers/axios'\r\n\r\nexport const LOGIN_URL = \"/api/v1/login\";\r\nexport const REGISTER_URL = \"api/v1/register\";\r\nexport const REQUEST_PASSWORD_URL = \"/api/v1/password-of-email\";\r\nexport const SET_PASSWORD_URL = token => `/api/v1/new-password?token=${token}`\r\nexport const ROLE_LIST = `/api/v1/roles-permissions`\r\nexport const INVITE_USER = (brandId) => `/api/brand/${brandId}/invite-manage-brand`\r\nexport const VIEW_INVITATION = (token) => `/api/v1/invite-manage-brand?token=${token}`\r\nexport const ACCEPT_INVITATION = (brand, token) => `/api/brand/${brand}/reject-accept-manage-brand?token=${token}`\r\nexport const CHANGE_PASSWORD = '/api/v1/change-password'\r\nexport const UPDATE_USER = '/api/v1/user/update'\r\nexport const GET_LOG = '/api/logs'\r\nexport const CREATE_ROLE = '/api/v1/admin/add-user-permission'\r\nexport const ADD_ADMIN = brandId => `/api/v1/brand/${brandId}/add-admin-brand`\r\nexport const GET_USER = '/api/v1/user/profile'\r\nexport const REMOVE_ADMIN = brandId => `/api/v1/brand/${brandId}/remove-admin-brand`\r\n\r\nexport const ME_URL = \"api/me\";\r\n\r\nexport function login(email, password) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  data.append('password', password)\r\n  return axios({\r\n    method: 'post',\r\n    url: LOGIN_URL,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function register(email, password, role) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  data.append('password', password)\r\n  data.append('role', role)\r\n  return axios({\r\n    method: 'post',\r\n    url: REGISTER_URL,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function requestPassword(email) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  return axios({\r\n    method: 'post',\r\n    url: REQUEST_PASSWORD_URL,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function setPassword(password, token) {\r\n  let data = new FormData()\r\n  data.append('password', password)\r\n  return axios({\r\n    method: 'post',\r\n    url: SET_PASSWORD_URL(token),\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function getUserByToken() {\r\n  // Authorization head should be fulfilled in interceptor.\r\n  return axios.get(ME_URL);\r\n}\r\n\r\nexport const getRoleList = () => axios.get(ROLE_LIST);\r\n\r\nexport function inviteUser(brandId, email, role) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  data.append('role', role)\r\n  return axios({\r\n    method: 'post',\r\n    url: INVITE_USER(brandId),\r\n    data: data\r\n  })\r\n}\r\n\r\nexport const viewInvitation = (token) => axios.get(VIEW_INVITATION(token))\r\n\r\nexport function acceptInvitation(brand, token, action) {\r\n  let data = new FormData()\r\n  data.append('action', action)\r\n  return axios({\r\n    method: 'post',\r\n    url: ACCEPT_INVITATION(brand, token),\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function changePassword(oldPas, newPas) {\r\n  let data = new FormData()\r\n  data.append('password', oldPas)\r\n  data.append('newPassword', newPas)\r\n  return axios({\r\n    method: 'post',\r\n    url: CHANGE_PASSWORD,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function editUser(avatar) {\r\n  let data = new FormData()\r\n  data.append('avatar', avatar)\r\n  return axios({\r\n    method: 'post',\r\n    url: UPDATE_USER,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function getLog() {\r\n  return axios({\r\n    method: 'get',\r\n    url: GET_LOG\r\n  })\r\n}\r\n\r\nexport function createRole(role, email, permissions) {\r\n  let data = new FormData()\r\n  data.append('roleName', role)\r\n  data.append('email', email)\r\n  data.append('permissions', JSON.stringify(permissions))\r\n  return axios({\r\n    method: 'post',\r\n    url: CREATE_ROLE,\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function addAdmin(brand, email, role) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  data.append('role', role)\r\n  return axios({\r\n    method: 'post',\r\n    url: ADD_ADMIN(brand),\r\n    data: data\r\n  })\r\n}\r\n\r\nexport function getUser() {\r\n  return axios({\r\n    method: 'get',\r\n    url: GET_USER\r\n  })\r\n}\r\n\r\nexport function removeAdmin(brandId, email) {\r\n  let data = new FormData()\r\n  data.append('email', email)\r\n  return axios({\r\n    method: 'post',\r\n    url: REMOVE_ADMIN(brandId),\r\n    data: data\r\n  })\r\n}\r\n","import { toAbsoluteUrl } from \"../utils/utils\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    password: \"demo\",\r\n    email: \"admin@demo.com\",\r\n    accessToken: \"access-token-8f3ae836da744329a6f93bf20594b5cc\",\r\n    refreshToken: \"access-token-f8c137a2c98743f48b643e71161d90aa\",\r\n    roles: [1], // Administrator\r\n    pic: toAbsoluteUrl(\"/media/users/300_25.jpg\"),\r\n    fullname: \"Sean\",\r\n    occupation: \"CEO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067890\",\r\n    address: {\r\n      addressLine: \"L-12-20 Vertex, Cybersquare\",\r\n      city: \"San Francisco\",\r\n      state: \"California\",\r\n      postCode: \"45000\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/admin\",\r\n      facebook: \"https://facebook.com/admin\",\r\n      twitter: \"https://twitter.com/admin\",\r\n      instagram: \"https://instagram.com/admin\"\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"user\",\r\n    password: \"demo\",\r\n    email: \"user@demo.com\",\r\n    accessToken: \"access-token-6829bba69dd3421d8762-991e9e806dbf\",\r\n    refreshToken: \"access-token-f8e4c61a318e4d618b6c199ef96b9e55\",\r\n    roles: [2], // Manager\r\n    pic: toAbsoluteUrl(\"/media/users/100_2.jpg\"),\r\n    fullname: \"Megan\",\r\n    occupation: \"Deputy Head of Keenthemes in New York office\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067891\",\r\n    address: {\r\n      addressLine: \"3487  Ingram Road\",\r\n      city: \"Greensboro\",\r\n      state: \"North Carolina\",\r\n      postCode: \"27409\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/user\",\r\n      facebook: \"https://facebook.com/user\",\r\n      twitter: \"https://twitter.com/user\",\r\n      instagram: \"https://instagram.com/user\"\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    username: \"guest\",\r\n    password: \"demo\",\r\n    email: \"guest@demo.com\",\r\n    accessToken: \"access-token-d2dff7b82f784de584b60964abbe45b9\",\r\n    refreshToken: \"access-token-c999ccfe74aa40d0aa1a64c5e620c1a5\",\r\n    roles: [3], // Guest\r\n    pic: toAbsoluteUrl(\"/media/users/default.jpg\"),\r\n    fullname: \"Ginobili Maccari\",\r\n    occupation: \"CFO\",\r\n    companyName: \"Keenthemes\",\r\n    phone: \"456669067892\",\r\n    address: {\r\n      addressLine: \"1467  Griffin Street\",\r\n      city: \"Phoenix\",\r\n      state: \"Arizona\",\r\n      postCode: \"85012\"\r\n    },\r\n    socialNetworks: {\r\n      linkedIn: \"https://linkedin.com/guest\",\r\n      facebook: \"https://facebook.com/guest\",\r\n      twitter: \"https://twitter.com/guest\",\r\n      instagram: \"https://instagram.com/guest\"\r\n    }\r\n  }\r\n];\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LayoutSplashScreen } from \"./LayoutContext\";\r\nimport * as builder from \"../ducks/builder\";\r\n\r\n/**\r\n * Used to synchronize current layout `menuConfig`, `layoutConfig` and\r\n * `htmlClassService` with redux store.\r\n */\r\nexport default function LayoutInitializer({\r\n  children,\r\n  menuConfig,\r\n  layoutConfig,\r\n  htmlClassService\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const builderState = useSelector(({ builder }) => builder);\r\n\r\n  useEffect(() => {\r\n    dispatch(builder.actions.setMenuConfig(menuConfig));\r\n  }, [dispatch, menuConfig]);\r\n\r\n  useEffect(() => {\r\n    if (layoutConfig.demo !== builderState.layoutConfig.demo) {\r\n      dispatch(builder.actions.setLayoutConfigs(layoutConfig));\r\n    }\r\n  }, [dispatch, builderState, layoutConfig]);\r\n\r\n  useEffect(() => {\r\n    dispatch(builder.actions.setHtmlClassService(htmlClassService));\r\n  }, [dispatch, htmlClassService]);\r\n\r\n  return htmlClassService === builderState.htmlClassServiceObjects ? (\r\n    // Render content when `htmlClassService` synchronized with redux store.\r\n    <>{children}</>\r\n  ) : (\r\n    // Otherwise sow loading splash screen.\r\n    <LayoutSplashScreen />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/en\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/de\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/es\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/fr\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/ja\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/zh\";\r\n\r\nimport deMessages from \"./messages/de\";\r\nimport enMessages from \"./messages/en\";\r\nimport esMessages from \"./messages/es\";\r\nimport frMessages from \"./messages/fr\";\r\nimport jaMessages from \"./messages/ja\";\r\nimport zhMessages from \"./messages/zh\";\r\n\r\nconst allMessages = {\r\n  de: deMessages,\r\n  en: enMessages,\r\n  es: esMessages,\r\n  fr: frMessages,\r\n  ja: jaMessages,\r\n  zh: zhMessages\r\n};\r\n\r\nexport default function I18nProvider({ children }) {\r\n  const locale = useSelector(({ i18n }) => i18n.lang);\r\n  const messages = allMessages[locale];\r\n\r\n  return (\r\n      <IntlProvider locale={locale} messages={messages}>\r\n        {children}\r\n      </IntlProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst theme = createMuiTheme(\r\n  /**\r\n   * @see https://material-ui.com/customization/themes/#theme-configuration-variables\r\n   */\r\n  {\r\n    // direction: \"rtl\",\r\n    typography: {\r\n      fontFamily: [\"Roboto\"].join(\",\"),\r\n    },\r\n\r\n    body: {\r\n      fontSize: 14\r\n    },\r\n\r\n    palette: {\r\n      contrastThreshold: 2,\r\n      primary: {\r\n        // light: will be calculated from palette.primary.main,\r\n        main: \"#5d78ff\"\r\n        // dark: will be calculated from palette.primary.main,\r\n        // contrastText: will be calculated to contrast with palette.primary.main\r\n      },\r\n      secondary: {\r\n        // light: will be calculated from palette.primary.main,\r\n        main: \"#0abb87\",\r\n        // dark: will be calculated from palette.primary.main,\r\n        contrastText: \"#ffffff\"\r\n      },\r\n      error: {\r\n        // light: will be calculated from palette.primary.main,\r\n        main: \"#fd397a\"\r\n        // dark: will be calculated from palette.primary.main,\r\n        // contrastText: will be calculated to contrast with palette.primary.main\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @see https://material-ui.com/customization/globals/#default-props\r\n     */\r\n    props: {\r\n      // Name of the component ⚛️\r\n      MuiButtonBase: {\r\n        // The properties to apply\r\n        disableRipple: true // No more ripple, on the whole application 💣!\r\n      },\r\n\r\n      // Set default elevation to 1 for popovers.\r\n      MuiPopover: {\r\n        elevation: 1\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport default function ThemeProvider(props) {\r\n  const { children } = props;\r\n\r\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\r\n}\r\n","import * as i18n from \"./ducks/i18n\";\r\nimport * as builder from \"./ducks/builder\";\r\n\r\n/**\r\n * Reexports\r\n */\r\nexport * from \"./utils/utils\";\r\nexport * from \"./layout/LayoutContext\";\r\nexport * from \"./layout/LayoutConfig\";\r\nexport { default as LayoutConfig } from \"./layout/LayoutConfig\";\r\nexport { default as mockAxios } from \"./__mocks__/mockAxios\";\r\nexport { default as LayoutInitializer } from \"./layout/LayoutInitializer\";\r\nexport { default as I18nProvider } from \"./i18n/I18nProvider\";\r\nexport { default as ThemeProvider } from \"./materialUIThemeProvider/ThemeProvider\";\r\n\r\n/**\r\n * Ducks\r\n */\r\n\r\nexport const metronic = { i18n, builder };\r\n","import * as utils from \"../../_metronic/utils/utils\";\r\n\r\nconst localStorageLastLocationKey = \"demo1-lastLocation\";\r\n\r\nfunction acceptLocation(lastLocation) {\r\n  if (\r\n    lastLocation &&\r\n    lastLocation.pathname &&\r\n    lastLocation.pathname !== \"/\" &&\r\n    lastLocation.pathname.indexOf(\"auth\") === -1 &&\r\n    lastLocation.pathname !== \"/logout\"\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function saveLastLocation(lastLocation) {\r\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\r\n  let _useLocations = localStorateLocations\r\n    ? JSON.parse(localStorateLocations)\r\n    : [];\r\n\r\n  if (acceptLocation(lastLocation)) {\r\n    _useLocations.push(lastLocation.pathname);\r\n    utils.setStorage(\r\n      localStorageLastLocationKey,\r\n      JSON.stringify(_useLocations),\r\n      120\r\n    );\r\n  }\r\n}\r\n\r\nexport function forgotLastLocation() {\r\n  utils.removeStorage(localStorageLastLocationKey);\r\n}\r\n\r\nexport function getLastLocation() {\r\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\r\n  if (!localStorateLocations) {\r\n    return \"/\";\r\n  }\r\n\r\n  const _userLocations = JSON.parse(localStorateLocations);\r\n  const result = _userLocations.length > 0 ? _userLocations.pop() : \"/\";\r\n  return result;\r\n}\r\n","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const actionTypes = {\n    ChangeBrand: \"[ChangeBrand] Action\",\n    ChangeShop: \"[ChangeShop] Action\",\n    ChangeSource: \"[ChangeSource] Action\",\n    SetBrandList: \"[SetBrandList] Action\",\n    AddBrand: \"[AddBrand] Action\",\n    EditBrand: \"[EditBrand] Action\",\n    Reset: \"[Reset] Action\",\n    SetFilter: \"[SetFilter] Action\",\n};\n\nexport const initialBrandState = {\n    selectedBrand: '',\n    selectedShop: '',\n    selectedSource: '',\n    brandList: [],\n    filter: {\n        from: '',\n        to: '',\n        mode: ''\n    }\n};\n\nexport const reducer = persistReducer(\n    { storage, key: \"brand\", whitelist: [\"selectedBrand\", \"brandList\", \"selectedShop\", \"selectedSource\", \"filter\"] },\n    (state = initialBrandState, action) => {\n        switch (action.type) {\n            case actionTypes.ChangeBrand: {\n                const brand = action.payload;\n                return { ...state, selectedBrand: brand, selectedShop: '' }\n            }\n            case actionTypes.ChangeShop: {\n                const shop = action.payload;\n                return { ...state, selectedShop: shop }\n            }\n            case actionTypes.ChangeSource: {\n                const source = action.payload;\n                return { ...state, selectedSource: source }\n            }\n            case actionTypes.SetBrandList: {\n                const brandList = action.payload;\n                if (brandList)\n                    return { ...state, brandList: brandList }\n                return state\n            }\n            case actionTypes.AddBrand: {\n                const brand = action.payload\n                if (brand)\n                    return {\n                        selectedBrand: state.selectedBrand || brand._id,\n                        brandList: [...state.brandList, brand]\n                    }\n                return state\n            }\n            case actionTypes.EditBrand: {\n                const brand = action.payload\n                if (brand) {\n                    const updatedList = state.brandList.map(item => item._id === brand._id ? brand : item)\n                    return {\n                        selectedBrand: state.selectedBrand || brand._id,\n                        brandList: [...updatedList]\n                    }\n                }\n                return state\n\n            }\n            case actionTypes.SetFilter: {\n                const filter = action.payload\n                return { ...state, filter: filter }\n\n            }\n            case actionTypes.Reset: {\n                return initialBrandState\n            }\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    change: brand => ({\n        type: actionTypes.ChangeBrand,\n        payload: { brand }\n    }),\n    changeShop: shop => ({\n        type: actionTypes.ChangeShop,\n        payload: { shop }\n    }),\n    setBrandList: brandList => ({\n        type: actionTypes.SetBrandList,\n        payload: { brandList }\n    }),\n    addBrand: brand => ({\n        type: actionTypes.AddBrand,\n        payload: { brand }\n    }),\n    editBrand: brand => ({\n        type: actionTypes.EditBrand,\n        payload: { brand }\n    }),\n    reset: () => ({\n        type: actionTypes.Reset,\n        payload: ''\n    }),\n    changeSource: source => ({\n        type: actionTypes.ChangeSource,\n        payload: { source }\n    }),\n    setFilter: filter => ({\n        type: actionTypes.SetFilter,\n        payload: { filter }\n    })\n};","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken } from \"../../crud/auth.crud\";\r\nimport * as routerHelpers from \"../../router/RouterHelpers\";\r\nimport { reducer as brandReducer } from \"./brand.duck\"\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  SetPage: \"[SetPage] Action\",\r\n  SetFirstLoad: \"[SetFirstLoad] Action\",\r\n  SetRoles: \"[SetRoles] Action\",\r\n  SetPermissions: \"[SetPermissions] Action\",\r\n  UpdateUser: \"[UpdateUser] Action\"\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n  defaultPage: '',\r\n  isFirstLoad: false,\r\n  roles: false,\r\n  permissions: false\r\n};\r\n\r\n\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"demo1-auth\", whitelist: [\"user\", \"authToken\", \"defaultPage\", \"isFirstLoad\", \"roles\", \"permissions\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { token } = action.payload;\r\n        return { ...state, authToken: token, isFirstLoad: true };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        const { authToken } = action.payload;\r\n        return { ...state, authToken };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        routerHelpers.forgotLastLocation();\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.SetPage: {\r\n        const defaultPage = action.payload;\r\n\r\n        return { ...state, defaultPage: defaultPage };\r\n      }\r\n\r\n      case actionTypes.SetFirstLoad: {\r\n\r\n        return { ...state, isFirstLoad: action.payload };\r\n      }\r\n\r\n      case actionTypes.SetRoles: {\r\n\r\n        return { ...state, roles: action.payload };\r\n      }\r\n\r\n      case actionTypes.SetPermissions: {\r\n\r\n        return { ...state, permissions: action.payload };\r\n      }\r\n\r\n      case actionTypes.UpdateUser: {\r\n\r\n        return { ...state, user: action.payload };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: payload => ({ type: actionTypes.Login, payload: payload }),\r\n  register: authToken => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken }\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: user => ({ type: actionTypes.UserRequested, payload: { user } }),\r\n  fulfillUser: user => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setPage: defaultPage => ({ type: actionTypes.SetPage, payload: { defaultPage } }),\r\n  setFirstLoad: flag => ({ type: actionTypes.SetFirstLoad, payload: { flag } }),\r\n  setRoles: roles => ({ type: actionTypes.SetRoles, payload: { roles } }),\r\n  SetPermissions: permissions => ({ type: actionTypes.SetPermissions, payload: { permissions } }),\r\n  updateUser: user => ({ type: actionTypes.UpdateUser, payload: { user } }),\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    //yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    const { data: user } = yield getUserByToken();\r\n\r\n    yield put(actions.fulfillUser(user));\r\n  });\r\n}\r\n","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const actionTypes = {\n    ShowBackdropLoading: \"[ShowBackdropLoading] Action\",\n};\nexport const initialCommonState = {\n    isShowBackdropLoading: false\n};\n\nexport const reducer = persistReducer(\n    { storage, key: \"common\", whitelist: [\"isShowBackdropLoading\"] },\n    (state = initialCommonState, action) => {\n        switch (action.type) {\n            case actionTypes.ShowBackdropLoading: {\n                return { ...state, isShowBackdropLoading: action.payload }\n            }\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    showBackdropLoading: flag => ({\n        type: actionTypes.ShowBackdropLoading,\n        payload: { flag }\n    }),\n};","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const actionTypes = {\n    SetProcessList: \"[SetProcessList] Action\",\n};\nexport const initialCommonState = {\n    processList: false\n};\n\nexport const reducer = persistReducer(\n    { storage, key: \"process\", whitelist: [\"processList\"] },\n    (state = initialCommonState, action) => {\n        switch (action.type) {\n            case actionTypes.SetProcessList: {\n                return { ...state, processList: action.payload }\n            }\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    setProcessList: flag => ({\n        type: actionTypes.SetProcessList,\n        payload: { flag }\n    }),\n};","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const actionTypes = {\n    SetBankList: \"[SetBankList] Action\",\n    SetBalanceList: \"[SetBalanceList] Action\",\n};\nexport const initialCommonState = {\n    bankList: false,\n    balanceList: false\n};\n\nexport const reducer = persistReducer(\n    { storage, key: \"process\", whitelist: [\"bankList\"] },\n    (state = initialCommonState, action) => {\n        switch (action.type) {\n            case actionTypes.SetBankList: {\n                return { ...state, bankList: action.payload }\n            }\n            case actionTypes.SetBalanceList: {\n                return { ...state, balanceList: action.payload }\n            }\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    setBankList: data => ({\n        type: actionTypes.SetBankList,\n        payload: { data }\n    }),\n    setBalanceList: data => ({\n        type: actionTypes.SetBalanceList,\n        payload: { data }\n    }),\n};","import { all } from \"redux-saga/effects\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport * as auth from \"./ducks/auth.duck\";\r\nimport * as brand from \"./ducks/brand.duck\";\r\nimport * as common from \"./ducks/common.duck\"\r\nimport * as process from \"./ducks/process.duck\"\r\nimport * as finance from \"./ducks/finance.duck\"\r\nimport { metronic } from \"../../_metronic\";\r\n\r\nconst appReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  i18n: metronic.i18n.reducer,\r\n  builder: metronic.builder.reducer,\r\n  brand: brand.reducer,\r\n  common: common.reducer,\r\n  process: process.reducer,\r\n  finance: finance.reducer\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === auth.actionTypes.Logout) {\r\n    localStorage.clear()\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield all([auth.saga()]);\r\n}\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport { rootReducer, rootSaga } from \"./rootDuck\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","export const globalStyles = {\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    table: {\n\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    header: {\n        margin: '0 !important',\n        padding: '15px 0',\n    },\n    headerLegend: {\n        borderBottom: '1px solid #dbdbdb',\n        margin: '0 !important',\n        padding: '15px 0',\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n    },\n    form: {\n        padding: '30px',\n        width: 500,\n        textAlign: 'center',\n        margin: '0 auto',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    formContainer: {\n        width: 350,\n        margin: '15px auto'\n    },\n    leftBtnContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    btnChip: {\n        padding: '3px 15px',\n        backgroundColor: '#91dd47',\n        borderRadius: 20,\n        color: 'white'\n    }\n}","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from \"moment\"\nimport { Button, ButtonGroup, TextField, FormControl, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\n\nRangeDatePicker.propTypes = {\n\n};\n\nexport const FILTER_OPTION = {\n    TODAY: 'today',\n    YESTERDAY: 'yesterday',\n    WEEK: 'week',\n    MONTH: 'month',\n    YEAR: 'year',\n    MANUAL: 'manual',\n    ALL: 'all'\n}\n\nconst DATE_OPTIONS = ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',\n    'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12']\n\nconst useStyles = makeStyles({\n    root: {\n        '& .MuiSelect-selectMenu': {\n            padding: '8px !important'\n        }\n    },\n    datepickerContainer: {\n        border: '1px solid rgba(0, 0, 0, 0.23)',\n        borderRadius: 6,\n        overflow: 'hidden',\n        position: 'relative',\n        '& input': {\n            padding: '8px 15px'\n        },\n        '&:focus': {\n            '& .Range': {\n                background: 'red'\n            }\n        }\n    },\n    dateFilterBtnGroup: {\n        '& button': {\n            color: '#333',\n            fontWeight: 400\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        }\n    }\n})\n\nfunction RangeDatePicker(props) {\n    const { from, to, setFrom, setTo, setMode, mode, isShowDateSelection, isShowAll } = props\n    const classes = useStyles()\n    const datepickerWrapper = useRef(null)\n    const [enteredTo, setEnteredTo] = useState(new Date())\n    const [isShowDatePicker, setIsShowDatePicker] = useState(false)\n    const [monthSelection, setMonthSelection] = useState('')\n    const [tempFrom, setTempFrom] = useState(from && moment(from).format('YYYY-MM-DD'))\n    const [tempTo, setTempTo] = useState(to && moment(to).format('YYYY-MM-DD'))\n\n    const handleDayClick = (day) => {\n        if (moment() < moment(day)) {\n            return;\n        }\n        if (from && to && day >= from && day <= to) {\n            setFrom(null)\n            setTo(null)\n            setEnteredTo(null)\n            return;\n        }\n        if (isSelectingFirstDay(from, to, day)) {\n            setFrom(day)\n            setTo(null)\n            setEnteredTo(null)\n        } else {\n            setTo(day)\n            setEnteredTo(day)\n            setIsShowDatePicker(false)\n        }\n    }\n\n    const isSelectingFirstDay = (from, to, day) => {\n        const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n        const isRangeSelected = from && to;\n        return !from || isBeforeFirstDay || isRangeSelected;\n    }\n\n    const handleDayMouseEnter = (day) => {\n        if (!isSelectingFirstDay(from, to, day)) {\n            setEnteredTo(day)\n        }\n    }\n\n    const handleClickOutside = event => {\n        if (datepickerWrapper.current && !datepickerWrapper.current.contains(event.target)) {\n            setIsShowDatePicker(false);\n            if (!to || !from) {\n                setFrom(new Date())\n                setTo(new Date())\n            }\n        }\n    };\n\n    const changeDateRange = (option) => {\n        setMonthSelection('')\n        let sDate = ''\n        let eDate = ''\n        switch (option) {\n            case FILTER_OPTION.TODAY:\n                sDate = moment()\n                break;\n            case FILTER_OPTION.YESTERDAY:\n                sDate = moment().subtract(1, 'days')\n                break;\n            case FILTER_OPTION.WEEK:\n                sDate = moment().subtract(6, 'days')\n                break;\n            case FILTER_OPTION.MONTH:\n                sDate = moment().startOf('month')\n                break;\n            case FILTER_OPTION.YEAR:\n                sDate = moment().startOf('year')\n                break;\n            case FILTER_OPTION.ALL:\n                return;\n                break;\n        }\n        eDate = option === FILTER_OPTION.YESTERDAY ? moment().subtract(1, 'days') : moment()\n        setFrom(sDate._d)\n        setTo(eDate._d)\n        setTempFrom(sDate._d)\n        setTempTo(eDate._d)\n        setEnteredTo(eDate._d)\n    }\n\n    const handleChangeMonthSelection = val => {\n        setMonthSelection(val)\n        setMode('')\n        let currentYear = new Date().getFullYear()\n        let sDate = moment(`${val + 1}/01/${currentYear}`)\n        let eDate = moment(sDate).endOf('month')\n        setFrom(sDate._d)\n        setTo(eDate._d)\n        setTempFrom(sDate._d)\n        setTempTo(eDate._d)\n        setEnteredTo(eDate._d)\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"click\", handleClickOutside, false);\n        return () => {\n            document.removeEventListener(\"click\", handleClickOutside, false);\n        };\n    }, [from, to]);\n\n    const onUpdate = () => {\n        if (tempFrom) {\n            setFrom(new Date(tempFrom))\n        }\n        else {\n            setTempFrom(from && moment(from).format('YYYY-MM-DD'))\n        }\n        if (tempTo) {\n            setTo(new Date(tempTo))\n        }\n        else {\n            setTempTo(to && moment(to).format('YYYY-MM-DD'))\n        }\n    }\n\n    return (\n        <div>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n            }}>\n                <div style={{ marginRight: '15px' }}>\n                    <form noValidate>\n                        <div className={classes.datepickerContainer} onBlur={onUpdate}>\n                            <input\n                                onChange={e => setTempFrom(e.target.value)}\n                                value={tempFrom ? moment(tempFrom).format('YYYY-MM-DD') : ''}\n                                type=\"date\" />\n                            -\n                            <input\n                                onChange={e => setTempTo(e.target.value)}\n                                value={tempTo ? moment(tempTo).format('YYYY-MM-DD') : ''}\n                                type=\"date\"\n                            />\n                        </div>\n                    </form>\n                </div>\n                {/* <div style={{ marginRight: '15px' }}>\n                    <form noValidate>\n                        <div className={classes.datepickerContainer} ref={datepickerWrapper}>\n                            <TextField\n                                variant=\"outlined\"\n                                onFocus={() => setIsShowDatePicker(true)}\n                                value={`${from ? moment(from).format('MM-DD-YYYY') : ''} - ${to ? moment(to).format('MM-DD-YYYY') : ''}`}\n                                InputProps={{\n                                    endAdornment: <CalendarTodayIcon />\n                                }}>\n                            </TextField>\n                            <DayPicker\n                                className={`Range ${isShowDatePicker ? 'open' : ''}`}\n                                numberOfMonths={2}\n                                selectedDays={[from, { from, to: enteredTo }]}\n                                disabledDays={{\n                                    after: new Date()\n                                }}\n                                modifiers={{ start: from, end: enteredTo }}\n                                onDayClick={handleDayClick}\n                                onDayMouseEnter={handleDayMouseEnter}\n                            />\n                        </div>\n                    </form>\n                </div> */}\n                <div >\n                    <ButtonGroup aria-label=\"outlined button group\" className={classes.dateFilterBtnGroup}>\n                        <Button className={mode === FILTER_OPTION.YESTERDAY ? 'active' : ''}\n                            onClick={() => {\n                                setMode(FILTER_OPTION.YESTERDAY)\n                                changeDateRange(FILTER_OPTION.YESTERDAY)\n                            }}>Hôm qua</Button>\n                        <Button className={mode === FILTER_OPTION.TODAY ? 'active' : ''}\n                            onClick={() => {\n                                setMode(FILTER_OPTION.TODAY)\n                                changeDateRange(FILTER_OPTION.TODAY)\n                            }}>Hôm nay</Button>\n                        <Button className={mode === FILTER_OPTION.WEEK ? 'active' : ''}\n                            onClick={() => {\n                                setMode(FILTER_OPTION.WEEK)\n                                changeDateRange(FILTER_OPTION.WEEK)\n                            }}>Tuần</Button>\n                        {\n                            isShowDateSelection || <Button className={mode === FILTER_OPTION.MONTH ? 'active' : ''}\n                                onClick={() => {\n                                    setMode(FILTER_OPTION.MONTH)\n                                    changeDateRange(FILTER_OPTION.MONTH)\n                                }}>Tháng</Button>\n                        }\n                        <Button className={mode === FILTER_OPTION.YEAR ? 'active' : ''}\n                            onClick={() => {\n                                setMode(FILTER_OPTION.YEAR)\n                                changeDateRange(FILTER_OPTION.YEAR)\n                            }}>Năm</Button>\n                        {isShowAll && <Button className={mode === FILTER_OPTION.ALL ? 'active' : ''}\n                            onClick={() => {\n                                setMode(FILTER_OPTION.ALL)\n                                changeDateRange(FILTER_OPTION.ALL)\n                            }}>All</Button>}\n                    </ButtonGroup>\n                </div>\n                {\n                    isShowDateSelection &&\n\n                    <FormControl style={{\n                        marginLeft: 15,\n                        background: 'unset',\n                        height: 33,\n                    }} variant=\"outlined\" >\n                        <Select\n                            value={monthSelection}\n                            onChange={e => handleChangeMonthSelection(e.target.value)}\n                            style={{\n                                width: 110,\n                                maxHeight: '100%'\n                            }}\n                            MenuProps={{\n                                anchorOrigin: {\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\"\n                                },\n                                transformOrigin: {\n                                    vertical: \"top\",\n                                    horizontal: \"left\"\n                                },\n                                getContentAnchorEl: null\n                            }}\n                            labelId=\"brand\"\n                            id=\"brand\"\n                            label=\"Brand\"\n                        >\n                            {DATE_OPTIONS.map((item, index) => (\n                                <MenuItem key={item} value={index}>{item}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default RangeDatePicker;","import axios from '../helpers/axios'\nexport const LISTING_BRAND_URL = \"api/brands\";\nexport const CREATE_BRAND_URL = \"/api/create-brand\";\nexport const BRAND_DETAIL_URL = (brandId) => `/api/brand/${brandId}/detail`;\nexport const EDIT_BRAND_URL = (brandId) => `/api/brand/${brandId}/detail`;\nexport const CONNECT_GOOGLE_SHEET = (brandId) => `/api/brand/${brandId}/connect-googlesheet`;\nexport const GET_FILES_FROM_GOOGLE_SHEET = (brandId) => `/api/source/${brandId}/drive-folder-detail`;\nexport const SELECT_FILE_FROM_GOOGLE_DRIVE = (brandId) => `/api/brand/${brandId}/new-spreadsheet-source`;\nexport const CHANGE_FILE_NAME_FROM_GOOGLE_DRIVE = (shop) => `/api/shop/${shop}/update-source-name`;\nexport const DISCONNECT = (shopid) => `/api/shop/${shopid}/disconnect`\nexport const UPLOAD_EXTERNAL_DATA = (brandId) => `/brand/${brandId}/upload-excel`\nexport const DELETE_BRAND = (brandId) => `/api/brand/${brandId}/delete`\nexport const UPLOAD_ORDER = (brandId, sourceId) => `/brand/${brandId}/source/${sourceId}/add-order`\nexport const CONNECT_SENDO = brandId => `/api/brand/${brandId}/connect-sendo`\nexport const SELECT_SPREADSHEET = sourceId => `/api/source/${sourceId}/attach-spreadsheet-source`\n\nexport function selectSpreadsheet(sourceId, spreadSheet) {\n    let data = new FormData();\n    data.append('spreadSheet', spreadSheet)\n    return axios({\n        method: 'post',\n        url: SELECT_SPREADSHEET(sourceId),\n        data: data\n    })\n}\n\nexport function connectSendo(shopKey, secretKey, brandId) {\n    let data = new FormData();\n    data.append('shop_key', shopKey)\n    data.append('secret_key', secretKey)\n    return axios({\n        method: 'post',\n        url: CONNECT_SENDO(brandId),\n        data: data\n    })\n}\n\nexport function createBrand(brand) {\n    let data = new FormData();\n    data.append('name', brand)\n    return axios({\n        method: 'post',\n        url: CREATE_BRAND_URL,\n        data: data\n    })\n}\n\nexport function editBrand(brandId, name, avatar) {\n    let data = new FormData();\n    name && data.append('name', name)\n    avatar && data.append('avatar', avatar)\n    return axios({\n        method: 'post',\n        url: EDIT_BRAND_URL(brandId),\n        data: data\n    })\n}\n\nexport function getBrandList() {\n    return axios({\n        method: 'get',\n        url: LISTING_BRAND_URL,\n    })\n}\n\nexport function getBrandDetail(brandId) {\n    return axios({\n        method: 'get',\n        url: BRAND_DETAIL_URL(brandId),\n    })\n}\n\nexport function connectGoogleDrive(brandId) {\n    return axios({\n        method: 'post',\n        url: CONNECT_GOOGLE_SHEET(brandId)\n    })\n}\n\nexport function getGoogleSheetFiles(brandId) {\n    return axios({\n        method: 'get',\n        url: GET_FILES_FROM_GOOGLE_SHEET(brandId)\n    })\n}\n\nexport function selectGoogleDriveFile(name, brandId) {\n    let data = new FormData()\n    data.append('name', name)\n    return axios({\n        method: 'post',\n        url: SELECT_FILE_FROM_GOOGLE_DRIVE(brandId),\n        data: data\n    })\n}\n\nexport function updateGoogleFileName(name, shop) {\n    let data = new FormData()\n    data.append('name', name)\n    return axios({\n        method: 'post',\n        url: CHANGE_FILE_NAME_FROM_GOOGLE_DRIVE(shop),\n        data: data\n    })\n}\n\nexport function disconnect(shopid) {\n    return axios({\n        method: 'post',\n        url: DISCONNECT(shopid)\n    })\n}\n\nexport function uploadExternalData(name, brandId) {\n    let formdata = new FormData()\n    formdata.append('name', name)\n    return axios({\n        method: 'post',\n        url: UPLOAD_EXTERNAL_DATA(brandId),\n        data: formdata\n    })\n}\n\nexport function uploadOrder(data, sourceId, brandId) {\n    let formdata = new FormData()\n    formdata.append('data', JSON.stringify(data))\n    return axios({\n        method: 'post',\n        url: UPLOAD_ORDER(brandId, sourceId),\n        data: formdata\n    })\n}\n\nexport function deleteBrand(brandId) {\n    return axios({\n        method: 'post',\n        url: DELETE_BRAND(brandId),\n    })\n}\n","import axios from '../helpers/axios'\n\nexport const REVENUE_BY_BRAND = (brandId) => `/api/brand/${brandId}/revenue-by-market`\nexport const PRODUCT_HIGHLIGHT_BY_BRAND = (brandId) => `/api/brand/${brandId}/product-highlight`\nexport const GET_ORDER_LIST = (shop, source, page, limit, from, to, mode) => {\n    let endpoint = ''\n    switch (source) {\n        case 'shopee':\n            endpoint = 'shopee-source'\n            break;\n        case 'lazada':\n            endpoint = 'lazada-source'\n            break;\n        case 'tiki':\n            endpoint = 'tiki-source'\n            break;\n        case 'sendo':\n            endpoint = 'sendo-source'\n            break;\n        default:\n            endpoint = 'other-source'\n            break;\n    }\n    return `/api/shop/${shop}/orders/${endpoint}?page=${page}&limit=${limit}${mode === 'all' ? '' : `&from=${from}&to=${to}`}`\n}\nexport const GET_SHOPS = '/api/shops'\nexport const GET_USERS = '/api/v1/user/role'\nexport const GET_USERS_LIST = '/api/v1/users/listing'\nexport const INTERNAL_REPORT = (from, to, groupBy) => `/api/brand/all-brand-report?from=${from}&to=${to}&groupby=${groupBy}`\nexport const GET_DEPARMENTS = '/api/departs'\nexport const CREATE_DEPARMENTS = '/api/create-depart'\nexport const ADD_USER_TO_DEPARTMENTS = departId => `/api/depart/${departId}/add-user`\n\nexport function addUserToDepartment(departId, users) {\n    let data = new FormData()\n    data.append('users', JSON.stringify(users))\n    return axios({\n        method: 'POST',\n        url: ADD_USER_TO_DEPARTMENTS(departId),\n        data: data\n    })\n}\n\nexport function createDepartments(name) {\n    let data = new FormData()\n    data.append('name', name)\n    return axios({\n        method: 'POST',\n        url: CREATE_DEPARMENTS,\n        data: data\n    })\n}\n\nexport function getDepartments() {\n    return axios({\n        method: 'GET',\n        url: GET_DEPARMENTS\n    })\n}\n\nexport function getBrandReport(from, to, groupBy) {\n    return axios({\n        method: 'GET',\n        url: INTERNAL_REPORT(from, to, groupBy)\n    })\n}\n\nexport function getRevenueByBrand(brandId, from, to, groupBy) {\n    return axios({\n        method: 'GET',\n        url: `${REVENUE_BY_BRAND(brandId)}?from=${from}&to=${to}&groupby=${groupBy}`\n    })\n}\n\nexport function getProductHighlightByBrand(brandId, from, to) {\n    return axios({\n        method: 'GET',\n        url: `${PRODUCT_HIGHLIGHT_BY_BRAND(brandId)}?from=${from}&to=${to}`\n    })\n}\n\nexport function getOrders(shop, source, page, limit, from, to, mode) {\n    return axios({\n        method: 'GET',\n        url: GET_ORDER_LIST(shop, source, page + 1, limit, from, to, mode)\n    })\n}\n\nexport function getShops() {\n    return axios({\n        method: 'GET',\n        url: GET_SHOPS\n    })\n}\n\nexport function getUsers() {\n    return axios({\n        method: 'GET',\n        url: GET_USERS\n    })\n}\n\nexport function getUserList() {\n    return axios({\n        method: 'GET',\n        url: GET_USERS_LIST\n    })\n}\n","export const ORDER_STATUS = {\n    shopee: {\n        CANCELLED: {\n            code: 'CANCELLED'\n        },\n        TO_RETURN: {\n            code: 'CANCELLED'\n        },\n        READY_TO_SHIP: {\n            code: 'SHIPPING'\n        },\n        IN_CANCEL: {\n            code: 'SHIPPING'\n        },\n        COMPLETED: {\n            code: 'COMPLETED'\n        },\n        SHIPPED: {\n            code: 'COMPLETED'\n        }\n    },\n    sendo: {\n        7: {\n            code: 'COMPLETED'\n        },\n        8: {\n            code: 'COMPLETED'\n        },\n        10: {\n            code: 'COMPLETED'\n        },\n        2: {\n            code: 'SHIPPING'\n        },\n        3: {\n            code: 'SHIPPING'\n        },\n        6: {\n            code: 'SHIPPING'\n        },\n        11: {\n            code: 'SHIPPING'\n        },\n        12: {\n            code: 'SHIPPING'\n        },\n        14: {\n            code: 'SHIPPING'\n        },\n        15: {\n            code: 'SHIPPING'\n        },\n        19: {\n            code: 'SHIPPING'\n        },\n        23: {\n            code: 'SHIPPING'\n        },\n        13: {\n            code: 'CANCELLED'\n        },\n        21: {\n            code: 'CANCELLED'\n        },\n        22: {\n            code: 'CANCELLED'\n        }\n    },\n    lazada: {\n        canceled: {\n            code: 'CANCELLED'\n        },\n        returned: {\n            code: 'CANCELLED'\n        },\n        failed: {\n            code: 'CANCELLED'\n        },\n        pending: {\n            code: 'SHIPPING'\n        },\n        ready_to_ship: {\n            code: 'SHIPPING'\n        },\n        delivered: {\n            code: 'COMPLETED'\n        },\n        shipped: {\n            code: 'SHIPPING'\n        },\n        INFO_ST_DOMESTIC_RETURN_AT_TRANSIT_HUB: {\n            code: 'CANCELLED'\n        }\n    },\n    googleSheet: {\n        Canceled: {\n            code: 'CANCELLED'\n        },\n        Done: {\n            code: 'COMPLETED'\n        },\n        Shipping: {\n            code: 'SHIPPING'\n        }\n    },\n    tiki: {\n        complete: {\n            code: 'COMPLETED'\n        },\n        successful_delivery: {\n            code: 'COMPLETED'\n        },\n        delivered: {\n            code: 'COMPLETED'\n        },\n        closed: {\n            code: 'COMPLETED'\n        },\n        queueing: {\n            code: 'SHIPPING'\n        },\n        processing: {\n            code: 'SHIPPING'\n        },\n        waiting_payment: {\n            code: 'SHIPPING'\n        },\n        handover_to_partner: {\n            code: 'SHIPPING'\n        },\n        packaging: {\n            code: 'SHIPPING'\n        },\n        picking: {\n            code: 'SHIPPING'\n        },\n        shipping: {\n            code: 'SHIPPING'\n        },\n        paid: {\n            code: 'SHIPPING'\n        },\n        hold: {\n            code: 'SHIPPING'\n        },\n        ready_to_ship: {\n            code: 'SHIPPING'\n        },\n        payment_review: {\n            code: 'SHIPPING'\n        },\n        finished_packing: {\n            code: 'SHIPPING'\n        },\n        canceled: {\n            code: 'CANCELLED'\n        },\n        returned: {\n            code: 'CANCELLED'\n        },\n    }\n}\n\nexport const ORDER_CANCELLED_ORDER = {\n    lazada: ['canceled', 'returned', 'failed'],\n    shopee: ['CANCELLED', 'TO_RETURN'],\n    others: ['Canceled'],\n    tiki: ['returned', 'canceled'],\n    sendo: [13, 21, 22]\n}","import XLSX from \"xlsx\"\nimport { ORDER_STATUS } from \"../constant/orderStatus\"\nimport _ from \"lodash\"\nimport { ROLES } from \"../constant/role\"\n\nexport function parseLocaleString(num, isPrice) {\n    return Number(num) ? `${isPrice ? 'đ' : ''} ${Number(num).toLocaleString(undefined, { maximumFractionDigits: 2 })}` : 0\n}\n\nexport function isValidEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function popupWindow(url, title, win, w, h) {\n    const y = win.top.outerHeight / 2 + win.top.screenY - (h / 2);\n    const x = win.top.outerWidth / 2 + win.top.screenX - (w / 2);\n    return win.open(url, title, `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`);\n}\n\nexport function getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n        image,\n        crop.x * scaleX,\n        crop.y * scaleY,\n        crop.width * scaleX,\n        crop.height * scaleY,\n        0,\n        0,\n        crop.width,\n        crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n        canvas.toBlob(blob => {\n            if (!blob) {\n                //reject(new Error('Canvas is empty'));\n                console.error('Canvas is empty');\n                return;\n            }\n            blob.name = fileName;\n            resolve({\n                file: blob,\n                url: window.URL.createObjectURL(blob)\n            });\n        }, 'image/jpeg');\n    });\n}\n\nexport function readExcelFile(file, sheet) {\n    var reader = new FileReader();\n    var result = {};\n    return new Promise((resolve, reject) => {\n        try {\n            reader.onload = function (e) {\n                var data = e.target.result;\n                data = new Uint8Array(data);\n                var workbook = XLSX.read(data, { type: 'array' });\n                var result = {};\n                workbook.SheetNames.forEach(function (sheetName) {\n                    var roa = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                        header: 1,\n                        raw: false\n                    });\n                    if (roa.length) result[sheetName] = roa;\n                });\n                resolve(result[sheet])\n            };\n\n            if (file) {\n                reader.readAsArrayBuffer(file);\n            }\n            else {\n                resolve([])\n            }\n        }\n        catch (err) {\n            reject(err)\n        }\n\n    })\n\n}\n\nexport function getFileExtension(file) {\n    return file && file.split('.')[1];\n}\n\nexport const randomColor = () => '#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n\nexport const groupOrderStatus = (status, filter) => {\n\n    const baseConfig = {\n        Canceled: {\n            code: 'CANCELLED'\n        },\n        Done: {\n            code: 'COMPLETED'\n        },\n        Shipping: {\n            code: 'SHIPPING'\n        }\n    }\n\n    let data = {\n        COMPLETED: 0,\n        SHIPPING: 0,\n        CANCELLED: 0,\n    }\n\n    let amount = {\n        COMPLETED: 0,\n        SHIPPING: 0,\n        CANCELLED: 0,\n    }\n\n    let orderCount = 0\n\n    if (Object.keys(status).length > 0) {\n        Object.keys(status).forEach(function (key) {\n            if (!ORDER_STATUS[key]) {\n                ORDER_STATUS[key] = baseConfig\n            }\n            if (status[key] && status[key].length > 0) {\n                status[key].forEach(item => {\n                    if (filter === key || filter === 'all') {\n                        orderCount += item.count\n                    }\n                    const id = typeof (item._id) === 'object' ? item._id[0] : item._id\n                    if (ORDER_STATUS[key] &&\n                        ORDER_STATUS[key][id]\n                        && (filter === key || filter === 'all')) {\n                        data[ORDER_STATUS[key][id].code] += item.count\n                        if (Number(item.totalAmount)) {\n                            amount[ORDER_STATUS[key][id].code] += item.totalAmount\n                        }\n                    }\n                })\n            }\n        });\n    }\n    else {\n        data = {\n            COMPLETED: '-',\n            SHIPPING: '-',\n            CANCELLED: '-',\n        }\n    }\n    return { data, amount, orderCount }\n}\n\nexport function calucateGrowthRate(oldRevenue, revenue) {\n    revenue = Number(revenue)\n    oldRevenue = Number(oldRevenue)\n    const percentageChange = (Math.abs(revenue - oldRevenue) / oldRevenue) * 100\n    const isInvariant = revenue === oldRevenue || oldRevenue === 0\n    const isIncrease = revenue > oldRevenue\n    return { percentageChange, isInvariant, isIncrease }\n}\n\nexport const isAuthenticated = (userPermission, targetPermission) => {\n    const mergedPermissions = [...userPermission || [], ...targetPermission || []]\n    return (userPermission && userPermission.length === 0) || (targetPermission && targetPermission.length === 0)\n        || new Set(mergedPermissions).size < mergedPermissions.length\n}\n\nexport const getSendoOrderLabel = code => {\n    switch (code) {\n        case 2:\n            return \"Mới\"\n            break;\n        case 3:\n            return \"Đang xử lý\"\n            break;\n        case 6:\n            return \"Đang vận chuyển\"\n            break;\n        case 7:\n            return \"Đã giao hàng\"\n            break;\n        case 8:\n            return \"Đã hoàn tất\"\n            break;\n        case 10:\n            return \"Đóng\"\n            break;\n        case 11:\n            return \"Yêu cầu hoãn\"\n            break;\n        case 12:\n            return \"Đang hoãn\"\n            break;\n        case 13:\n            return \"Hủy\"\n            break;\n        case 14:\n            return \"Yêu cầu tách\"\n            break;\n        case 15:\n            return \"Chờ tách\"\n            break;\n        case 19:\n            return \"Chờ gộp\"\n            break;\n        case 23:\n            return \"Chờ sendo xử lý\"\n            break;\n        case 21:\n            return \"Đang đổi trả\"\n            break;\n        case 22:\n            return \"Đổi trả thành công\"\n        default:\n            return code\n    }\n}\n","import { toAbsoluteUrl } from \"../../_metronic/utils/utils\";\n\nexport const MARKET_PLACE = {\n    shopee: {\n        key: 'shopee',\n        name: 'Shopee',\n        image: toAbsoluteUrl('/media/platform-logos/shopee.png'),\n        color: '#FFA500',\n    },\n    sendo: {\n        key: 'sendo',\n        name: 'Sendo',\n        image: toAbsoluteUrl('/media/platform-logos/sendo.png'),\n        color: '#DC143C'\n    },\n    lazada: {\n        key: 'lazada',\n        name: 'Lazada',\n        image: toAbsoluteUrl('/media/platform-logos/lazada.png'),\n        color: '#9932CC'\n    },\n    // tiki: {\n    //     key: 'tiki',\n    //     name: 'Tiki',\n    //     image: toAbsoluteUrl('/media/platform-logos/tiki.png'),\n    //     color: '#00BFFF'\n    // },\n    googleSheet: {\n        key: 'googleSheet',\n        name: 'Google Sheet',\n        image: toAbsoluteUrl('/media/logos/google-sheet.svg'),\n        color: '#91dd47'\n    },\n    uploadSource: {\n        key: 'uploadSource',\n        name: 'Others',\n        image: toAbsoluteUrl('/media/logos/google-sheet.svg'),\n        color: '#91dd47'\n    },\n    others: {\n        key: 'uploadSource',\n        name: 'Others',\n        image: toAbsoluteUrl('/media/logos/google-sheet.svg'),\n        color: '#91dd47'\n    },\n    yes24: {\n        key: 'yes24',\n        name: 'Yes 24',\n        image: toAbsoluteUrl('/media/platform-logos/yes24.jpg'),\n        color: '#91dd47'\n    }\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Icon, Avatar, FormGroup, TextField } from '@material-ui/core';\nimport { toAbsoluteUrl } from '../../../_metronic/utils/utils';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport _ from 'lodash';\nimport { readExcelFile, getFileExtension } from \"../../helpers/helper\"\nimport { uploadExternalData, uploadOrder } from \"../../crud/brand.crud\"\nimport moment from \"moment\"\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\"\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { useHistory } from \"react-router-dom\";\nimport { parseLocaleString } from \"../../helpers/helper\"\n\n\nUploadPage.propTypes = {\n\n};\n\nexport const CELL_TYPE = {\n    DATE: 'date',\n    NUMBER: 'number',\n    STRING: 'string'\n}\n\nexport const VALID_FILES = ['xls', 'xlsx', 'csv']\n\nexport const FILE_COLLUMNS_CONFIG = {\n    date_request: {\n        isRequired: true,\n        type: CELL_TYPE.DATE,\n        name: 'Date_Request'\n    },\n    marketplace: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'Marketplace'\n    },\n    brand: {\n        isRequired: true,\n        type: CELL_TYPE.STRING,\n        name: 'Brand'\n    },\n    order_number: {\n        isRequired: true,\n        type: CELL_TYPE.STRING,\n        name: 'Order_Number'\n    },\n    shipping_code: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'Shipping_Code'\n    },\n    seller_sku: {\n        isRequired: true,\n        type: CELL_TYPE.STRING,\n        name: 'Seller_SKU'\n    },\n    item_name: {\n        isRequired: true,\n        type: CELL_TYPE.STRING,\n        name: 'Item_Name'\n    },\n    unit_price: {\n        isRequired: true,\n        type: CELL_TYPE.NUMBER,\n        name: 'Unit_Price'\n    },\n    paid_price: {\n        isRequired: true,\n        type: CELL_TYPE.NUMBER,\n        name: 'Paid_Price'\n    },\n    total: {\n        isRequired: false,\n        type: CELL_TYPE.NUMBER,\n        name: 'Total'\n    },\n    created_at: {\n        isRequired: false,\n        type: CELL_TYPE.DATE,\n        name: 'Created'\n    },\n    quality_confirm: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'quality_confirm'\n    },\n    confirm_time: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'confirm_time'\n    },\n    pakaging_time: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'pakaging_time'\n    },\n    deliver_time: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'Deliver_Time'\n    },\n    status: {\n        isRequired: true,\n        type: CELL_TYPE.STRING,\n        name: 'Status'\n    },\n    year: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'year'\n    },\n    month: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'month'\n    },\n    day: {\n        isRequired: false,\n        type: CELL_TYPE.STRING,\n        name: 'day'\n    },\n    unique: {\n        isRequired: false,\n        type: CELL_TYPE.NUMBER,\n        name: 'Unique'\n    },\n    '': {\n\n    }\n}\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '0px 50px',\n        borderRadius: '5px',\n        textAlign: 'center',\n        maxWidth: '700px',\n        margin: '30px auto 50px auto',\n        color: '#43434A',\n    },\n    uploadFormTitle: {\n        fontSize: '32px',\n        fontWeight: 800,\n        color: '#014B68',\n        marginBottom: 30\n    },\n    dragAndDropBox: {\n        fontSize: '18px',\n        padding: 30,\n        backgroundColor: '#F1FFFA',\n        border: '1px dashed #98D25C',\n        borderRadius: '7.5px',\n        marginBottom: '15px',\n    },\n    uploadFormAction: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    uploadIcon: {\n        marginTop: 15,\n        color: '#014B68',\n        fontSize: 72\n    },\n    uploadFormProgress: {\n        marginTop: 30,\n        borderTop: '1px solid rgba(216, 216, 216, 1)',\n        paddingTop: 30,\n        color: '#34495E',\n        fontSize: 14,\n        textAlign: 'left',\n        display: 'flex',\n    },\n    progressBar: {\n        height: '10px',\n        borderRadius: '10px',\n        backgroundColor: '#D8D8D8',\n        '& .MuiLinearProgress-bar': {\n            backgroundColor: '#014B68',\n        }\n    },\n    uploadedFile: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-end',\n        borderBottom: '1px solid #2C3E50',\n        marginBottom: 15,\n        paddingBottom: 10,\n        '& p': {\n            fontSize: 16,\n            color: '#34495E',\n            margin: 0,\n            width: '100%',\n            textAlign: 'left',\n            padding: '0 15px'\n        }\n    },\n    connectForm: {\n        width: 300,\n        margin: '0 auto',\n    },\n    errorBox: {\n        border: '1px dashed red',\n        padding: 15,\n        borderRadius: 15,\n        color: 'red',\n        textAlign: 'left',\n        position: 'relative'\n    },\n    errorBoxLegend: {\n        color: 'red',\n        fontWeight: 800,\n        fontSize: 32\n    },\n    cancelErrorBox: {\n        position: 'absolute',\n        right: -15,\n        top: -15,\n        cursor: 'pointer',\n        fontSize: 36,\n        background: 'white'\n    }\n})\n\nfunction UploadPage(props) {\n    const classes = useStyles()\n    const [progress, setProgress] = useState(0);\n    const [err, setErr] = useState([])\n    const fileInput = useRef('')\n    const [file, setFile] = useState('')\n    const [data, setData] = useState([])\n    const [completedRecords, setCompletedRecords] = useState(0)\n    const { intl, source } = props;\n    const history = useHistory()\n\n    useEffect(() => {\n        handleCloseErrPopup()\n    }, [props.flag])\n\n    const handleCloseErrPopup = () => {\n        setErr([])\n        setData([])\n    }\n\n    const uploadFile = file => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n                if (oldProgress === 100) {\n                    setTimeout(() => {\n                        validateFile(file)\n                            .then(res => {\n                                setData(res)\n                            })\n                            .catch(err => {\n                                setErr(err)\n                            })\n                    }, 1000)\n                    clearInterval(timer)\n                    return 100\n                }\n                else {\n                    return oldProgress + 5\n                }\n            });\n        }, 50);\n    }\n\n    const validateFile = (file) => {\n        let tempErr = []\n        let data = []\n        setFile(file)\n\n        return new Promise((resolve, reject) => {\n\n            //Check file type\n            if (VALID_FILES.includes(getFileExtension(_.get(file, 'name')))) {\n                readExcelFile(file, 'Query')\n                    .then(res => {\n                        setProgress(0)\n                        if (res && res.length > 0) {\n                            let col = res.shift()\n                            let keyCol = []\n\n                            //Get columns\n                            _.forEach(col, c => {\n                                keyCol.push(!c ? '' : c.toLowerCase().trim().replace(' ', '_'))\n                            })\n\n                            //Check missing columns\n                            _.forEach(Object.keys(FILE_COLLUMNS_CONFIG), key => {\n                                if (FILE_COLLUMNS_CONFIG[key] && FILE_COLLUMNS_CONFIG[key].isRequired && !keyCol.includes(key)) {\n                                    tempErr.push(`Missing \"${key.replace('_', ' ')}\" column`)\n                                }\n                            })\n\n                            _.forEach(res, (item, index) => {\n                                let row = {}\n                                if (item && item.length > 0) {\n                                    _.forEach(item, (sItem, sIndex) => {\n                                        let value\n\n                                        //Check cell required\n                                        if (_.get(FILE_COLLUMNS_CONFIG[keyCol[sIndex]], 'isRequired') && !sItem) {\n                                            tempErr.push(`Cell is required at row ${index + 2} in '${col[sIndex]}' column `)\n                                        }\n\n                                        //Check cell value\n                                        switch (_.get(FILE_COLLUMNS_CONFIG[keyCol[sIndex]], 'type')) {\n                                            case CELL_TYPE.DATE:\n                                                moment(sItem).isValid() || tempErr.push(`Invalid date at row ${index + 2} in '${col[sIndex]}' column `)\n                                                value = sItem\n                                                break;\n                                            case CELL_TYPE.NUMBER:\n                                                typeof (Number(sItem)) === 'number' || tempErr.push(`Invalid number at row ${index + 2} in '${col[sIndex]}' column `)\n                                                value = Number(sItem) || 0\n                                                break;\n                                            case CELL_TYPE.STRING:\n                                                value = sItem || ''\n                                                break;\n                                        }\n                                        row[_.get(FILE_COLLUMNS_CONFIG[keyCol[sIndex]], 'name')] = value\n                                    })\n                                    data.push(row)\n                                }\n                                row = {}\n                            })\n                            tempErr.length > 0 ? reject(tempErr) : resolve(data)\n                        }\n                        else {\n                            tempErr.push('Empty file')\n                            reject(tempErr)\n                        }\n                    })\n            }\n            else {\n                tempErr.push('Wrong file format. We only accept xls, xlsx, csv file')\n                setProgress(0)\n                reject(tempErr)\n            }\n        })\n    }\n\n    const dragFile = e => {\n        e.stopPropagation()\n        e.preventDefault()\n        e.dataTransfer.dropEffect = 'copy'\n    }\n\n    const dropFile = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        const files = _.get(e, 'dataTransfer.files');\n        uploadFile(files && files[0])\n    }\n\n    const selectFile = (values, { setStatus, setSubmitting }) => {\n        setSubmitting(true)\n        const chunk = _.chunk(data, 100)\n        const promiseArr = []\n        chunk && chunk.length > 0 && chunk.forEach(item => {\n            promiseArr.push(source ? uploadOrder(item, source, props.brand) : uploadExternalData(data, values.fileName, props.brand))\n        })\n\n        executePromise(promiseArr)\n\n        function executePromise(array) {\n            let tempArray\n            if (array.length > 0) {\n                tempArray = array.splice(0, 10)\n                Promise.all(tempArray)\n                    .then(res => {\n                        setCompletedRecords(completedRecords => {\n                            let temp = completedRecords + tempArray.length * 100\n                            return temp > data.length ? data.length : temp\n                        })\n                        executePromise(array)\n                    })\n            }\n            else {\n                setSubmitting(false)\n                setTimeout(() => {\n                    props.onDone()\n                    setCompletedRecords(0)\n                }, 1500)\n            }\n\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.uploadFormContainer}>\n                {(data.length === 0 && err.length === 0) ? <div className={classes.uploadBox}>\n                    <div className={classes.uploadFormTitle}>\n                        <p>Upload Data</p>\n                    </div>\n                    <div\n                        onDragOver={dragFile}\n                        onDrop={dropFile}\n                        className={classes.dragAndDropBox}>\n                        <Icon className={classes.uploadIcon}>backup</Icon>\n                        <p>Drag and drop here</p>\n                        <p>Chỉ được tải tập tin có định dạng .xls, .xlsx, .csv</p>\n                    </div>\n                    <p >or</p>\n                    <div className={classes.uploadFormAction}>\n                        <label htmlFor=\"external-data\" className=\"btn-base btn-base--success btn-base--lg\">BROWSE</label>\n                        <input ref={fileInput} onChange={(e) => uploadFile(_.get(e, 'target.files[0]'))} id=\"external-data\" type=\"file\" style={{\n                            display: 'none'\n                        }} />\n                    </div>\n                    {progress > 0 && <div className={classes.uploadFormProgress}>\n                        <div style={{\n                            marginRight: '15px'\n                        }}>\n                            <Avatar variant=\"square\" src={toAbsoluteUrl('/media/logos/google-sheet.svg')} style={{\n                                width: \"32px\",\n                                height: \"32px\"\n                            }}></Avatar>\n                        </div>\n                        <div style={{\n                            width: 'calc(100% - 70px)'\n                        }}>\n                            <p>Wait, we are still uploading...</p>\n                            <LinearProgress className={classes.progressBar} variant=\"determinate\" value={progress} />\n                        </div>\n                    </div>}\n                </div>\n                    :\n                    <div className={classes.resultBox}>\n                        {err.length === 0 ? <div className={classes.connectForm}>\n                            <div className={classes.connectForm}>\n                                <div className={classes.uploadedFile}>\n                                    <Avatar\n                                        src={toAbsoluteUrl('/media/logos/google-sheet.svg')}\n                                        variant=\"square\"\n                                        style={{\n                                            width: \"32px\",\n                                            height: \"32px\"\n                                        }}></Avatar>\n                                    <p>{_.get(file, 'name')}</p>\n                                    <Icon\n                                        onClick={handleCloseErrPopup}\n                                        style={{\n                                            color: '#34495E',\n                                            fontSize: 24,\n                                            cursor: 'pointer'\n                                        }}>delete</Icon>\n                                </div>\n                                <div style={{\n                                    marginTop: 30,\n                                    marginBottom: 30\n                                }}>\n                                    <div style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between'\n                                    }}>\n                                        <p>{`${parseLocaleString(completedRecords)} / ${parseLocaleString(data.length)} records`}</p>\n                                        <p>{`${parseLocaleString(completedRecords * 100 / data.length)}%`}</p>\n                                    </div>\n                                    <LinearProgress className={classes.progressBar} variant=\"determinate\" value={completedRecords * 100 / data.length} />\n                                </div>\n                                <Formik\n                                    initialValues={{\n                                        fileName: '',\n                                    }}\n                                    validate={values => {\n                                        const errors = {};\n\n                                        if (!source && !values.fileName) {\n                                            errors.fileName = intl.formatMessage({\n                                                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                            });\n                                        }\n\n                                        return errors;\n                                    }}\n                                    onSubmit={selectFile}\n                                >\n                                    {({\n                                        values,\n                                        status,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        resetForm\n                                    }) => (\n                                            <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                                {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                    <div className=\"alert-text\">{status}</div>\n                                                </div>}\n                                                {!source && <FormGroup className=\"input-base\">\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        margin=\"normal\"\n                                                        required\n                                                        fullWidth\n                                                        type=\"text\"\n                                                        placeholder=\"Sale channel name\"\n                                                        name=\"fileName\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        value={values.fileName}\n                                                        helperText={touched.fileName && errors.fileName}\n                                                        error={Boolean(touched.fileName && errors.fileName)}\n                                                    /></FormGroup>\n                                                }\n                                                <Button style={{\n                                                    width: '100%',\n                                                    marginTop: 15\n                                                }}\n                                                    type=\"submit\"\n                                                    disabled={isSubmitting}\n                                                    className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                        {\n                                                            \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                        }\n                                                    )}`}>Submit</Button>\n                                            </form>\n                                        )}\n                                </Formik>\n                            </div>\n                        </div>\n                            :\n                            <div>\n                                <p className={classes.errorBoxLegend}>Lỗi</p>\n                                <div className={classes.errorBox}>\n                                    {\n                                        err.map((e, index) => (\n                                            <p key={index}>{`${index + 1} - ${e}`}</p>\n                                        ))\n                                    }\n                                    <Icon\n                                        onClick={handleCloseErrPopup}\n                                        className={classes.cancelErrorBox}>highlight_off</Icon>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default injectIntl(UploadPage);","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { FILE_COLLUMNS_CONFIG, CELL_TYPE } from './UploadPage'\nimport { globalStyles } from '../../styles/globalStyles'\nimport {\n    Dialog, DialogContent, Button, Icon\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport ReactDataGrid from \"react-data-grid\";\nimport clsx from \"clsx\"\nimport moment from \"moment\"\nimport { uploadOrder } from \"../../crud/brand.crud\"\n\nFormEntry.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    errorBox: {\n        border: '1px dashed red',\n        padding: 15,\n        borderRadius: 15,\n        color: 'red',\n        textAlign: 'left',\n        position: 'relative'\n    },\n    errorBoxLegend: {\n        color: 'red',\n        fontWeight: 800,\n        fontSize: 32\n    },\n    cancelErrorBox: {\n        position: 'absolute',\n        right: -15,\n        top: -15,\n        cursor: 'pointer',\n        fontSize: 36,\n        background: 'white'\n    },\n    ...globalStyles\n})\n\nfunction FormEntry(props) {\n    const classes = useStyles()\n    const [gridRow, setGridRow] = useState([])\n    const [gridCol, setGridCol] = useState([])\n    const [err, setErr] = useState([])\n    const [errPopup, setErrPopup] = useState(false)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const { brand, source } = props;\n\n    useEffect(() => {\n        initData()\n    }, [])\n\n    const initData = () => {\n        const initialRow = {}\n        const tempRow = []\n        const tempCol = [{\n            key: 'stt',\n            name: '',\n            editable: false,\n            width: 35\n        }]\n        Object.keys(FILE_COLLUMNS_CONFIG).forEach(item => {\n            if (item) {\n                initialRow[FILE_COLLUMNS_CONFIG[item].name] = ''\n                tempCol.push({\n                    key: FILE_COLLUMNS_CONFIG[item].name,\n                    name: FILE_COLLUMNS_CONFIG[item].name,\n                    editable: true,\n                    width: 120\n                })\n            }\n        })\n        for (let i = 0; i < 20; i++) {\n            tempRow.push({ ...initialRow })\n            tempRow[i]['stt'] = i + 1\n        }\n        setGridRow(tempRow)\n        setGridCol(tempCol)\n    }\n\n    const validateRow = (data) => {\n        const tempErr = []\n        data.forEach((item, index) => {\n            Object.keys(FILE_COLLUMNS_CONFIG).forEach(key => {\n                if (key) {\n                    //Check cell required\n                    if (_.get(FILE_COLLUMNS_CONFIG[key], 'isRequired') && !item[FILE_COLLUMNS_CONFIG[key].name]) {\n                        tempErr.push(`Cell is required at row ${index + 1} in '${FILE_COLLUMNS_CONFIG[key].name}' column `)\n                    }\n\n                    //Check cell value\n                    switch (_.get(FILE_COLLUMNS_CONFIG[key], 'type')) {\n                        case CELL_TYPE.DATE:\n                            moment(item[FILE_COLLUMNS_CONFIG[key].name]).isValid() || tempErr.push(`Invalid date at row ${index + 2} in '${FILE_COLLUMNS_CONFIG[key].name}' column `)\n                            break;\n                        case CELL_TYPE.NUMBER:\n                            typeof (Number(item[FILE_COLLUMNS_CONFIG[key].name])) === 'number' || tempErr.push(`Invalid number at row ${index + 2} in '${FILE_COLLUMNS_CONFIG[key].name}' column `)\n                            break;\n                        case CELL_TYPE.STRING:\n                            break;\n                    }\n                }\n\n            })\n        })\n        return tempErr\n    }\n\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n        const rows = gridRow.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n            rows[i] = { ...rows[i], ...updated };\n        }\n        setGridRow(rows)\n    }\n\n    const isEmptyRow = (row) => {\n        let count = 0\n        Object.keys(row).forEach(item => {\n            if (row[item]) {\n                count++\n            }\n        })\n        return count === 1\n    }\n\n    const handleSubmit = () => {\n        let temp = []\n        gridRow && gridRow.length > 0 && gridRow.forEach(item => {\n            if (!isEmptyRow(item)) {\n                temp.push(item)\n            }\n        })\n\n        if (validateRow(temp).length === 0) {\n            setSubmitLoading(true)\n            uploadOrder(temp, source, props.brand)\n                .then(res => {\n                    setSubmitLoading(false)\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setErr([errMsg])\n                        setErrPopup(true)\n                    }\n                    else {\n                        props.onDone()\n                        initData()\n                    }\n                })\n                .catch(err => {\n                    setErr(['Network error. Please try again'])\n                    setErrPopup(true)\n                    setSubmitLoading(false)\n                })\n        }\n        else {\n            setErr(validateRow(temp))\n            setErrPopup(true)\n        }\n    }\n\n\n    return (\n        <div style={{\n            padding: 30,\n        }}>\n            <div style={{\n                maxWidth: '100%',\n                overflow: 'auto',\n                maxHeight: 500\n            }}>\n                <ReactDataGrid\n                    columns={gridCol}\n                    rowGetter={i => gridRow[i]}\n                    rowsCount={gridRow.length}\n                    onGridRowsUpdated={onGridRowsUpdated}\n                    enableCellSelect={true}\n                />\n            </div>\n            <div className={classes.leftBtnContainer} style={{\n                marginTop: 15\n            }}>\n                <Button onClick={handleSubmit} className={`btn-base btn-base--success btn-base--lg ${clsx(\n                    {\n                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": submitLoading\n                    }\n                )}`}>Save</Button>\n            </div>\n            <Dialog\n                open={errPopup}\n                keepMounted\n                fullWidth={true}\n                onClose={() => setErrPopup(false)}\n                maxWidth=\"sm\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <div style={{\n                        padding: 30\n                    }}>\n                        <p className={classes.errorBoxLegend}>Lỗi</p>\n                        <div className={classes.errorBox}>\n                            {\n                                err.map((e, index) => (\n                                    <p key={index}>{`${index + 1} - ${e}`}</p>\n                                ))\n                            }\n                            <Icon\n                                onClick={() => setErrPopup(false)}\n                                className={classes.cancelErrorBox}>highlight_off</Icon>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default FormEntry;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableCell, TableBody, ButtonGroup, Dialog, DialogContent,\n    Button, TablePagination, CircularProgress, TableRow, Avatar, FormGroup, TextField\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../../../crud/statitics.crud\"\nimport { parseLocaleString, getSendoOrderLabel } from \"../../../helpers/helper\"\nimport { MARKET_PLACE } from \"../../../constant/marketplace\"\nimport UploadPage from '../UploadPage'\nimport { FILE_COLLUMNS_CONFIG } from '../UploadPage'\nimport { globalStyles } from '../../../styles/globalStyles'\nimport FormEntry from '../FormEntry'\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { actionTypes as brandTypes } from '../../../store/ducks/brand.duck'\nimport { useDispatch } from 'react-redux';\nimport { getBrandDetail, getBrandList } from '../../../crud/brand.crud';\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\n\nOrderList.propTypes = {\n\n};\n\nexport const colSetting = {\n    lazada: ['order_id', 'created_at', 'eceOrderDate', 'syncDate', 'updated_at', 'ecePrice', 'price', 'shipping_fee',\n        'shipping_fee_discount_platform', 'shipping_fee_discount_seller', 'shipping_fee_original', 'voucher', 'voucher_platform', 'voucher_seller'],\n    tiki: ['_id', 'created_at', 'syncDate', 'updated_at', 'invoice.grand_total', 'invoice.collectible_amount', 'invoice.shipping_amount_after_discount',\n        'invoice.subtotal', 'invoice.total_seller_fee', 'invoice.total_seller_income'],\n    shopee: ['_id', 'create_time', 'update_time', 'note_update_time', 'pay_time', 'ship_by_date', 'order_status', 'total_amount', 'escrow_amount', 'escrow_tax', 'estimated_shipping_fee'],\n    sendo: ['sales_order.order_number', 'syncDate', , 'eceOrderDate', 'sales_order.sub_total', 'sales_order.total_amount', 'sales_order.total_amount_buyer', 'sales_order.order_status']\n}\n\nexport const useStyles = makeStyles({\n    root: {\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& td': {\n            whiteSpace: 'nowrap'\n        }\n    },\n    sourceFilterBtnGroup: {\n        '& button': {\n            color: '#333',\n            fontWeight: 400\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        },\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    table: {\n\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 30px 0'\n    },\n    filterSection: {\n        marginBottom: '30px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n    },\n    createRoleForm: {\n        padding: '30px',\n        width: 600,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    createRoleFormContainer: {\n        width: 350,\n        margin: '0 auto'\n    },\n    formLegend: {\n        color: '#014B68',\n        fontSize: 20,\n        marginBottom: 15\n    },\n    tablePagination: {\n        marginTop: 15,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n    },\n    ...globalStyles\n})\n\nfunction OrderList(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [shops, setShops] = useState([])\n    const [brandList, setBrandList] = useState([])\n    const [errorMessage, setErrorMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [orders, setOrders] = useState([])\n    const [page, setPage] = useState(0)\n    const [limit, setLimit] = useState(10)\n    const [count, setCount] = useState(0)\n    const [addOrderPopup, setAddOrderPopup] = useState(false)\n    const [uploadSourcePopup, setUploadSourcePopup] = useState(false)\n    const [formEntryPopup, setFormEntryPopup] = useState(false)\n    const [gridRow, setGridRow] = useState([])\n    const [gridCol, setGridCol] = useState([])\n    const search = useLocation().search\n    let history = useHistory()\n    const paramsBrandId = useParams().brandId\n    const paramsShopId = useParams().shopId\n    const paramsSource = useParams().source\n    const from = _.get(props, 'brand.filter.from')\n    const to = _.get(props, 'brand.filter.to')\n    const mode = _.get(props, 'brand.filter.mode')\n    const { intl } = props;\n\n    useEffect(() => {\n        paramsBrandId && dispatch({\n            type: brandTypes.ChangeBrand,\n            payload: paramsBrandId\n        })\n        paramsShopId && dispatch({\n            type: brandTypes.ChangeShop,\n            payload: paramsShopId\n        })\n        paramsSource && dispatch({\n            type: brandTypes.ChangeSource,\n            payload: paramsSource\n        })\n    }, [])\n\n    const changeUrl = (brandId, shopId, source) => {\n        history.push(`/dashboard/orders/${brandId}/${shopId}/${source}?from=${from}&to=${to}&mode=${mode}`)\n    }\n\n    const brandId = _.get(props, 'brand.selectedBrand')\n    const currentShop = _.get(props, 'brand.selectedShop')\n    const currentSource = _.get(props, 'brand.selectedSource')\n\n    useEffect(() => {\n        const tempCol = []\n        const initialRow = {}\n        const tempRow = []\n        Object.keys(FILE_COLLUMNS_CONFIG).forEach(item => {\n            initialRow[item] = ''\n            item && tempCol.push({\n                key: item,\n                name: FILE_COLLUMNS_CONFIG[item].name,\n                resizable: true,\n                width: 120,\n                editable: function (rowData) {\n                    return rowData.allowEdit ? true : false;\n                }\n            })\n        })\n        for (let i = 1; i < 50; i++) {\n            tempRow.push({ ...initialRow })\n        }\n        setGridCol(tempCol)\n        setGridRow(tempRow)\n    }, [])\n\n\n    useEffect(() => {\n        if (_.get(props, 'brand.brandList').length > 0) {\n            setBrandList(_.get(props, 'brand.brandList'))\n        }\n        else {\n            getBrandList()\n                .then(res => {\n                    const result = _.get(res, 'data.result.brands')\n                    if (result && result.length > 0) {\n                        setBrandList(result)\n                        fetchData()\n                        dispatch({\n                            type: brandTypes.SetBrandList,\n                            payload: result\n                        })\n                    }\n                })\n        }\n    }, [])\n\n    useEffect(() => {\n        setPage(0)\n        changeUrl(brandId, currentShop, currentSource)\n    }, [currentShop, brandId, to, from, mode])\n\n    useEffect(() => {\n        changeShop(currentShop, currentSource, 0, limit, from, to)\n    }, [from, to, mode])\n\n    useEffect(() => {\n        fetchData()\n    }, [brandId])\n\n    const fetchData = () => {\n        getBrandDetail(brandId)\n            .then(res => {\n                const shopList = _.get(res, 'data.result.brand.shops')\n                if (shopList.length > 0) {\n                    setShops(shopList)\n                    changeShop(currentShop || _.get(shopList, '[0]._id'), currentSource || _.get(shopList, '[0].marketplace'), page, limit, from, to)\n                }\n                else {\n                    setShops([])\n                    setOrders([])\n                    setErrorMessage('Brand chưa kết nói dữ liệu')\n                }\n            })\n            .catch(err => {\n                setErrorMessage('Brand chưa kết nói dữ liệu')\n            })\n    }\n\n    const changeShop = (shop, source, p, limit, from, to) => {\n        dispatch({\n            type: brandTypes.ChangeShop,\n            payload: shop\n        })\n        dispatch({\n            type: brandTypes.ChangeSource,\n            payload: source\n        })\n        setErrorMessage('')\n        setOrders([])\n        setLoading(true)\n        getOrders(shop, source, p, limit, from, to, mode)\n            .then(res => {\n                setLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                const orderList = _.get(res, 'data.result[0].data')\n                if (errMsg) {\n                    setErrorMessage(errMsg)\n                }\n                else {\n                    setCount(_.get(res, 'data.result[0].metadata[0].total') || 0)\n                    if (orderList && orderList.length > 0) {\n                        setOrders(orderList)\n                    }\n                    else {\n                        setErrorMessage('Không có order')\n                    }\n                }\n            })\n            .catch(err => {\n                setLoading(false)\n            })\n    }\n\n    const changePage = (e, p) => {\n        setPage(p)\n        changeShop(currentShop, currentSource, p, limit, from, to)\n    }\n\n    const changeRowsPerPage = e => {\n        setPage(0)\n        setLimit(e.target.value)\n        changeShop(currentShop, currentSource, 0, e.target.value, from, to)\n    }\n\n    const getPropertybySource = (source, row) => {\n        let property = []\n        let itemCol = ''\n        switch (source) {\n            case 'shopee':\n                property = ['create_time', 'ordersn', 'order_status', 'total_amount']\n                itemCol = <React.Fragment>\n                    {row['items'] && row['items'].length > 0 && row['items'].map((item, sindex) => (\n                        <p key={sindex} style={{\n                            margin: 0,\n                            whiteSpace: 'nowrap'\n                        }}>{item['item_name']}</p>\n                    ))}\n                </React.Fragment>\n                break;\n            case 'lazada':\n                property = ['created_at', 'order_number', 'statuses', 'ecePrice']\n                itemCol = <React.Fragment>\n                    {row['items'] && row['items'].length > 0 && row['items'].map((item, sindex) => (\n                        <p key={sindex} style={{\n                            margin: 0,\n                            whiteSpace: 'nowrap'\n                        }}>{item['name']}</p>\n                    ))}\n                </React.Fragment>\n                break;\n            case 'tiki':\n                property = ['created_at', 'code', 'status', 'invoice.grand_total']\n                itemCol = <React.Fragment>\n                    {row['items'] && row['items'].length > 0 && row['items'].map((item, sindex) => (\n                        <p key={sindex} style={{\n                            margin: 0,\n                            whiteSpace: 'nowrap'\n                        }}>{_.get(item, 'product.name')}</p>\n                    ))}\n                </React.Fragment>\n                break;\n            case 'sendo':\n                property = ['created_at', 'code', 'status', 'invoice.grand_total']\n                itemCol = <React.Fragment>\n                    {row['sku_details'] && row['sku_details'].length > 0 && row['sku_details'].map((item, sindex) => (\n                        <p key={sindex} style={{\n                            margin: 0,\n                            whiteSpace: 'nowrap'\n                        }}>{_.get(item, 'product_name')}</p>\n                    ))}\n                </React.Fragment>\n                break;\n            default:\n                property = ['Date_Request', 'Order_Number', 'Status', 'Paid_Price']\n                itemCol = <React.Fragment><p style={{\n                    margin: 0\n                }}>{row['Item_Name']}</p></React.Fragment>\n                break;\n        }\n        return { property, itemCol }\n    }\n\n    const gotoPage = (values, { setStatus, setSubmitting, resetForm }) => {\n        setPage(values.gotoPage - 1)\n        changeShop(currentShop, currentSource, values.gotoPage - 1, limit, from, to)\n        resetForm()\n    }\n\n    return (\n        <div className={classes.root}>\n            <div style={{\n                margin: '30px 0',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n            }}>\n                <ButtonGroup aria-label=\"outlined button group\" className={classes.sourceFilterBtnGroup}>\n                    {\n                        shops.map(shop => (\n                            <Button\n                                style={{\n                                    padding: '12px 15px'\n                                }}\n                                onClick={() => changeShop(shop._id, shop.marketplace, 0, 10, from, to)}\n                                className={shop._id === currentShop ? 'active' : ''}\n                                key={shop._id}><Avatar variant=\"square\" style={{\n                                    width: 25,\n                                    height: 25,\n                                    marginRight: 10\n                                }} src={MARKET_PLACE[shop.marketplace] && MARKET_PLACE[shop.marketplace].image}></Avatar><span>{shop.name || shop.marketplace}</span></Button>\n                        ))\n                    }\n                </ButtonGroup>\n                {\n                    (currentSource === MARKET_PLACE.others.key || currentSource === MARKET_PLACE.googleSheet.key) &&\n                    <Button\n                        onClick={() => setAddOrderPopup(true)}\n                        className=\"btn-base btn-base--success\" >Add more orders</Button>\n                }\n\n\n            </div>\n            <div style={{\n                maxWidth: '100%',\n                overflow: 'auto'\n            }} className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {\n                            (currentSource === MARKET_PLACE.others.key || currentSource === MARKET_PLACE.googleSheet.key) || colSetting[currentSource] && colSetting[currentSource].map((key, index) => (\n                                key && <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                    align=\"left\" key={index}>{key}</TableCell>\n                            ))\n                        }\n                        {\n                            (currentSource === MARKET_PLACE.others.key || currentSource === MARKET_PLACE.googleSheet.key) && gridCol.map((col, index) => (\n                                <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                    align=\"left\" key={index}>{col && col.name}</TableCell>\n                            ))\n                        }\n                        {\n                            currentSource === MARKET_PLACE.sendo.key &&\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\">Trạng thái</TableCell>\n                        }\n                        <TableCell style={{\n                            width: 250\n                        }} className={`${classes.tableHeader} ${classes.tableCell}`}>Products</TableCell>\n                    </TableHead>\n                    <TableBody>\n                        {(currentSource === MARKET_PLACE.others.key || currentSource === MARKET_PLACE.googleSheet.key) || orders && orders.length > 0 && orders.map((row, index) => (\n                            <TableRow key={index}>\n                                {\n                                    colSetting[currentSource] && colSetting[currentSource].map((key, index) => (\n                                        <TableCell key={key}>{_.get(row, `${key}`)}</TableCell>\n                                    ))\n                                }\n                                {\n                                    currentSource === MARKET_PLACE.sendo.key &&\n                                    <TableCell><span style={{\n                                        whiteSpace: 'nowrap'\n                                    }}>{getSendoOrderLabel(_.get(row, 'sales_order.order_status'))}</span></TableCell>\n                                }\n                                <TableCell>{getPropertybySource(currentSource, row).itemCol}</TableCell>\n                            </TableRow>\n                        ))}\n                        {(currentSource === MARKET_PLACE.others.key || currentSource === MARKET_PLACE.googleSheet.key) && orders && orders.map((row, index) => (\n                            <TableRow key={index}>\n                                {\n                                    Object.keys(FILE_COLLUMNS_CONFIG).map(key => (\n                                        <TableCell key={key}>{FILE_COLLUMNS_CONFIG[key] && row[FILE_COLLUMNS_CONFIG[key].name]}</TableCell>\n                                    ))\n                                }\n                                <TableCell>{getPropertybySource(currentSource, row).itemCol}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n            <div className={classes.tablePagination}>\n                <div style={{\n                    marginRight: 15\n                }}>\n                    <Formik\n                        initialValues={{\n                            gotoPage: '',\n                        }}\n                        validate={values => {\n                            const errors = {};\n                            if (values.gotoPage !== '' && !Number(values.gotoPage)) {\n                                errors.gotoPage = \"Invalid page\"\n                            }\n                            else if (Number(values.gotoPage > Math.ceil(count / limit))) {\n                                errors.gotoPage = `Max page is ${Math.ceil(count / limit)}`\n                            }\n                            return errors;\n                        }}\n                        onSubmit={gotoPage}\n                    >\n                        {({\n                            values,\n                            status,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            isSubmitting,\n                            resetForm\n                        }) => (\n                                <form style={{\n                                    display: 'flex'\n                                }} onSubmit={handleSubmit} noValidate>\n                                    {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                        <div className=\"alert-text\">{status}</div>\n                                    </div>}\n                                    <FormGroup style={{\n                                        width: 100,\n                                        marginRight: 10\n                                    }}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            type=\"text\"\n                                            placeholder=\"Page\"\n                                            name=\"gotoPage\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.gotoPage}\n                                            helperText={touched.gotoPage && errors.gotoPage}\n                                            error={Boolean(touched.gotoPage && errors.gotoPage)}\n                                        />\n                                    </FormGroup>\n                                    <Button type=\"submit\">Go</Button>\n\n                                </form>\n                            )}\n                    </Formik>\n                </div>\n                <TablePagination\n                    onChangePage={changePage}\n                    onChangeRowsPerPage={changeRowsPerPage}\n                    component=\"div\"\n                    count={count}\n                    rowsPerPage={limit}\n                    page={page}\n                    SelectProps={{\n                        native: false,\n                    }}\n                ></TablePagination>\n            </div>\n            <Dialog\n                open={addOrderPopup}\n                keepMounted\n                onClose={() => setAddOrderPopup(false)}\n                maxWidth=\"sm\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <div style={{\n                        textAlign: 'center',\n                        width: 350\n                    }}>\n                        <div style={{\n                            marginTop: 30,\n                            marginBottom: 15\n                        }}>\n                            <Button onClick={() => {\n                                setAddOrderPopup(false)\n                                setFormEntryPopup(true)\n                            }} className=\"btn-base btn-base--success\" >Form Entry</Button>\n                        </div>\n                        <div style={{\n                            marginBottom: 45\n                        }}>\n                            <Button\n                                onClick={() => {\n                                    setAddOrderPopup(false)\n                                    setUploadSourcePopup(true)\n                                }}\n                                className=\"btn-base btn-base--success\" >Upload File</Button>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={uploadSourcePopup}\n                keepMounted\n                fullWidth={true}\n                onClose={() => setUploadSourcePopup(false)}\n                maxWidth=\"sm\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <UploadPage\n                        onDone={() => {\n                            changeShop(currentShop, currentSource, 0, limit, from, to)\n                            setUploadSourcePopup(false)\n                        }}\n                        flag={uploadSourcePopup} brand={brandId} source={currentShop} />\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={formEntryPopup}\n                keepMounted\n                fullWidth={true}\n                onClose={() => setFormEntryPopup(false)}\n                maxWidth=\"lg\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <FormEntry onDone={() => {\n                        changeShop(currentShop, currentSource, 0, limit, from, to)\n                        setFormEntryPopup(false)\n                    }} brand={brandId} source={currentShop} />\n                </DialogContent>\n            </Dialog>\n        </div >\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand\n});\n\nexport default connect(mapStateToProps)(OrderList);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Icon } from '@material-ui/core';\nimport { MARKET_PLACE } from \"../../../constant/marketplace\"\nimport { parseLocaleString } from \"../../../helpers/helper\"\nimport { toAbsoluteUrl } from \"../../../../_metronic/utils/utils\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport _ from 'lodash'\n\nRevenueCard.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        borderRadius: '4px',\n        backgroundColor: '#f7f7f7',\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        padding: '15px 20px',\n        position: 'relative',\n        '&:hover $detailSection': {\n            display: 'block'\n        }\n    },\n    detailSection: {\n        position: 'absolute',\n        color: 'black',\n        width: '100%',\n        left: 0,\n        bottom: '-100%',\n        zIndex: 500,\n        background: 'white',\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        padding: 15,\n        display: 'none',\n        '& p': {\n            margin: 0\n        }\n    },\n    topSection: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginBottom: '10px',\n        minHeight: '28px',\n        '& .title': {\n            display: 'flex',\n            width: '100%',\n            alignItems: 'center',\n            textTransform: 'capitalize',\n            '& p': {\n                margin: 0,\n                fontSize: '18px',\n                color: '#333333',\n                lineHeight: 1\n            }\n        },\n        '& .percentage-change': {\n            fontSize: '10px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center'\n        },\n    },\n    revenue: {\n        fontSize: '24px',\n        fontWeight: 700,\n        color: '#014b68',\n        margin: 0,\n    }\n})\n\nfunction RevenueCard(props) {\n    const classes = useStyles()\n    const { revenue, name, id, tooltip, oldRevenue, isPrice, detail } = props\n    const isIncrease = revenue > oldRevenue\n    const total = revenue + oldRevenue\n    const percentageChange = (Math.abs(revenue - oldRevenue) / oldRevenue) * 100\n    const isInvariant = revenue === oldRevenue || oldRevenue === 0\n    return (\n        <div className={classes.root}>\n            <div className={classes.topSection}>\n                <div className=\"title\">\n                    {props.showIcon && <Avatar variant=\"square\" alt=\"logo\"\n                        src={MARKET_PLACE[id] ? MARKET_PLACE[id].image : toAbsoluteUrl('/media/logos/google-sheet.svg')}\n                        style={{ marginRight: '5px', width: '28px', height: '28px' }}></Avatar>}\n                    <p>{name.toUpperCase()}</p>\n                </div>\n                {!isInvariant && <Tooltip title={<span style={{ fontSize: 11 }}>{`${tooltip}: ${parseLocaleString(oldRevenue)}`}</span>}>\n                    <div className=\"percentage-change\" style={{\n                        color: isIncrease ? '#91dd47' : '#ed0000'\n                    }}>\n                        <span style={{\n                            fontSize: 13\n                        }}>{parseLocaleString(percentageChange)}%</span><Icon>{isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                    </div>\n                </Tooltip>}\n            </div>\n            <p className={classes.revenue}>{parseLocaleString(revenue, isPrice)}</p>\n            {\n                detail && <div className={`${classes.detailSection} tooltip-revenue`}>\n                    <p>Đơn thành công: <b>{parseLocaleString(_.get(detail, 'amount.COMPLETED'))}</b></p>\n                    <p>Đơn đang vận chuyển: <b>{parseLocaleString(_.get(detail, 'amount.SHIPPING'))}</b></p>\n                    <p>Đơn huỷ: <b>{parseLocaleString(_.get(detail, 'amount.CANCELLED'))}</b></p>\n                </div>\n            }\n\n        </div>\n    );\n}\n\nexport default RevenueCard;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Icon, Grid } from '@material-ui/core';\nimport { MARKET_FILTER } from '../statistics/RevenueStatistics';\nimport { parseLocaleString } from '../../../helpers/helper'\nimport _ from \"lodash\"\nimport { ORDER_STATUS } from \"../../../constant/orderStatus\"\nimport { groupOrderStatus } from \"../../../helpers/helper\"\n\nOrderStatusCard.propTypes = {\n\n};\n\nexport const STATUS_CONFIG = {\n    COMPLETED: {\n        name: 'Thành công',\n        icon: 'check',\n        color: '#91dd47'\n    },\n    SHIPPING: {\n        name: 'Đang giao',\n        icon: 'sort',\n        color: '#f9d513'\n    },\n    CANCELLED: {\n        name: 'Đã hủy',\n        icon: 'close',\n        color: '#ff7070'\n    }\n}\n\nconst useStyles = makeStyles({\n    root: {\n        borderRadius: '13px',\n        boxShadow: '0 2px 10px 0 rgba(0, 0, 0, 0.2)',\n        textAlign: 'center',\n        overflow: 'hidden',\n        fontSize: '16px',\n        color: '#014b68',\n        fontWeight: 800,\n        '& p': {\n            margin: 0\n        }\n    },\n    status: {\n        padding: '10px 15px'\n    },\n    quantity: {\n        position: 'relative',\n        padding: '15px',\n        color: '#696969',\n        minHeight: 90,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& p': {\n            width: '100%'\n        },\n        '& .percentage-change': {\n            color: '#ed0000',\n            fontSize: '10px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n            position: 'absolute',\n            right: '20px',\n            top: '20px'\n        },\n    }\n})\n\nfunction OrderStatusCard(props) {\n    const classes = useStyles()\n    let { status, filter } = props\n    const [totalOrder, setTotalOrders] = useState(0)\n    const [orderData, setOrderData] = useState({})\n\n    useEffect(() => {\n        const { data, orderCount } = groupOrderStatus(status, filter)\n        setOrderData(data)\n        setTotalOrders(orderCount)\n    }, [props])\n\n    return (\n        <div>\n            <p style={{\n                color: '#696969',\n                fontWeight: 700\n            }}>Tổng đơn hàng: {parseLocaleString(totalOrder)}</p>\n            <Grid container spacing={4}>\n                {\n                    Object.keys(orderData).map((key, index) => {\n                        return (<Grid item xs={12} sm={3} key={index}>\n                            <div className={classes.root}>\n                                <div className={classes.status} style={{ backgroundColor: _.get(STATUS_CONFIG[key], 'color') }}>\n                                    <Icon style={{ fontSize: '24px', fontWeight: 800 }}>{_.get(STATUS_CONFIG[key], 'icon')}</Icon>\n                                    <p>{_.get(STATUS_CONFIG[key], 'name')}</p>\n                                </div>\n                                <div className={classes.quantity}>\n                                    <p style={{ fontSize: '25px' }}>{parseLocaleString(orderData[key])}</p>\n                                    <p>đơn hàng</p>\n                                    {/* <div className=\"percentage-change\">\n                    <Icon>{props.status.isIncrease ? 'arrow_upward' : 'arrow_downward'}</Icon><span>{props.status.percentageChange}%</span>\n                </div> */}\n                                </div>\n                            </div>\n                        </Grid>)\n                    })\n                }\n                <Grid item xs={12} sm={3}>\n                    <div className={classes.root}>\n                        <div className={classes.status} style={{ backgroundColor: '#2A9DF4' }}>\n                            <Icon style={{ fontSize: '24px', fontWeight: 800 }}>trending_up</Icon>\n                            <p>Tỷ lệ hủy</p>\n                        </div>\n                        <div className={classes.quantity}>\n                            <p style={{ fontSize: '25px' }}>{parseLocaleString((orderData.CANCELLED / (orderData.COMPLETED + orderData.SHIPPING + orderData.CANCELLED)) * 100)}%</p>\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default OrderStatusCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2'\nimport 'chartjs-plugin-labels';\nimport { makeStyles } from '@material-ui/styles';\nimport { parseLocaleString } from '../../../../helpers/helper'\nimport { MARKET_PLACE } from '../../../../constant/marketplace'\nimport _ from \"lodash\"\n\n\nDonutChart.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        height: '400px',\n        maxWidth: '220px',\n        padding: '20px 0',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n})\n\nfunction DonutChart(props) {\n    const classes = useStyles()\n    const { revenueList } = props\n    const shops = props.shops\n    let donutChartData = {\n        labels: [],\n        datasets: [\n            {\n                label: \"My First dataset\",\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: [],\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: []\n            }\n        ]\n    };\n\n    if (revenueList && revenueList.length > 0) {\n        revenueList.forEach(item => {\n            donutChartData.labels.push((_.get(shops.find(shop => shop._id === item._id), 'name') || item._id).toUpperCase())\n            donutChartData.datasets[0].data.push(item.totalAmount)\n            donutChartData.datasets[0].backgroundColor.push(MARKET_PLACE[item._id] ? MARKET_PLACE[item._id].color : item.color)\n        })\n    }\n\n    const donutChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n            position: 'bottom',\n            align: 'middle',\n            fontSize: 18,\n            labels: {\n                fontColor: \"#000a12\",\n                boxWidth: 10,\n                padding: 15\n            }\n        },\n        tooltips: {\n            enabled: true,\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    var dataset = data.datasets[tooltipItem.datasetIndex];\n                    var currentValue = dataset.data[tooltipItem.index];\n                    return parseLocaleString(currentValue)\n                },\n                title: function (tooltipItem, data) {\n                    return data.labels[tooltipItem[0].index];\n                }\n            }\n        },\n        plugins: {\n            labels: {\n                render: 'percentage',\n                fontColor: '#FFF'\n            }\n        },\n        elements: {\n            arc: {\n                borderWidth: 0\n            }\n        }\n    }\n    return (\n        <div className={classes.root}>\n            <Doughnut data={donutChartData} options={donutChartOptions} />\n        </div>\n    );\n}\n\nexport default DonutChart;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport { parseLocaleString } from '../../../../helpers/helper'\nimport { MARKET_PLACE } from '../../../../constant/marketplace'\nimport _ from 'lodash'\n\nLineChart.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        height: '350px',\n        padding: '0 30px 30px 30px'\n    }\n})\n\nfunction LineChart(props) {\n    const classes = useStyles()\n    const { revenueList } = props\n    const format = _.get(props, 'groupBy.format')\n    const shops = props.shops\n    const [data, setData] = useState({})\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n            position: 'top',\n            align: 'end',\n            fontSize: 18,\n            labels: {\n                fontColor: \"#000a12\",\n                boxWidth: 12,\n                padding: 15\n            }\n        },\n        tooltips: {\n            enabled: true,\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    var dataset = data.datasets[tooltipItem.datasetIndex];\n                    var currentValue = dataset.data[tooltipItem.index];\n                    return `${dataset.label}:  ${parseLocaleString(currentValue)}`;\n                }\n            }\n        },\n        plugins: {\n            labels: {\n                render: 'percentage',\n                fontColor: '#FFF'\n            }\n        },\n        elements: {\n            arc: {\n                borderWidth: 0\n            }\n        },\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true,\n                    padding: 25,\n                    callback: function (value, index, values) {\n                        return parseLocaleString(value);\n                    }\n                }\n            }]\n        }\n    }\n    const baseConfig = {\n        fill: false,\n        lineTension: 0.5,\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 5,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n    }\n\n    useEffect(() => {\n        let labels = []\n        let datasets = []\n\n        //Get labels\n        if (revenueList && revenueList.length > 0) {\n            revenueList.forEach(item => {\n                labels = [...labels, ...item.date]\n                datasets.push({\n                    label: (_.get(shops.find(shop => shop._id === item._id), 'name') || item._id).toUpperCase(),\n                    borderColor: MARKET_PLACE[item._id] ? MARKET_PLACE[item._id].color : item.color,\n                    dataTemp: item.data,\n                    data: [],\n                    ...baseConfig\n                })\n            });\n        }\n\n        labels.sort((x, y) => x - y)\n        labels = labels.map(item => item.format(format))\n        labels = _.uniq(labels, 'id');\n\n        //Custom data\n        if (labels && labels.length > 0) {\n            labels.forEach(item => {\n                datasets.forEach(sItem => {\n                    sItem.data.push(sItem.dataTemp[item] || 0)\n                })\n            })\n        }\n        setData({\n            labels: labels,\n            datasets: datasets\n        })\n    }, [revenueList])\n\n    return (\n        <div className={classes.root}>\n            <Line data={data} options={options} />\n        </div>\n    );\n}\n\nexport default LineChart;","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes, { nominalTypeHack } from 'prop-types';\nimport RevenueCard from '../components/RevenueCard'\nimport OrderStatusCard from '../components/OrderStatusCard'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Grid, Button, ButtonGroup, Select, MenuItem, FormControl, Backdrop, CircularProgress,\n    TableBody, TableRow, Table, TableCell, TextField, TableHead, Avatar\n} from '@material-ui/core';\nimport { toAbsoluteUrl } from \"../../../../_metronic/utils/utils\";\nimport { getProductHighlightByBrand, getRevenueByBrand } from '../../../crud/statitics.crud';\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport DonutChart from '../components/chart/DonutChart';\nimport LineChart from '../components/chart/LineChart';\nimport { parseLocaleString, randomColor, groupOrderStatus } from '../../../helpers/helper'\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport { getBrandDetail, getBrandList } from '../../../crud/brand.crud';\nimport _ from \"lodash\"\nimport { MARKET_PLACE } from \"../../../constant/marketplace\"\nimport { useDispatch } from 'react-redux';\nimport { actionTypes as commonTypes } from \"../../../store/ducks/common.duck\"\nimport { actionTypes as brandTypes } from '../../../store/ducks/brand.duck'\nimport { Link } from \"react-router-dom\";\n\nBoard.propTypes = {\n\n};\n\nexport const FILTER_OPTION = {\n    TODAY: 'today',\n    YESTERDAY: 'yesterday',\n    WEEK: 'week',\n    MONTH: 'month',\n    YEAR: 'year',\n    MANUAL: 'manual'\n}\n\nexport const GROUP_BY = {\n    YEAR: {\n        value: 'year',\n        format: 'YYYY',\n    },\n    MONTH: {\n        value: 'month',\n        format: 'MM-YYYY',\n        limit: 1065\n    },\n    DAY: {\n        value: 'day',\n        format: 'MM-DD-YYYY',\n        limit: 90\n    },\n    HOUR: {\n        value: 'hour',\n        format: 'HH:MM',\n        limit: 1\n    }\n}\n\nexport let MARKET_FILTER = {\n    ALL: {\n        code: 'all',\n        label: 'All Market'\n    },\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        fontSize: '16px',\n        '& .btn-base--lg': {\n            borderRadius: '25px !important'\n        }\n    },\n    revenue: {\n        marginBottom: '50px'\n    },\n    revenueList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: 0,\n        '& li': {\n            padding: 0,\n            width: '25%',\n            marginBottom: '30px'\n        }\n    },\n    chart: {\n\n    },\n    sku: {\n\n    },\n    orderStatus: {\n        marginBottom: '50px'\n    },\n    marketFilterContainer: {\n        minHeight: '220px',\n        backgroundImage: `url(${toAbsoluteUrl(\"/media/bg/order-status-bg.png\")})`,\n        backgroundSize: 'contain',\n        position: 'relative'\n    },\n    marketFilter: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        minWidth: '200px',\n        backgroundColor: '#014b68',\n        borderRadius: '25px',\n        border: 'none',\n        '& .MuiInputBase-root': {\n            padding: '0 5px',\n            background: 'none',\n            '&::before, &::after': {\n                display: 'none'\n            }\n        },\n        '& label': {\n            marginLeft: '5px',\n            fontSize: '14px',\n            color: '#FFFFFF',\n            fontWeight: '700',\n        },\n        '& .MuiSelect-icon': {\n            color: '#FFF',\n            right: '15px'\n        }\n    },\n    table: {\n        color: '#000',\n        '& p': {\n            margin: 0\n        },\n        '& td': {\n            border: 'none'\n        },\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& .cell-product-name': {\n            fontSize: '14px',\n        },\n        '& .cell-sku': {\n            fontSize: '14px',\n            color: '#053361',\n            '& img': {\n                width: 22,\n                marginRight: 8\n            }\n        },\n        '& .cell-price': {\n            fontSize: '16px',\n            fontWeight: 600,\n            color: '#053361'\n        },\n        '& .cell-quantity': {\n            fontSize: '14px',\n            fontStyle: 'italic',\n            color: '#000a12',\n            minWidth: '150px',\n        },\n        '& .cell-market': {\n            fontSize: '16px',\n            color: '#333',\n            border: '1px solid #979797',\n            borderRadius: '15px',\n            padding: '5px',\n            minWidth: '100px',\n            maxWidth: '200px',\n            textTransform: 'capitalize'\n        }\n    },\n    tableLegend: {\n        fontSize: '20px',\n        color: '#333',\n        fontWeight: 800,\n        marginBottom: 30,\n    },\n    header: {\n        borderBottom: '1px solid #dbdbdb',\n        margin: 0,\n        padding: '15px 0',\n        marginBottom: '30px',\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 0 0'\n    },\n    brandDropdown: {\n        minWidth: '150px'\n    },\n    chart: {\n        marginBottom: '50px'\n    },\n    chartContainer: {\n        position: 'relative',\n        height: '400px ',\n        backgroundColor: '#fbfbfb',\n        borderRadius: '15px',\n        boxShadow: '0 0 20px 0 rgba(51, 51, 51, 0.1)'\n    },\n    donutChart: {\n        padding: '0'\n    },\n    lineChart: {\n\n    },\n    lineChartTitle: {\n        fontSize: '20px',\n        color: '#333',\n        fontWeight: 800,\n        padding: '15px 30px',\n        margin: 0,\n        borderBottom: '1px solid #dbdbdb'\n    },\n    tableContainer: {\n        border: '1px solid #dbdbdb',\n        borderRadius: '4px'\n    },\n    tableHeader: {\n        borderBottom: '1px solid #dbdbdb',\n        padding: '15px'\n    },\n    datepickerContainer: {\n        position: 'relative',\n        '& input': {\n            padding: '8px 15px'\n        },\n        '&:focus': {\n            '& .Range': {\n                background: 'red'\n            }\n        }\n    },\n    dateFilterBtnGroup: {\n        '& button': {\n            color: '#333',\n            fontWeight: 400\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        }\n    }\n})\n\nfunction Board(props) {\n    const classes = useStyles()\n    const search = useLocation().search\n    const mode = search && search.split('&mode=')[1]\n    const [revenueList, setRevenueList] = useState([])\n    const [comparisonRevenueList, setComparisonRevenueList] = useState([])\n    const [sku, setSku] = useState([])\n    const [bestSellingSKU, setBestSellingSKU] = useState([])\n    const [orderStatusList, setOrderStatusList] = useState([])\n    const [marketFilter, setMarketFilter] = useState(MARKET_FILTER.ALL.code)\n    const [shops, setShops] = useState()\n    const [totalRevenue, setTotalRevenue] = useState(0)\n    const [cancelledTotal, setCancelledTotal] = useState(0)\n    const [comparisonTotalRevenue, setComparisonTotalRevenue] = useState(0)\n    const [comparisonCancelledTotal, setComparisonCancelledTotal] = useState(0)\n    const [revenueTooltip, setRevenueTooltip] = useState('')\n    const startDateConfig = { hour: 0, minute: 0, second: 0, millisecond: 0 }\n    const endDateConfig = { hour: 23, minute: 59, second: 59, millisecond: 999 }\n\n    let history = useHistory()\n    const dispatch = useDispatch();\n    const paramsBrandId = useParams().brandId\n\n    useEffect(() => {\n        paramsBrandId && dispatch({\n            type: brandTypes.ChangeBrand,\n            payload: paramsBrandId\n        })\n    }, [])\n    const brandId = _.get(props, 'brand.selectedBrand')\n    const startDate = _.get(props, 'brand.filter.from')\n    const endDate = _.get(props, 'brand.filter.to')\n    const dateFilterOption = _.get(props, 'brand.filter.mode')\n\n\n    useEffect(() => {\n        if (brandId) {\n            dispatch({\n                type: commonTypes.ShowBackdropLoading,\n                payload: true\n            })\n            setTotalRevenue(0)\n            setRevenueList([])\n            setOrderStatusList({})\n            getBrandDetail(brandId)\n                .then((res) => {\n                    dispatch({\n                        type: commonTypes.ShowBackdropLoading,\n                        payload: false\n                    })\n                    const brand = _.get(res, 'data.result.brand')\n                    setShops(_.get(brand, 'shops') || [])\n                    getRevenue(_.get(brand, 'shops') || [], startDate, endDate)\n                    getRevenue(_.get(brand, 'shops') || [], getRangeDateComparison(startDate, endDate, dateFilterOption).startDate,\n                        getRangeDateComparison(startDate, endDate, dateFilterOption).endDate, true)\n                })\n                .catch(err => {\n                    dispatch({\n                        type: commonTypes.ShowBackdropLoading,\n                        payload: false\n                    })\n                })\n        }\n    }, [brandId])\n\n    const changeUrl = (id) => {\n        history.push(`/dashboard/revenue/${id}?from=${startDate}&to=${endDate}&mode=${dateFilterOption}`)\n    }\n\n    useEffect(() => {\n        getRevenue(shops, startDate, endDate)\n        getRevenue(shops, getRangeDateComparison(startDate, endDate, dateFilterOption).startDate,\n            getRangeDateComparison(startDate, endDate, dateFilterOption).endDate, true)\n\n    }, [startDate, endDate])\n\n    useEffect(() => {\n        try {\n            let temp = []\n            Object.keys(sku).forEach(key => {\n                if (key === marketFilter || marketFilter === MARKET_FILTER.ALL.code) {\n                    temp = [...temp, ...sku[key]]\n                }\n\n            })\n            temp = _.sortBy(temp, o => o.count).reverse()\n            setBestSellingSKU((temp && temp.length > 0) ? temp.splice(0, 10) : [])\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }, [sku, marketFilter])\n\n    const getGroupBy = (s, e) => {\n        const diff = moment(e).diff(moment(s), 'days')\n        if (diff < GROUP_BY.HOUR.limit) {\n            return GROUP_BY.HOUR\n        }\n        else if (diff <= GROUP_BY.DAY.limit) {\n            return GROUP_BY.DAY\n        }\n        else if (diff <= GROUP_BY.MONTH.limit) {\n            return GROUP_BY.MONTH\n        }\n        else {\n            return GROUP_BY.YEAR\n        }\n    }\n\n    const getRangeDateComparison = (s, e, mode) => {\n        let startDate = ''\n        let endDate = ''\n        let range = moment(e).diff(moment(s), 'days') + 1\n        let label = ''\n        switch (mode) {\n            case FILTER_OPTION.YEAR:\n                startDate = moment(s).subtract(1, 'year').startOf('year')\n                endDate = moment(s).subtract(1, 'year').endOf('year')\n                label = `Doanh thu năm ${startDate.year()}`\n                break;\n            case FILTER_OPTION.MONTH:\n                startDate = moment(s).subtract(1, 'month').startOf('month')\n                endDate = moment(s).subtract(1, 'month').endOf('month')\n                label = `Doanh thu tháng ${startDate.month() + 1} - ${startDate.year()}`\n                break;\n            default:\n                startDate = moment(s).subtract(range, 'days')\n                endDate = moment(e).subtract(range, 'days')\n                label = `Doanh thu từ ${startDate.format('MM-DD-YYYY')} đến ${endDate.format('MM-DD-YYYY')}`\n                break;\n        }\n        setRevenueTooltip(label)\n        startDate = startDate.set(startDateConfig).toISOString()\n        endDate = endDate.set(endDateConfig).toISOString()\n        return { startDate, endDate }\n    }\n\n    const getRevenue = (shopList, dateFrom, dateTo, isGetOldRevenue) => {\n        MARKET_FILTER = {\n            ALL: {\n                code: 'all',\n                label: 'All Market'\n            },\n        }\n        setMarketFilter(MARKET_FILTER.ALL.code)\n        if (brandId && shopList) {\n            const groupBy = getGroupBy(dateFrom, dateTo)\n            dispatch({\n                type: commonTypes.ShowBackdropLoading,\n                payload: true\n            })\n            changeUrl(brandId)\n            getRevenueByBrand(brandId, dateFrom, dateTo, groupBy.value)\n                .then(res => {\n                    dispatch({\n                        type: commonTypes.ShowBackdropLoading,\n                        payload: false\n                    })\n                    try {\n                        const dataStatitics = _.get(res, 'data.result') || {}\n                        let revenue = []\n                        let status = {}\n                        let shopeeEscrowAmount = 0\n                        if (dataStatitics['shopee'] && dataStatitics['shopee'].escrowAmount) {\n                            shopeeEscrowAmount = dataStatitics['shopee'].escrowAmount.reduce((a, b) => a + (b._id === 'COMPLETED' ? b.totalAmount : 0), 0)\n                        }\n                        let grantTotal = - shopeeEscrowAmount\n                        Object.keys(dataStatitics).forEach(key => {\n                            if (key !== 'tiki') {\n                                if (_.get(dataStatitics[key], 'gmv.length') > 0) {\n                                    let revenueTemp = [...dataStatitics[key].gmv]\n                                    revenueTemp.map(r => {\n                                        r._id = moment.utc(`${r._id.month || 1}-${r._id.dayOfMonth || 1}-${r._id.year}${r._id.hour ? ' ' + r._id.hour + ':00:00' : ''}`)\n                                            .local()\n                                    })\n                                    let total = key === 'shopee' ? - shopeeEscrowAmount : 0\n                                    let data = {}\n                                    let date = []\n                                    revenueTemp.forEach(item => {\n                                        total += item.totalAmount\n                                        Object.assign(data, { [`${item._id.format(groupBy.format)}`]: item.totalAmount })\n                                        date.push(item._id)\n                                    })\n                                    const name = (_.get(shopList.find(shop => shop._id === key), 'name') || key).toUpperCase()\n                                    revenue.push({\n                                        _id: key,\n                                        totalAmount: total,\n                                        data: data,\n                                        date: date,\n                                        color: randomColor(),\n                                        name: name,\n                                        detail: groupOrderStatus(Object.assign(status, { [`${key}`]: dataStatitics[key].status }), 'all')\n                                    })\n                                    MARKET_FILTER[key] = {\n                                        code: key,\n                                        label: name\n                                    }\n                                }\n                                if (_.get(dataStatitics[key], 'grantTotal.length') > 0) {\n                                    grantTotal += dataStatitics[key].grantTotal.reduce((a, b) => a + (b.totalAmount || 0), 0)\n                                }\n                                status = _.get(dataStatitics[key], 'status.length') > 0 ? Object.assign(status, { [`${key}`]: dataStatitics[key].status }) : status\n                            }\n\n                        });\n                        if (isGetOldRevenue) {\n                            setComparisonTotalRevenue(grantTotal)\n                            setComparisonRevenueList([...revenue])\n                            const { amount } = groupOrderStatus(status, 'all')\n                            setComparisonCancelledTotal(_.get(amount, 'CANCELLED') || 0)\n                        }\n                        else {\n                            setTotalRevenue(grantTotal)\n                            setRevenueList([...revenue])\n                            setOrderStatusList(status)\n                            const { amount } = groupOrderStatus(status, 'all')\n                            setCancelledTotal(_.get(amount, 'CANCELLED') || 0)\n                        }\n\n                    }\n                    catch (err) {\n                        dispatch({\n                            type: commonTypes.ShowBackdropLoading,\n                            payload: false\n                        })\n                        console.log(err)\n                    }\n\n                })\n                .catch(err => {\n                })\n            if (!isGetOldRevenue) {\n                getProductHighlightByBrand(brandId, dateFrom, dateTo)\n                    .then(res => {\n                        setSku(res.data.result || {})\n                    })\n            }\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {/* <!-- begin:: Revenue section --> */}\n            <div className={classes.revenue}>\n                <Grid container spacing={5} className={classes.revenueList}>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard detail={groupOrderStatus(orderStatusList, 'all')} oldRevenue={comparisonTotalRevenue} tooltip={revenueTooltip} showIcon={false} id=\"all\" revenue={totalRevenue} name=\"Tổng doanh thu\"></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard oldRevenue={comparisonCancelledTotal} tooltip={revenueTooltip} showIcon={false} id=\"all\" revenue={cancelledTotal} name=\"Doanh Thu thất thoát\"></RevenueCard>\n                    </Grid>\n                    {\n                        revenueList.map((item, index) => {\n                            return (<Grid item xs={12} md={6} lg={4} xl={3} key={index}>\n                                {<RevenueCard oldRevenue={_.get(comparisonRevenueList.find(r => r._id === item._id), 'totalAmount') || 0} tooltip={revenueTooltip}\n                                    detail={item.detail}\n                                    showIcon={true} id={item._id} revenue={item.totalAmount} name={item.name}></RevenueCard>}\n                            </Grid>)\n                        })\n                    }\n                </Grid>\n            </div>\n            {/* <!-- end:: Revenue section --> */}\n            {/* <!-- begin:: Chart section --> */}\n            <div className={classes.chart}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={8}>\n                        <div className={`${classes.lineChart} ${classes.chartContainer} empty-block`}>\n                            <p className={classes.lineChartTitle}>Doanh thu</p>\n                            {revenueList.length > 0 ?\n                                <LineChart shops={shops} groupBy={getGroupBy(startDate, endDate)} revenueList={revenueList} />\n                                : <p className=\"empty-label\">Dữ liệu trống</p>}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <div className={`${classes.donutChart} ${classes.chartContainer} empty-block`}>\n                            {revenueList.length > 0 ? <DonutChart shops={shops} revenueList={revenueList} /> :\n                                <p className=\"empty-label\">Dữ liệu trống</p>\n                            }\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            {/* <!-- end:: Chart section --> */}\n            <div style={{\n                marginBottom: 30\n            }}>\n                <FormControl variant=\"outlined\" className=\"dropdown\">\n                    <Select\n                        MenuProps={{\n                            anchorOrigin: {\n                                vertical: \"bottom\",\n                                horizontal: \"left\"\n                            },\n                            transformOrigin: {\n                                vertical: \"top\",\n                                horizontal: \"left\"\n                            },\n                            getContentAnchorEl: null\n                        }}\n                        className=\"btn-base btn-base--primary\"\n                        value={marketFilter}\n                        onChange={(e) => setMarketFilter(e.target.value)}\n                    >\n                        {Object.keys(MARKET_FILTER).map((key, index) => (\n                            <MenuItem key={index} value={MARKET_FILTER[key].code}>{MARKET_FILTER[key].label}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </div>\n            {/* <!-- begin:: OrderStatus section --> */}\n            <div className={classes.orderStatus}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={8}>\n                        <p style={{\n                            color: '#333333',\n                            fontSize: '20px',\n                            fontWeight: '800',\n                            marginBottom: 15\n                        }}>Tình trạng đơn hàng</p>\n                        <OrderStatusCard filter={marketFilter} status={orderStatusList}></OrderStatusCard>\n                    </Grid>\n                </Grid>\n            </div>\n            {/* <!-- end:: OrderStatus section --> */}\n            {/* <!-- begin:: SKU Statitics section --> */}\n            <div className={classes.skuStatitics}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <p className={classes.tableLegend}>Top SKU bán chạy</p>\n                        <div className={`${classes.tableContainer} empty-block`}>\n\n                            {bestSellingSKU.length > 0 ?\n                                <Table className={`${classes.table}`} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell></TableCell>\n                                            <TableCell>Thông tin sản phẩm</TableCell>\n                                            <TableCell align=\"right\">Số lượng bán được</TableCell>\n                                            <TableCell align=\"right\">Doanh thu</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {bestSellingSKU.map((row, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell style={{\n                                                    width: 40\n                                                }}>\n                                                    {row.images && <img style={{\n                                                        width: 40,\n                                                        height: 40\n                                                    }} src={row.images} />}\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <p className=\"cell-product-name text-overflow\" title={row.item_name}>{row.item_name}</p>\n                                                    <p className=\"cell-sku\">\n                                                        <img src={MARKET_PLACE[row.marketplace] ? MARKET_PLACE[row.marketplace].image\n                                                            : toAbsoluteUrl('/media/logos/google-sheet.svg')} /><span>SKU: {row._id}</span></p>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {/* <p className=\"cell-price\">{row.price} {row.currency}</p> */}\n                                                    <p className=\"cell-quantity\">{parseLocaleString(row.count)}</p>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <p className=\"cell-quantity\">{parseLocaleString(_.get(row, 'totalAmount.$numberDecimal') || row.totalAmount, true)}</p>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                : <p className=\"empty-label\">Dữ liệu trống</p>}\n                        </div>\n\n                    </Grid>\n                </Grid>\n            </div>\n            {/* <!-- end:: SKU Statitics section --> */}\n            {/* <Backdrop style={{\n                zIndex: 9999\n            }} open={loading}>\n                <CircularProgress />\n            </Backdrop> */}\n        </div >\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand\n});\n\nexport default connect(mapStateToProps)(Board);","import React, { useState, useEffect } from 'react';\nimport PropTypes, { element } from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport ReactCrop, { makeAspectCrop } from 'react-image-crop'\nimport { Button } from '@material-ui/core';\nimport { getCroppedImg } from \"../../../helpers/helper\"\nimport clsx from \"clsx\";\n\nCropImageForm.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n  cropImageContainer: {\n    padding: 30,\n    width: 600,\n    '& .kt-spinner--right:before': {\n      right: 15\n    },\n  },\n  cropImageWrapper: {\n    width: 450,\n    margin: '0 auto'\n  },\n  formAction: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    '& button': {\n      width: 'calc(50% - 7px)'\n    }\n  },\n})\n\nfunction CropImageForm(props) {\n  const classes = useStyles()\n\n  const onCropChange = (e) => {\n    setAvatarCrop(e)\n  }\n  const initialCrop = {\n    aspect: 1 / 1,\n    unit: 'px',\n    x: 0,\n    y: 0,\n    width: 150,\n    height: 150,\n  }\n  const [avatarCrop, setAvatarCrop] = useState({ ...initialCrop })\n  const [imageRef, setImageRef] = useState('')\n\n  const makeClientCrop = (crop) => {\n    if (imageRef && crop.width && crop.height) {\n      getCroppedImg(\n        imageRef,\n        crop,\n        'newFile.jpeg'\n      )\n        .then(res => {\n          const img = res\n          props.onSave(img)\n        })\n    }\n  }\n\n  const saveImage = () => {\n    makeClientCrop(avatarCrop)\n  }\n\n  return (\n    <div className={classes.cropImageContainer}>\n      <div className={classes.cropImageWrapper}>\n        <div className=\"crop-img-container\">\n          <ReactCrop\n            src={props.src}\n            circularCrop={true}\n            crop={avatarCrop}\n            onChange={onCropChange}\n            onImageLoaded={e => setImageRef(e)}\n            ruleOfThirds={true}\n          />\n        </div>\n\n        <div className={classes.formAction} style={{\n          marginTop: 30\n        }}>\n          <Button\n            onClick={() => {\n              props.onCancel()\n            }}\n            className=\"btn-base btn-base--cancel btn-base--lg\">Cancel</Button>\n          <Button\n            onClick={saveImage}\n            disabled={props.loading}\n            className={`btn-base btn-base--success btn-base--lg ${clsx(\n              {\n                \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": props.loading\n              }\n            )}`}>Save</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CropImageForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent, Icon, Button, Link } from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport clsx from \"clsx\"\n\nConfirmationPopup.propTypes = {\n\n};\n\nfunction ConfirmationPopup(props) {\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.onClose}\n                keepMounted\n                maxWidth=\"sm\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <div style={{\n                        textAlign: 'center',\n                        padding: '30px',\n                        maxWidth: 500\n                    }}>\n                        <Icon\n                            style={{\n                                color: '#FF8C00',\n                                fontSize: 72\n                            }}>error_outline</Icon>\n                        <p style={{\n                            fontSize: 26,\n                            margin: '15 0'\n                        }}>{props.message}</p>\n                        <div style={{\n                            margin: '30px auto 0 auto',\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            alignItems: 'center'\n                        }}>\n                            <Link\n                                style={{\n                                    color: '#6B6C6F',\n                                    marginRight: 50\n                                }} onClick={props.onClose}>Cancel</Link>\n                            <Button\n                                onClick={props.onOK}\n                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                    {\n                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": props.loading\n                                    }\n                                )}`}> Ok</Button>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ConfirmationPopup;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    FormGroup, TextField, Icon, InputLabel, Table, TableHead, Link, Snackbar,\n    CircularProgress, TableRow, TableCell, TableBody, Button, Select, MenuItem\n} from '@material-ui/core';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { connect, useDispatch } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport _ from \"lodash\"\nimport { getRoleList, inviteUser, removeAdmin } from \"../../crud/auth.crud\"\nimport { getBrandDetail } from \"../../crud/brand.crud\"\nimport { actionTypes } from \"../../store/ducks/auth.duck\"\nimport { Formik } from \"formik\";\nimport { isValidEmail, isAuthenticated } from \"../../helpers/helper\"\nimport clsx from \"clsx\";\nimport { ROLE_DETAIL, PERMISSIONS } from \"../../constant/role\"\nimport ConfirmationPopup from \"../../partials/popup/ConfirmationPopup\"\n\nconst REMOVE_ADMIN_PERMISSONS = [PERMISSIONS.UPDATE_ADMIN_BRAND]\n\nAuthorization.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        background: '#FBFBFB',\n        padding: 50,\n        '& .input-base': {\n            marginBottom: 30\n        },\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& td, th': {\n            fontSize: '14px'\n        },\n        '& .MuiSnackbarContent-root': {\n            background: 'green'\n        }\n    },\n    formLegend: {\n        fontSize: 30,\n        textAlign: 'center',\n        fontWeight: 700,\n        marginBottom: 50\n    },\n    formContainer: {\n        maxWidth: 350,\n        margin: '0 auto'\n    },\n    permissionList: {\n        padding: 0,\n        '& li': {\n            listStyle: 'none',\n            marginBottom: 10,\n            color: '#6b6c6f',\n            display: 'flex',\n            alignItems: 'center',\n            '& .material-icons': {\n                marginRight: 5\n            },\n            '&:before': {\n                content: '✓',\n                display: 'block'\n            }\n        }\n    },\n    datatable: {\n        border: '1px solid #e0e0e0',\n        margin: '50px auto 0 auto',\n        maxWidth: 1000\n    },\n})\n\nfunction Authorization(props) {\n\n    const classes = useStyles()\n    const { brandId, admins } = props\n    const { intl } = props;\n    const dispatch = useDispatch();\n    const brandList = _.get(props, 'brand.brandList')\n    const [selectedRole, setSelectedRole] = useState('brandAdmin')\n    const [deleteLoading, setDeleteLoading] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [adminLoading, setAdminLoading] = useState(false)\n    const [successToast, setSuccessToast] = useState(false)\n    const [deleteConfirmationPopup, setDeleteConfirmationPopup] = useState(false)\n    const [selectedUser, setSelectedUser] = useState('')\n    const userRole = _.get(props, 'auth.user.permissions')\n\n    const columns = [\n        {\n            label: 'Email',\n            property: 'email',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Role',\n            property: 'role',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Status',\n            property: 'status',\n            horizontalAlign: 'center',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'syncDate',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'syncDate',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const handleRemoveAdmin = () => {\n        setDeleteLoading(true)\n        removeAdmin(brandId, selectedUser)\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                props.onUpdatedAdmin()\n                setDeleteConfirmationPopup(false)\n                setDeleteLoading(false)\n            })\n            .catch(err => {\n                setDeleteConfirmationPopup(false)\n                setDeleteLoading(false)\n            })\n    }\n\n\n    const handleInviteSubmit = (values, { setStatus, setSubmitting }) => {\n        setLoading(true)\n        setSubmitting(true)\n        setStatus('')\n        inviteUser(brandId, values.email, selectedRole)\n            .then(res => {\n                setLoading(false)\n                setSubmitting(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(errMsg)\n                }\n                else {\n                    props.onUpdatedAdmin()\n                    setSuccessToast(true)\n                    values.email = ''\n                    setStatus('')\n                }\n            })\n            .catch(err => {\n                setLoading(false)\n                setSubmitting(false)\n            })\n    }\n\n    const handleCloseToast = () => {\n        setSuccessToast(false)\n    };\n\n    const resendInvitation = (event, email, role) => {\n        event.preventDefault()\n        inviteUser(brandId, email, role)\n            .then(res => {\n                setSuccessToast(true)\n            })\n    }\n\n    useEffect(() => {\n        if (!_.get(props, 'auth.roles')) {\n            getRoleList()\n                .then(res => {\n                    dispatch({\n                        type: actionTypes.SetRoles,\n                        payload: _.get(res, 'data.result.roles')\n                    })\n                    dispatch({\n                        type: actionTypes.SetPermissions,\n                        payload: _.get(res, 'data.result.permissions')\n                    })\n                })\n        }\n\n    }, [])\n\n    const handleCloseDeleteConfirmationPopup = () => {\n        setDeleteConfirmationPopup(false)\n        setDeleteLoading(false)\n        setSelectedUser('')\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.formContainer}>\n                <Formik\n                    initialValues={{\n                        email: '',\n                    }}\n                    validate={values => {\n                        const errors = {};\n\n                        if (!values.email) {\n                            errors.email = intl.formatMessage({\n                                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                            });\n                        }\n                        else if (\n                            !isValidEmail(values.email)\n                        ) {\n                            errors.email = intl.formatMessage({\n                                id: \"AUTH.VALIDATION.INVALID_FIELD\"\n                            });\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={handleInviteSubmit}\n                >\n                    {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting\n                    }) => (\n                            <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                    <div className=\"alert-text\">{status}</div>\n                                </div>}\n                                <FormGroup style={{\n                                    flexWrap: 'nowrap',\n                                    flexDirection: 'row'\n                                }} className=\"input-base input-base--hasIcon\">\n                                    <TextField\n                                        style={{\n                                            margin: 0\n                                        }}\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        helperText={touched.email && errors.email}\n                                        error={Boolean(touched.email && errors.email)}\n                                        InputProps={{\n                                            startAdornment: <MailOutlineIcon />\n                                        }}\n                                    />\n                                </FormGroup>\n                                <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                    marginBottom: 30\n                                }}>\n                                    <InputLabel>Role</InputLabel>\n                                    <Select value=\"admin\" MenuProps={{\n                                        anchorOrigin: {\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        },\n                                        transformOrigin: {\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        },\n                                        getContentAnchorEl: null\n                                    }}\n                                        value={selectedRole}\n                                        onChange={e => setSelectedRole(e.target.value)}>\n                                        {Object.keys(_.get(props, 'auth.roles')).map((item, index) => (\n                                            <MenuItem key={index} value={item}>{_.get(_.get(props, 'auth.roles')[item], 'lang.en')}</MenuItem>\n                                        ))}\n\n                                    </Select>\n                                </FormGroup>\n                                <ul className={classes.permissionList}>\n                                    {_.get(props, 'auth.roles')[selectedRole]\n                                        && _.get(props, 'auth.roles')[selectedRole].permissions\n                                        && _.get(props, 'auth.roles')[selectedRole].permissions.map((item, index) => (\n                                            _.get(_.get(props, 'auth.permissions')[item], 'name.en') &&\n                                            <li key={index}>\n                                                <Icon>check</Icon>{_.get(_.get(props, 'auth.permissions')[item], 'name.en')}\n                                            </li>\n                                        ))}\n\n                                </ul>\n                                <Button style={{\n                                    marginTop: 15,\n                                    width: '100%'\n                                }}\n                                    disabled={isSubmitting}\n                                    onClick={handleSubmit}\n                                    className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                        {\n                                            \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n                                        }\n                                    )}`}>Invite</Button>\n                            </form>\n                        )}\n                </Formik>\n            </div>\n            <div className={classes.datatable}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((col, index) => (\n                                <TableCell align={col.horizontalAlign} key={index}>{col.label}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            admins && admins.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.email}\n                                    </TableCell>\n                                    <TableCell>\n                                        {ROLE_DETAIL[row.role] && ROLE_DETAIL[row.role].label}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {\n                                            row.isPending ? <p className=\"chip chip--secondary\">Pending</p>\n                                                : <p className=\"chip chip--success\">Active</p>\n                                        }\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 80,\n                                        textAlign: 'center'\n                                    }}>\n                                        {row.isPending &&\n                                            <Link\n                                                onClick={(e) => resendInvitation(e, row.email, row.role)}\n                                                href=\"\">\n                                                Resend\n                                        </Link>}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 80,\n                                        textAlign: 'center'\n                                    }}>\n                                        {\n                                            isAuthenticated(userRole, REMOVE_ADMIN_PERMISSONS) &&\n                                            <Link\n                                                onClick={(e) => {\n                                                    e.preventDefault()\n                                                    setSelectedUser(row.email)\n                                                    setDeleteConfirmationPopup(true)\n                                                }}\n                                                href=\"\">\n                                                Remove\n                                            </Link>\n                                        }\n\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n\n                    </TableBody>\n                </Table>\n                {adminLoading && <div className=\"spinner-container\">\n                    <CircularProgress />\n                </div>}\n            </div>\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={successToast}\n                autoHideDuration={6000}\n                onClose={handleCloseToast}\n                message=\"Invite successfully\">\n            </Snackbar>\n            <ConfirmationPopup\n                message={`Bạn có chắc chắn bỏ quyền quản lý  của ${selectedUser} không`}\n                open={deleteConfirmationPopup}\n                onClose={handleCloseDeleteConfirmationPopup}\n                loading={deleteLoading}\n                onOK={handleRemoveAdmin} />\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand,\n    auth: store.auth\n});\n\nexport default injectIntl(connect(mapStateToProps)(Authorization))","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { useParams, Link, Prompt } from \"react-router-dom\";\nimport { getBrandDetail, editBrand, disconnect, connectSendo } from '../../crud/brand.crud';\nimport {\n    TableHead, TableCell, Table, TableRow, TableBody, Dialog, DialogContent,\n    Button, Avatar, Icon, TextField, FormControl, FormGroup, Tooltip, InputLabel\n} from '@material-ui/core';\nimport { MARKET_PLACE } from '../../constant/marketplace'\nimport moment from 'moment';\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { reducer } from '../../store/ducks/brand.duck';\nimport { CircularProgress } from '@material-ui/core'\nimport { useDispatch } from 'react-redux';\nimport { actionTypes } from \"../../store/ducks/brand.duck\"\nimport _ from \"lodash\"\nimport CropImageForm from \"./components/CropImageForm\"\nimport ConfirmationPopup from \"../../partials/popup/ConfirmationPopup\"\nimport { PERMISSIONS, ROLES } from \"../../constant/role\"\nimport { isAuthenticated } from \"../../helpers/helper\"\nimport { connect } from \"react-redux\";\nimport Authorization from '../home/Authorization'\nimport clsx from \"clsx\"\nimport { globalStyles } from '../../styles/globalStyles'\n\nBrandDetail.propTypes = {\n};\n\nconst useStyles = makeStyles({\n    root: {\n        fontSize: '14px',\n        color: '#333',\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& .cell-marketplace': {\n            display: 'flex',\n            alignItems: 'center',\n            '& img': {\n                width: '20px',\n                height: '20px',\n                borderRadius: '4px'\n            },\n            '& p': {\n                margin: 0,\n\n            }\n        },\n        '& .cell-action': {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            padding: '8px 0',\n            '& button': {\n                margin: '8px 0'\n            }\n        },\n        '& .edit-brand-action': {\n            minWidth: '20px',\n            padding: 0,\n            marginLeft: '10px',\n            '& .material-icons': {\n                margin: 0\n            },\n            '&--danger': {\n                '& .material-icons': {\n                    color: 'red'\n                }\n            },\n            '&--success': {\n                '& .material-icons': {\n                    color: 'green'\n                }\n            }\n        }\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    filterSection: {\n        marginBottom: '30px',\n        textAlign: 'right'\n    },\n    btnAction: {\n        fontSize: '12px !important'\n    },\n    tableCell: {\n        fontSize: '14px'\n    },\n    brandLogo: {\n        display: 'inline-block',\n        position: 'relative'\n    },\n    brandInfo: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    brandLogoImg: {\n        width: '162px',\n        height: '162px',\n        background: '#bdbdbd'\n    },\n    uploadAction: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        transform: 'translateX(50%)'\n    },\n    actionBtn: {\n        height: '44px',\n        borderRadius: '50%',\n        backgroundColor: '#f3f3f3',\n        minWidth: '44px',\n        margin: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer'\n    },\n    brandName: {\n        marginLeft: '50px',\n        '& span': {\n            fontSize: '24px',\n            fontWeight: 800,\n            color: '#2c2c2c',\n        },\n        '& .material-icons': {\n            fontSize: '20px',\n            color: '#b2b2b2',\n            marginLeft: '10px'\n        }\n    },\n    brandNameViewMode: {\n    },\n    brandNameEditMode: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    ...globalStyles\n})\n\nconst columns = [\n    {\n        label: 'Thông tin shop',\n        property: 'market',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: 'Trạng thái',\n        property: 'status',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: 'Ngày đồng bộ',\n        property: 'syncDate',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: 'Ngày kết nối',\n        property: 'connectedDate',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: '',\n        property: 'action',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: '',\n        property: 'action',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: '',\n        property: 'action',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n    {\n        label: '',\n        property: 'action',\n        horizontalAlign: 'left',\n        cellFormat: 'string'\n    },\n]\n\nconst CONNECT_PERMISSION = [PERMISSIONS.CONNECT_SOURCE]\nconst DISCONNECT_PERMISSION = [ROLES.SUPERADMIN]\n\nfunction BrandDetail(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles()\n    const { brandId } = useParams()\n    const { intl } = props\n    const [brand, setBrand] = useState({\n        name: '',\n        shops: []\n    })\n    const [isEditMode, setIsEditMode] = useState(false)\n    const [tempImageURL, setTempImageURL] = useState('')\n    const [brandLogo, setBrandLogo] = useState('')\n    const [brandDefaultLogo, setBrandDefaultLogo] = useState('')\n    const [logoErr, setLogoErr] = useState('')\n    const [file, setFile] = useState('')\n    const [openUploadDataDialog, setUploadDataDialog] = useState(false)\n    const [uploadLogoLoading, setUploadLogoLoading] = useState(false)\n    const [shops, setShops] = useState([])\n    const [disconnectId, setDisconnectId] = useState('')\n    const [disconnectConfirmationPopup, setDisconnectConfirmationPopup] = useState(false)\n    const [disconnectLoading, setDisconnectLoading] = useState(false)\n    const [connectingURL, setConnectingURL] = useState({})\n    const [connectSendoPopup, setConnectSendoPopup] = useState(false)\n    const userRole = _.get(props, 'auth.user.permissions')\n    const [sendoKey, setSendoKey] = useState({\n        shop_key: '',\n        secret_key: ''\n    })\n\n    useEffect(() => {\n        fetchBrandDetail()\n    }, [brandId])\n\n    const fetchBrandDetail = () => {\n        getBrandDetail(brandId)\n            .then((res) => {\n                const brand = _.get(res, 'data.result.brand')\n                setConnectingURL(_.get(res, 'data.result') || {})\n                setShops(_.get(res, 'data.result.brand.shops'))\n                setBrand(brand || {})\n                setBrandDefaultLogo(_.get(brand, 'avatarUrl.Location'))\n            })\n    }\n\n    const uploadImage = e => {\n        let avatar = e.target.files[0]\n        if (avatar && avatar.type) {\n            if (avatar.type.includes('image')) {\n                setUploadDataDialog(true)\n                setLogoErr('')\n                setTempImageURL((window.URL\n                    ? URL\n                    : window.webkitURL\n                ).createObjectURL(avatar))\n            }\n            else {\n                setLogoErr('Wrong image format. Please select another file')\n            }\n        }\n    }\n\n    const disconnectShop = () => {\n        setDisconnectLoading(true)\n        disconnect(disconnectId)\n            .then(res => {\n                setDisconnectConfirmationPopup(false)\n                setDisconnectLoading(false)\n                getBrandDetail(brandId)\n                    .then((res) => {\n                        setShops(_.get(res, 'data.result.brand.shops'))\n                    })\n            })\n            .catch(err => {\n                setDisconnectConfirmationPopup(false)\n                setDisconnectLoading(false)\n            })\n    }\n\n    const handleCloseDisconnectConfirmationPopup = () => {\n        setDisconnectConfirmationPopup(false)\n        setDisconnectLoading(false)\n    }\n\n    const handleEditBrandLogo = (img) => {\n        setUploadLogoLoading(true)\n        setLogoErr('')\n        setTimeout(() => {\n            editBrand(brandId, '', _.get(img, 'file'))\n                .then(res => {\n                    setUploadLogoLoading(false)\n                    setUploadDataDialog(false)\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setLogoErr(errMsg)\n                    }\n                    else {\n                        setBrandDefaultLogo(_.get(img, 'url'))\n                    }\n                })\n                .catch(err => {\n                    setLogoErr('Network error. Please try again')\n                    setUploadLogoLoading(false)\n                    setUploadDataDialog(false)\n                })\n        }, 500)\n    }\n\n    const handleCloseUploadDialog = () => {\n        setFile('')\n        setUploadDataDialog(false)\n        setLogoErr('')\n    }\n\n    const handleSubmit = (values, { setStatus, setSubmitting }) => {\n        setSubmitting(true)\n        setStatus('')\n        setTimeout(() => {\n            editBrand(brandId, values.brand)\n                .then(res => {\n                    setSubmitting(false)\n                    setIsEditMode(false)\n                    if (res.data.errMsg) {\n                        setStatus(res.data.errMsg)\n                    }\n                    else {\n                        setBrand({\n                            ...brand,\n                            name: res.data.result.name\n                        })\n                        dispatch({\n                            type: actionTypes.EditBrand,\n                            payload: res.data.result\n                        })\n                    }\n\n                })\n                .catch(err => {\n                    setStatus('Network error. Please try again')\n                    setSubmitting(false)\n                })\n        }, 500)\n\n    }\n\n    const getConnectLink = marketplace => {\n        switch (marketplace) {\n            case 'lazada':\n                return connectingURL['lazadaAuth']\n            case 'tiki':\n                return connectingURL['tiki']\n            case 'shopee':\n                return connectingURL['shopeeAuth']\n            default:\n                return '#'\n        }\n    }\n\n    const handleConnectSendo = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n\n        connectSendo(\n            values.shop_key,\n            values.secret_key,\n            brandId\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(JSON.stringify(errMsg))\n                }\n                else {\n                    setConnectSendoPopup(false)\n                    fetchBrandDetail()\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n    return (\n        <div className={classes.root}>\n            <Formik\n                enableReinitialize\n                initialValues={{\n                    brand: brand.name || '',\n                    avatar: ''\n                }}\n                validate={values => {\n                    const errors = {};\n\n                    if (!values.brand) {\n                        errors.brand = intl.formatMessage({\n                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                        });\n                    }\n\n                    if (values.avatar) {\n                        errors.avatar = 'test'\n                    }\n\n                    return errors;\n                }}\n                onSubmit={handleSubmit}\n            >\n                {({\n                    values,\n                    status,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                }) => (\n                        <form autoComplete=\"off\" noValidate={true} onSubmit={handleSubmit}>\n                            <div className={classes.brandInfo}>\n                                <div className={classes.brandLogo}>\n                                    <Avatar className={classes.brandLogoImg} src={brandDefaultLogo}></Avatar>\n                                    <div className={classes.uploadAction}>\n                                        <label for=\"file-input\" className={classes.actionBtn}><Icon>publish</Icon></label>\n                                    </div>\n\n                                </div>\n                                <TextField\n                                    id=\"file-input\"\n                                    type=\"file\"\n                                    style={{\n                                        display: 'none'\n                                    }}\n                                    value={file}\n                                    onChange={uploadImage}\n                                />\n                                <div className={classes.brandName}>\n                                    {\n                                        isEditMode ? <div className={classes.brandNameEditMode}>\n                                            <FormControl fullWidth >\n                                                <TextField\n                                                    id=\"brand\"\n                                                    name=\"brand\"\n                                                    placeholder=\"Tên brand\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.brand}\n                                                    helperText={touched.brand && errors.brand}\n                                                    error={Boolean(touched.brand && errors.brand)}\n                                                />\n                                            </FormControl>\n                                            {\n                                                isSubmitting ? <div>\n                                                    <CircularProgress size=\"20px\" />\n                                                </div>\n                                                    :\n                                                    <div style={{\n                                                        display: 'flex'\n                                                    }}>\n                                                        <Button\n                                                            onClick={() => {\n                                                                values.brand = brand.name\n                                                                setIsEditMode(false)\n                                                            }}\n                                                            className=\"edit-brand-action edit-brand-action--danger\"><Icon>clear</Icon></Button>\n                                                        <Button\n                                                            className={`edit-brand-action edit-brand-action--success ${!values.brand || values.brand === brand.name ? 'disabled' : ''}`}\n                                                            type=\"submit\"><Icon>check</Icon></Button>\n                                                    </div>\n                                            }\n                                        </div> :\n                                            <div className={classes.brandNameViewMode}>\n                                                <div style={{\n                                                    display: 'flex',\n                                                    alignItems: 'center'\n                                                }}>\n                                                    <span>{brand.name}</span>\n                                                    <Button\n                                                        onClick={() => {\n                                                            setIsEditMode(true)\n                                                            values.brand = brand.name\n                                                            errors.brand = ''\n                                                        }}\n                                                        className=\"edit-brand-action\"><Icon>edit</Icon></Button>\n                                                </div>\n                                                <p style={{\n                                                    margin: 0\n                                                }}>Người tạo: {_.get(brand, 'createBy.email')}</p>\n                                                <p>Ngày tạo: {moment(_.get(brand, 'created')).format('MM/DD/YYYY')}</p>\n                                            </div>\n                                    }\n                                </div>\n                            </div>\n                            {status && <div role=\"alert\" style={{\n                                maxWidth: '400px',\n                                margin: '20px 0'\n                            }} className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{status}</div>\n                            </div>}\n                            {logoErr && !status && <div role=\"alert\" style={{\n                                maxWidth: '400px',\n                                margin: '20px 0'\n                            }} className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{logoErr}</div>\n                            </div>}\n                            <Prompt\n                                when={(brand.name && values.brand !== brand.name)}\n                                message=\"Are you sure you want to leave?\"\n                            />\n                        </form>\n                    )}\n            </Formik>\n\n            <div className={classes.filterSection}>\n                {\n                    isAuthenticated(userRole, CONNECT_PERMISSION) &&\n                    <Link to={`/connect-market/${brandId}`}><Button className=\"btn-base btn-base--success\">Kết nối</Button></Link>\n                }\n            </div>\n            <div className={classes.datatable}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((col, index) => (\n                                <TableCell className={classes.tableCell} className={classes.tableHeader} align=\"left\" key={index}>{col.label}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {shops && shops.map((row, index) => (\n                            !row.disconnected && row.marketplace !== 'tiki' &&\n                            <TableRow key={index}>\n                                <TableCell className={`${classes.tableCell}`} align=\"left\">\n                                    <div className=\"cell-marketplace\">\n                                        <Avatar variant=\"square\"\n                                            src={MARKET_PLACE[row.marketplace] ? MARKET_PLACE[row.marketplace].image : MARKET_PLACE['googleSheet'].image}>\n                                        </Avatar>\n                                        {row.name || (row[row.connectedShop] && (row[row.connectedShop].shop_name || row[row.connectedShop].name))}\n                                        {/* <p>{MARKET_PLACE[row.marketplace] && MARKET_PLACE[row.marketplace].name}</p> */}\n                                    </div>\n                                </TableCell>\n                                <TableCell className={classes.tableCell} align=\"left\">\n\n                                    {row.error ?\n                                        <Tooltip title={<span style={{ fontSize: 11 }}>{`Error: ${JSON.stringify(_.get(row, 'error.message') || '')}`}</span>}><p className=\"chip chip--danger\">Error</p></Tooltip> :\n                                        <p className=\"chip chip--success\">Active</p>}</TableCell>\n                                <TableCell className={classes.tableCell} align=\"left\">-</TableCell>\n                                <TableCell className={classes.tableCell} align=\"left\">\n                                    {moment.utc(row.created).local().format('MM-DD-YYYY')}</TableCell>\n                                <TableCell style={{\n                                    width: 80\n                                }}>{row.error && <a href={getConnectLink(row.marketplace)} onClick={(e) => {\n                                    if (row.marketplace === 'sendo') {\n                                        e.preventDefault()\n                                        setSendoKey({\n                                            shop_key: _.get(row, 'sourceDetail.shop_key'),\n                                            secret_key: _.get(row, 'sourceDetail.secret_key')\n                                        })\n                                        setConnectSendoPopup(true)\n                                    }\n                                }} target=\"_blank\">Reconnect</a>}\n                                </TableCell>\n                                <TableCell style={{\n                                    width: 80\n                                }}>{row.spreadSheet && <div>{row.connectedShop.email}</div>\n                                    }</TableCell>\n                                <TableCell style={{\n                                    width: 80\n                                }}>{row.spreadSheet && <a\n                                    href={`https://docs.google.com/spreadsheets/d/${row.spreadSheet}`}>Preview</a>\n                                    }</TableCell>\n                                <TableCell style={{\n                                    width: 80,\n                                    padding: 0,\n                                    textAlign: 'center'\n                                }} className={classes.tableCell} align=\"left\">\n                                    <div className=\"cell-action\">\n                                        {\n                                            isAuthenticated(userRole, DISCONNECT_PERMISSION) &&\n\n                                            <Link\n                                                onClick={(e) => {\n                                                    setDisconnectConfirmationPopup(true)\n                                                    setDisconnectId(row._id)\n                                                }}\n                                                href=\"#\">Xóa</Link>\n                                        }\n                                        {/* <Button className={`btn-base btn-base--table-action`}><Icon>loop</Icon>Đồng bộ sản phẩm</Button>\n                                        <Button className={`btn-base btn-base--table-action`}><Icon>loop</Icon>Đồng bộ đơn hàng</Button> */}\n                                    </div>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n            <Authorization onUpdatedAdmin={fetchBrandDetail} brandId={brandId} admins={brand.admins && brand.invitations && [...brand.admins, ...brand.invitations]} />\n            <Dialog\n                open={openUploadDataDialog}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={handleCloseUploadDialog}\n            >\n                <DialogContent>\n                    <CropImageForm\n                        loading={uploadLogoLoading}\n                        src={tempImageURL}\n                        onCancel={handleCloseUploadDialog}\n                        onSave={handleEditBrandLogo} />\n                </DialogContent>\n            </Dialog>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn ngưng kết nối không? Ngưng kết nối sẽ mất hết dữ liệu\"\n                open={disconnectConfirmationPopup}\n                onClose={handleCloseDisconnectConfirmationPopup}\n                loading={disconnectLoading}\n                onOK={disconnectShop} />\n            <Dialog\n                open={connectSendoPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setConnectSendoPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    shop_key: sendoKey.shop_key,\n                                    secret_key: sendoKey.secret_key\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.shop_key) {\n                                        errors.shop_key = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    if (!values.secret_key) {\n                                        errors.secret_key = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleConnectSendo}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel className=\"input-base__label\">Shop key</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Shop key\"\n                                                    name=\"shop_key\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.shop_key}\n                                                    helperText={touched.shop_key && errors.shop_key}\n                                                    error={Boolean(touched.shop_key && errors.shop_key)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel className=\"input-base__label\">Secret key</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Secret key\"\n                                                    name=\"secret_key\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.secret_key}\n                                                    helperText={touched.secret_key && errors.secret_key}\n                                                    error={Boolean(touched.secret_key && errors.secret_key)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setConnectSendoPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div >\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand,\n    auth: store.auth\n});\n\nexport default injectIntl(connect(mapStateToProps)(BrandDetail));","import React, { Suspense, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Grid, FormControl, Select, MenuItem, ButtonGroup, Button\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport RangeDatePicker from \"../components/RangeDatePicker\"\nimport { useDispatch } from 'react-redux';\nimport { actionTypes as brandTypes } from '../../../store/ducks/brand.duck'\nimport { getBrandDetail, getBrandList } from '../../../crud/brand.crud';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch, useHistory, BrowserRouter, Link } from 'react-router-dom'\nimport OrderList from './OrderList'\nimport RevenueStatistics from './RevenueStatistics'\nimport BrandDetail from '../BrandDetail'\n\nDashboard.propTypes = {\n\n};\n\nconst ROUTES = {\n    BRAND: 'brand',\n    STATISTICS: 'statistics',\n    ORDERS: 'orders'\n}\n\nconst useStyles = makeStyles({\n    root: {\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800,\n            pointerEvent: 'none'\n        }\n    },\n    ...globalStyles\n})\n\n\nfunction Dashboard(props) {\n    const classes = useStyles()\n    const brandId = _.get(props, 'brand.selectedBrand')\n    const [brandList, setBrandList] = useState([])\n    const dispatch = useDispatch()\n    const [mode, setMode] = useState('year')\n    const startDateConfig = { hour: 0, minute: 0, second: 0, millisecond: 0 }\n    const endDateConfig = { hour: 23, minute: 59, second: 59, millisecond: 999 }\n    const [from, setFrom] = useState(moment().startOf('year').set(startDateConfig).toISOString())\n    const [to, setTo] = useState(moment().set(endDateConfig).toISOString())\n    const history = useHistory()\n    const [currentPath, setCurrentPath] = useState('')\n\n    useEffect(() => {\n        getBrandList()\n            .then(res => {\n                const result = _.get(res, 'data.result.brands')\n                if (result && result.length > 0) {\n                    setBrandList(result)\n                    if (!_.get(props, 'brand.selectedBrand')) {\n                        dispatch({\n                            type: brandTypes.ChangeBrand,\n                            payload: result[0] && result[0]._id\n                        })\n                    }\n                    dispatch({\n                        type: brandTypes.SetBrandList,\n                        payload: result\n                    })\n                }\n\n            })\n    }, [])\n\n    history.listen((location, action) => {\n        setCurrentPath(getCurrentPath())\n    })\n\n    useEffect(() => {\n        dispatch({\n            type: brandTypes.SetFilter,\n            payload: {\n                from: from,\n                to: to,\n                mode: mode\n            }\n        })\n    }, [from, to, mode])\n\n    useEffect(() => {\n        if (currentPath === ROUTES.BRAND) {\n            history.push(`/dashboard/detail/${brandId}`)\n        }\n    }, [brandId])\n\n    const getCurrentPath = () => {\n        let path = history.location.pathname\n        if (path.split('/detail').length === 2) {\n            return ROUTES.BRAND\n        }\n        if (path.split('/orders').length === 2) {\n            return ROUTES.ORDERS\n        }\n        if (path.split('/revenue').length === 2) {\n            return ROUTES.STATISTICS\n        }\n    }\n\n    const handleSelectBrand = e => {\n        dispatch({\n            type: brandTypes.ChangeBrand,\n            payload: e.target.value\n        })\n    }\n\n    const handleStartDateChange = e => {\n        setFrom(moment(e).set(startDateConfig).toISOString())\n    }\n\n    const handleEndDateChange = e => {\n        setTo(moment(e).set(endDateConfig).toISOString())\n    }\n\n    const handleChangeMode = (m) => {\n        setMode(m)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.headerLegend}>\n                <Grid container spacing={0} style={{\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                }}>\n                    <Grid item>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start'\n                        }}>\n                            <p className={classes.headerTitle}>Dashboard</p>\n                        </div>\n                    </Grid>\n                    <Grid item style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end'\n                    }}>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-end'\n                        }}>\n                            <FormControl variant=\"outlined\" className=\"dropdown\">\n                                <Select\n                                    MenuProps={{\n                                        anchorOrigin: {\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        },\n                                        transformOrigin: {\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        },\n                                        getContentAnchorEl: null\n                                    }}\n                                    className=\"btn-base btn-base--success\"\n                                    labelId=\"brand\"\n                                    id=\"brand\"\n                                    label=\"Brand\"\n                                    value={brandId}\n                                    onChange={handleSelectBrand}\n                                >\n                                    {brandList && brandList.map(item => (\n                                        <MenuItem key={item._id} value={item._id}>{item.name}</MenuItem>\n                                    ))}\n                                </Select>\n\n                            </FormControl>\n\n                            {\n                                currentPath !== ROUTES.BRAND &&\n                                <div style={{\n                                    marginLeft: 15\n                                }} >\n                                    <RangeDatePicker\n                                        isShowAll={currentPath === ROUTES.ORDERS}\n                                        setFrom={handleStartDateChange}\n                                        setMode={handleChangeMode}\n                                        setTo={handleEndDateChange}\n                                        from={from ? new Date(from) : null}\n                                        to={to ? new Date(to) : null} mode={mode} />\n                                </div>\n                            }\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            <div style={{\n                marginBottom: 30,\n                marginTop: 30\n            }}>\n                <ButtonGroup aria-label=\"outlined button group\" className={classes.sourceFilterBtnGroup}>\n                    <Button className={`${currentPath === ROUTES.STATISTICS && 'active'}`}><Link to={`/dashboard/revenue`}>Statistics</Link></Button>\n                    <Button className={`${currentPath === ROUTES.ORDERS && 'active'}`}><Link to=\"/dashboard/orders\">Orders</Link></Button>\n                    <Button className={`${currentPath === ROUTES.BRAND && 'active'}`}><Link to={`/dashboard/detail/${brandId}`}>Detail</Link></Button>\n                </ButtonGroup>\n            </div>\n            <Suspense>\n                <Switch>\n                    <Route path=\"/dashboard/revenue\" component={RevenueStatistics} />\n                    <Route path=\"/dashboard/orders\" component={OrderList} />\n                    <Route path=\"/dashboard/detail/:brandId\" component={BrandDetail} />\n                    <Redirect from=\"/dashboard\" to=\"/dashboard/revenue\" />\n                </Switch>\n            </Suspense>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand\n});\n\nexport default connect(mapStateToProps)(Dashboard);","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress, TableHead, TableCell, Checkbox, Table, TableRow, TableBody, Button, TablePagination, Icon, Avatar, ListItem, List } from '@material-ui/core';\nimport { getBrandList, deleteBrand } from '../../crud/brand.crud';\nimport { Link } from \"react-router-dom\";\nimport { toAbsoluteUrl } from '../../../_metronic/utils/utils'\nimport { MARKET_PLACE } from '../../constant/marketplace'\nimport _ from \"lodash\"\nimport moment from \"moment\"\nimport ConfirmationPopup from \"../../partials/popup/ConfirmationPopup\"\nimport { ROLE_DETAIL, PERMISSIONS } from \"../../constant/role\"\nimport { isAuthenticated } from \"../../helpers/helper\"\nimport { connect } from \"react-redux\";\n\nBrandList.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        fontSize: '14px',\n        color: '#333',\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n    },\n    shopStatus: {\n\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    filterSection: {\n        marginBottom: '30px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n    },\n    deleteBtn: {\n        border: '1px solid #dbdee4',\n        marginRight: '15px'\n    },\n    searchBlock: {\n        marginRight: '15px'\n    },\n    tableCell: {\n        fontSize: '14px'\n    },\n    table: {\n        tablePagination: '30px'\n    }\n})\n\nconst CREATE_BRAND_PERMISSONS = [PERMISSIONS.CREATE_BRAND]\nconst UPDATE_BRAND_PERMISSONS = [PERMISSIONS.UPDATE_ADMIN_BRAND]\n\nfunction BrandList(props) {\n    const classes = useStyles()\n    const [brandList, setBrandList] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [userAvatarList, setUserAvatarList] = useState([])\n    const [deleteConfirmationPopup, setDeleteConfirmationPopup] = useState(false)\n    const [deleteLoading, setDeleteLoading] = useState(false)\n    const [selectedDeleteBrand, setSelectedDeleteBrand] = useState('')\n    const userRole = _.get(props, 'auth.user.permissions')\n\n    useEffect(() => {\n        getBrandList()\n            .then((res) => {\n                setLoading(false)\n                setBrandList(_.get(res, 'data.result.brands') || [])\n                setUserAvatarList(_.get(res, 'data.result.avatarByEmail') || [])\n            })\n    }, [])\n\n    const handleCloseDeleteConfirmationPopup = () => {\n        setDeleteConfirmationPopup(false)\n        setDeleteLoading(false)\n        setSelectedDeleteBrand('')\n    }\n\n    const columns = [\n        {\n            label: '',\n            property: '',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Tên brand',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Sales Channel',\n            property: 'markets',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'User',\n            property: 'users',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Tạo ngày',\n            property: 'createdDate',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: '',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const changePage = () => {\n\n    }\n\n    const removeBrand = () => {\n        setDeleteLoading(true)\n        deleteBrand(selectedDeleteBrand)\n            .then(res => {\n                getBrandList()\n                    .then((res) => {\n                        setDeleteConfirmationPopup(false)\n                        setDeleteLoading(false)\n                        setBrandList(_.get(res, 'data.result.brands') || [])\n                    })\n            })\n            .catch(err => {\n                setDeleteConfirmationPopup(false)\n                setDeleteLoading(false)\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.filterSection}>\n                {/* <Button className={classes.deleteBtn}><Icon>delete</Icon></Button> */}\n                <div className={`${classes.searchBlock} search`}>\n                    <input placeholder=\"Search\" />\n                    <Icon>search</Icon>\n                </div>\n                {\n                    isAuthenticated(userRole, CREATE_BRAND_PERMISSONS) && <Link to=\"/create-brand\"><Button className=\"btn-base btn-base--success\" >+ ADD BRAND</Button></Link>\n                }\n            </div>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {/* <TableCell padding=\"checkbox\" align=\"left\">\n                                <Checkbox className=\"checkbox\" />\n                            </TableCell> */}\n                            {columns.map((col, index) => (\n                                <TableCell className={`${classes.tableHeader} ${classes.tableCell}`} align=\"left\" key={index}>{col.label}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {brandList.map((row, index) => (\n                            <TableRow key={index}>\n                                {/* <TableCell align=\"left\" padding=\"checkbox\">\n                                    <Checkbox className=\"checkbox\" />\n                                </TableCell> */}\n                                <TableCell style={{\n                                    width: '50px'\n                                }} align=\"left\" className={classes.tableCell}>\n                                    <Avatar src={_.get(row, 'avatarUrl.Location')}></Avatar>\n                                </TableCell>\n                                <TableCell align=\"left\" className={classes.tableCell}>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"left\" className={classes.tableCell} style={{\n                                    width: 500,\n                                }}>\n                                    <List className=\"list-market-place\">\n                                        {\n                                            row.shops && row.shops.length > 0 && row.shops.find(item => !item.disconnected) ?\n                                                row.shops.map((shop, index) => (\n                                                    !shop.disconnected && shop.marketplace !== 'tiki' && <ListItem key={index}>\n                                                        <Avatar className=\"marketplaceLogo\" variant=\"square\"\n                                                            src={MARKET_PLACE[shop.marketplace] ? MARKET_PLACE[shop.marketplace].image : MARKET_PLACE['googleSheet'].image}></Avatar>\n                                                        {\n                                                            shop.error ? <Icon className=\"marketplace-status\" style={{\n                                                                color: 'red'\n                                                            }}>error_icon</Icon> : <Icon className=\"marketplace-status\" style={{\n                                                                color: 'green'\n                                                            }}>check_circle_icon</Icon>\n                                                        }\n                                                    </ListItem>\n                                                ))\n                                                :\n                                                <Link to={`connect-market/${row._id}`}>Kết nối</Link>\n                                        }\n                                    </List>\n                                </TableCell>\n                                <TableCell align=\"left\" className={classes.tableCell} style={{\n                                }}>\n                                    <List>\n                                        {/* {row.admins && row.admins.map((item, index) => index < 3 && (\n                                            < ListItem key={index} style={{\n                                                left: index * 32 + 'px',\n                                                zIndex: row.admins.length - index + 1\n                                            }}>\n                                                <Avatar title={item.email} src={\n                                                    item && _.get(userAvatarList.find(u => u.email === item.email), 'avatar.Location')\n                                                }></Avatar>\n                                            </ListItem>\n                                        ))}\n\n                                        {row.admins && row.admins.length > 3 && <ListItem className=\"more-user\">\n                                            <p>+{row.admins && (row.admins.length - 3)}</p>\n                                        </ListItem>} */}\n                                        {row.admins && row.admins.map((item, index) => (\n                                            <ListItem key={index}>{item.email} - {_.get(ROLE_DETAIL[item.role], 'label')}</ListItem>\n                                        ))}\n\n                                    </List>\n                                </TableCell>\n                                <TableCell align=\"left\" className={classes.tableCell}>{row.created ? moment(row.created).format('MM-DD-YYYY') : ''}</TableCell>\n                                <TableCell style={{\n                                    width: '100px'\n                                }} align=\"left\" className={classes.tableCell}>\n                                    {isAuthenticated(userRole, UPDATE_BRAND_PERMISSONS) &&\n                                        <Icon style={{\n                                            marginRight: '15px',\n                                            cursor: 'pointer'\n                                        }}\n                                            onClick={() => {\n                                                setSelectedDeleteBrand(row._id)\n                                                setDeleteConfirmationPopup(true)\n                                            }}>delete</Icon>\n                                    }\n                                    {isAuthenticated(userRole, UPDATE_BRAND_PERMISSONS) &&\n                                        <Link to={`/brand-detail/${row._id}`}><Icon>edit</Icon></Link>}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n            {\n                (loading || brandList.length === 0) &&\n                <div className=\"spinner-container\">\n                    {loading && <CircularProgress />}\n                    {!loading && brandList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                </div>\n            }\n\n            <div className={classes.tablePagination}>\n                <TablePagination\n                    onChangePage={changePage}\n                    component=\"div\"\n                    count={50}\n                    rowsPerPage={10}\n                    page={1}\n                />\n            </div>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn xóa brand?\"\n                open={deleteConfirmationPopup}\n                onClose={handleCloseDeleteConfirmationPopup}\n                loading={deleteLoading}\n                onOK={removeBrand} />\n        </div >\n\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand,\n    auth: store.auth\n});\n\nexport default connect(mapStateToProps)(BrandList);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableBody, TableCell, TableHead, FormGroup,\n    TableRow, Button, Icon, Link, Dialog, DialogContent, TextField\n} from '@material-ui/core';\nimport { toAbsoluteUrl } from \"../../../../_metronic/utils/utils\";\nimport { selectSpreadsheet } from \"../../../crud/brand.crud\"\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\"\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\"\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nGoogleDriveFilesTracking.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        '& .selected': {\n            background: 'rgba(0,0,0,0.05)'\n        },\n        '& .MuiTableCell-root': {\n            fontSize: 14\n        }\n    },\n    listFile: {\n        width: 580\n    },\n    formAction: {\n        padding: '0 10px',\n        margin: '20px auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        maxWidth: 450,\n        '& button': {\n            width: 'calc(50% - 7px)'\n        }\n    },\n    tableRow: {\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: 'rgba(0,0,0,0.05)'\n        }\n    },\n    listFolder: {\n        maxHeight: 535,\n        overflowY: 'auto',\n        width: 300,\n        borderRight: '1px solid rgba(51, 51, 51, 0.1)',\n        '& ul': {\n            listStyleType: 'none',\n            padding: 0,\n            '& li': {\n                padding: '37px 45px 37px 30px',\n                margin: 0,\n                cursor: 'pointer',\n                transition: 'all 0.3s linear',\n                display: 'flex',\n                alignItems: 'center',\n                position: 'relative',\n                '&:hover': {\n                    backgroundColor: '#F9F9F9'\n                },\n                '& .material-icons': {\n                    fontSize: 32,\n                    marginRight: 10\n                },\n                '& .floating-icon': {\n                    fontSize: 12,\n                    position: 'absolute',\n                    right: '10px',\n                    top: '50%',\n                    transform: 'translateY(-50%)'\n                }\n            },\n            '& .selected': {\n                backgroundColor: 'rgba(0,0,0,0.05)'\n            }\n        }\n    },\n    main: {\n        '& li': {\n            color: '#014B68'\n        }\n    },\n    table: {\n        '& .MuiTableHead-root': {\n            display: 'inline-table',\n            width: '100%',\n            backgroundColor: '#EBEBEB',\n            '& th': {\n                padding: '23px 16px',\n            }\n        },\n        '& .MuiTableBody-root': {\n            display: 'block',\n            height: 385,\n            overflowY: 'auto',\n            '& tr': {\n                borderBottom: '1px solid rgba(216, 216, 216, 1)',\n                display: 'flex',\n                alignItems: 'center'\n            }\n        }\n    },\n    setFileNameForm: {\n        textAlign: 'cetner',\n        padding: 30,\n        width: 400,\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    }\n})\n\nfunction GoogleDriveFilesTracking(props) {\n    const classes = useStyles()\n    const { intl, source } = props;\n    const [selectedFile, setSelectedFile] = useState('')\n    const [isSubmitting, setSubmitting] = useState(false)\n    let rows = props.speadSheetList\n    const history = useHistory()\n\n    const handleSelectFile = () => {\n        setSubmitting(true)\n        selectSpreadsheet(source, selectedFile)\n            .then(res => {\n                setSubmitting(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                }\n                else {\n                    history.push('/')\n                }\n            })\n            .catch(err => {\n                setSubmitting(false)\n            })\n    }\n\n    const subFolders = [{\n        name: 'Thư mục 1',\n        icon: 'folder'\n    },\n    {\n        name: 'Thư mục 2',\n        icon: 'folder'\n    },\n    {\n        name: 'Thư mục 3',\n        icon: 'folder'\n    },]\n\n    const folders = [{\n        name: 'Thư mục của tôi',\n        icon: 'folder'\n    }, {\n        name: 'Thư mục được chia sẻ với tôi',\n        icon: 'people_alt'\n    }, {\n        name: 'Thư mục đánh dấu',\n        icon: 'star'\n    }]\n\n    return (\n        <div className={classes.root}>\n            {/* <div className={`${classes.listFolder} ${classes.main}`}>\n                <ul>\n                    {folders.map((item, index) => (\n                        <li key={index}>\n                            <Icon>{item.icon}</Icon>{item.name}\n                            <Icon className=\"floating-icon\">arrow_forward_ios</Icon>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className={classes.listFolder}>\n                <ul>\n                    {subFolders.map((item, index) => (\n                        <li key={index}>\n                            <Icon>{item.icon}</Icon>{item.name}\n                            <Icon className=\"floating-icon\">arrow_forward_ios</Icon>\n                        </li>\n                    ))}\n                </ul>\n            </div> */}\n            <div className={classes.listFile}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell style={{\n                                width: 472\n                            }}>Tên file</TableCell>\n                            <TableCell style={{\n                                width: 100\n                            }}></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows && rows.map((row, index) => (\n                            <TableRow key={index} className={`${classes.tableRow} ${selectedFile === row.id && 'selected'}`}\n                                onClick={() => setSelectedFile(row.id)}>\n                                <TableCell style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    width: 472\n                                }}><img\n                                        style={{\n                                            marginRight: 10\n                                        }}\n                                        src={toAbsoluteUrl('/media/logos/google-sheet.svg')} /> {row.name}</TableCell>\n                                <TableCell><Link href={row.webViewLink} target=\"_blank\">Preview</Link></TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.formAction}>\n                    <Button\n                        onClick={() => {\n                            setSelectedFile('')\n                            props.onClose()\n                        }}\n                        className=\"btn-base btn-base--cancel btn-base--lg\">Cancel</Button>\n                    <Button\n                        onClick={handleSelectFile}\n                        className={`btn-base btn-base--success btn-base--lg ${!selectedFile && 'disabled'} ${clsx(\n                            {\n                                \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                            }\n                        )}`}\n                    >Connect</Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default injectIntl(GoogleDriveFilesTracking);","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\";\nimport { Button, Grid, Link, Icon, Dialog, DialogContent, Slide, FormGroup, TextField, InputLabel } from '@material-ui/core';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getBrandDetail, connectGoogleDrive, getGoogleSheetFiles, connectSendo, uploadExternalData, selectGoogleDriveFile } from '../../crud/brand.crud';\nimport { MARKET_PLACE } from '../../constant/marketplace'\nimport GoogleDriveFilesTracking from './components/GoogleDriveFilesTracking'\nimport { popupWindow } from '../../helpers/helper'\nimport _ from \"lodash\"\nimport { globalStyles } from '../../styles/globalStyles'\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes } from \"../../store/ducks/brand.duck\"\n\n\nConnectMarket.propTypes = {\n\n};\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '50px',\n        '& .connected': {\n            pointerEvents: 'none',\n            '& button': {\n                backgroundColor: '#fff1ed',\n                border: '1px solid #f3592b !important',\n                color: '#f3592b',\n            }\n        }\n    },\n    formCotnainer: {\n        backgroundColor: '#fbfbfb',\n        padding: '50px'\n    },\n    formWrapper: {\n        maxWidth: '600px',\n        margin: '0 auto'\n    },\n    formBanner: {\n        textAlign: 'center',\n        marginBottom: '30px'\n    },\n    formTitle: {\n        fontSize: '20px',\n        textAlign: 'center',\n        marginBottom: '30px',\n        '& p': {\n            margin: 0\n        }\n    },\n    legend: {\n        fontSize: '30px',\n        fontWeight: 800\n    },\n    marketOption: {\n        margin: '0 auto',\n        maxWidth: '120px',\n        width: '100%',\n        border: '1px solid #979797 !important',\n        borderRadius: '4px !important',\n        color: '#696969',\n        padding: '20px 15px',\n        fontWeight: 800,\n        display: 'block',\n        height: 115,\n        overflow: 'hidden',\n        '& img': {\n            borderRadius: 4,\n            marginBottom: 10\n        },\n        '& p': {\n            margin: 0\n        }\n    },\n    marketOptionLink: {\n        flex: 1,\n        textAlign: 'center'\n    },\n    connectBtn: {\n        width: '200px',\n        margin: '30px auto',\n        display: 'block'\n    },\n    marketOptionGroup: {\n        justifyContent: 'center'\n    },\n    googleSheetDialog: {\n        '& .MuiDialogContent-root': {\n            padding: 0\n        }\n    },\n    ...globalStyles\n})\n\nfunction ConnectMarket(props) {\n    const classes = useStyles()\n    const { brandId } = useParams();\n    const [brand, setBrand] = useState()\n    const [source, setSource] = useState('')\n    const [uploadExternalDialog, setUploadExternalDialog] = useState(false);\n    const [googleSheetFileDialog, setGoogleSheetFileDialog] = useState(false);\n    const [speadSheetList, setSpeadSheetList] = useState([])\n    const [isDriveConnected, setIsDriveConnected] = useState(false)\n    const [shop, setShop] = useState('')\n    const [connectSendoPopup, setConnectSendoPopup] = useState(false)\n    const [isCreateSheet, setIsCreateSheet] = useState(false)\n    let googleWindow = ''\n    const { intl } = props;\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getBrandDetail(brandId)\n            .then((res) => {\n                setBrand(_.get(res, 'data.result') || {})\n            })\n    }, [])\n\n    // useEffect(() => {\n    //     getGoogleSheetFiles(brandId)\n    //         .then((res) => {\n    //             var data = _.get(res, 'data.result')\n    //             if (data !== 'connecting') {\n    //                 setIsDriveConnected(true)\n    //                 setSpeadSheetList(data.spreadSheetList || [])\n    //                 setShop(_.get(data, 'shop._id'))\n    //             }\n    //         })\n    // }, [])\n\n    const getFileTimer = (s) => {\n        var timer\n        timer = setInterval(() => {\n            getGoogleSheetFiles(s)\n                .then((res) => {\n                    var data = _.get(res, 'data.result')\n                    if (data !== 'connecting') {\n                        setIsDriveConnected(true)\n                        setSpeadSheetList(data.spreadSheetList || [])\n                        setShop(_.get(data, 'shop._id'))\n                        clearInterval(timer)\n                        setGoogleSheetFileDialog(true)\n                        googleWindow.close()\n                    }\n                })\n        }, 3000)\n    }\n\n    const handleConnectGoogleDrive = (url, s) => {\n        googleWindow = popupWindow(url, 'googlesheet', window, 400, 600);\n        getFileTimer(s)\n    }\n\n\n    const handleCreateSource = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        if (isCreateSheet) {\n            selectGoogleDriveFile(values.name, brandId)\n                .then(res => {\n                    setSubmitting(false)\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setUploadExternalDialog(false)\n                        setSource(_.get(res, 'data.result.source._id'))\n                        handleConnectGoogleDrive(_.get(res, 'data.result.googleOauth'), _.get(res, 'data.result.source._id'))\n                    }\n                })\n                .catch(err => {\n                    setStatus('Network error. Please try again')\n                    setSubmitting(false)\n                })\n        }\n        else {\n            uploadExternalData(\n                values.name,\n                brandId\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        dispatch({\n                            type: actionTypes.ChangeBrand,\n                            payload: brandId\n                        })\n                        dispatch({\n                            type: actionTypes.ChangeShop,\n                            payload: _.get(res, 'data.result._id')\n                        })\n\n                        history.push('/dashboard/orders')\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }\n\n    }\n\n    const isGoogleDriveConnected = () => brand && _.get(brand, 'brand.shops').find(shop =>\n        !shop.disconnected && shop.marketplace === 'googleSheet')\n\n    const handleConnectSendo = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n\n        connectSendo(\n            values.shop_key,\n            values.secret_key,\n            brandId\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(JSON.stringify(errMsg))\n                }\n                else {\n                    dispatch({\n                        type: actionTypes.ChangeBrand,\n                        payload: brandId\n                    })\n\n                    history.push('/dashboard/revenue')\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n\n    const marketList = [\n        {\n            name: 'Shopee',\n            val: 'shopee',\n            url: 'shopeeAuth'\n        },\n        {\n            name: 'Lazada',\n            val: 'lazada',\n            url: 'lazadaAuth'\n        },\n        // {\n        //     name: 'Tiki',\n        //     val: 'tiki',\n        //     url: 'tiki'\n        // }\n    ]\n    return (\n        <div className={classes.root}>\n            <div className={classes.formCotnainer}>\n                <div className={classes.formWrapper}>\n                    <div className={classes.formBanner}>\n                        <img src={toAbsoluteUrl('/media/banners/connect-market-banner.svg')} />\n                    </div>\n                    <div className={classes.formTitle}>\n                        <p className={classes.legend}>KẾT NỐI KÊNH BÁN HÀNG CỦA BẠN</p>\n                        <p>Liên kết sàn để theo dõi dữ liệu</p>\n                    </div>\n                    <div className={classes.formContent}>\n                        <Grid justify=\"center\" container alignItems=\"center\" spacing={2}>\n                            {brand && <Grid item xs={12} sm={6} md={2}>\n                                <Link\n                                    onClick={() => setConnectSendoPopup(true)}\n                                    className={`${classes.marketOptionLink} \n                                    ${_.get(brand, 'brand.shops').find(b => !b.disconnected && b.marketplace === 'sendo') ? 'connected' : ''}`}>\n                                    <Button\n                                        className={classes.marketOption}>\n                                        <img src={MARKET_PLACE['sendo'].image} />\n                                        <p>Sendo</p>\n                                    </Button>\n                                </Link>\n                            </Grid>}\n                            {brand && marketList.map((item, index) => (\n                                <Grid item xs={12} sm={6} md={2} key={index}>\n                                    <Link href={brand[item.url]}\n                                        className={`${classes.marketOptionLink} \n                                    ${_.get(brand, 'brand.shops').find(b => !b.disconnected && item.val === b.marketplace) ? 'connected' : ''}`}>\n                                        <Button\n                                            className={classes.marketOption}\n                                            key={index}>\n                                            <img src={MARKET_PLACE[item.val].image} />\n                                            <p>{item.name}</p>\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            ))}\n                            <Grid item xs={12} sm={6} md={2}>\n                                <Link className={classes.marketOptionLink}\n                                    onClick={() => {\n                                        setIsCreateSheet(true)\n                                        setUploadExternalDialog(true)\n                                    }}>\n                                    <Button\n                                        className={classes.marketOption}\n                                        key=\"google-sheet\">\n                                        <img src={toAbsoluteUrl('/media/logos/google-sheet.svg')} />\n                                        <p>Google sheets</p>\n                                    </Button>\n                                </Link>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={2}>\n                                <Link className={classes.marketOptionLink} onClick={() => {\n                                    setIsCreateSheet(false)\n                                    setUploadExternalDialog(true)\n                                }}>\n                                    <Button\n                                        className={classes.marketOption}\n                                        key=\"upload\">\n                                        <Icon style={{\n                                            fontSize: 32,\n                                            color: '#014B68'\n                                        }}>backup</Icon>\n                                        <p>Upload</p>\n                                    </Button>\n                                </Link>\n\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                </div>\n            </div>\n            <Dialog\n                open={uploadExternalDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                fullWidth={true}\n                onClose={() => setUploadExternalDialog(false)}\n                maxWidth=\"sm\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateSource}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Source\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    helperText={touched.name && errors.name}\n                                                    error={Boolean(touched.name && errors.name)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setUploadExternalDialog(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                className={classes.googleSheetDialog}\n                open={googleSheetFileDialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={() => setGoogleSheetFileDialog(false)}\n                maxWidth=\"xl\"\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogContent>\n                    <GoogleDriveFilesTracking\n                        onClose={() => setGoogleSheetFileDialog(false)}\n                        speadSheetList={speadSheetList}\n                        shop={shop}\n                        source={source}\n                        brandId={brandId} />\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={connectSendoPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setConnectSendoPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    shop_key: '',\n                                    secret_key: ''\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.shop_key) {\n                                        errors.shop_key = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    if (!values.secret_key) {\n                                        errors.secret_key = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleConnectSendo}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel className=\"input-base__label\">Shop key</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Shop key\"\n                                                    name=\"shop_key\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.shop_key}\n                                                    helperText={touched.shop_key && errors.shop_key}\n                                                    error={Boolean(touched.shop_key && errors.shop_key)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel className=\"input-base__label\">Secret key</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Secret key\"\n                                                    name=\"secret_key\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.secret_key}\n                                                    helperText={touched.secret_key && errors.secret_key}\n                                                    error={Boolean(touched.secret_key && errors.secret_key)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setConnectSendoPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n\n    );\n}\nexport default injectIntl(ConnectMarket)","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Prompt } from \"react-router-dom\";\nimport {\n    FormGroup, TextField, InputLabel, Link, Avatar,\n    Button, Icon, Dialog, DialogContent, IconButton,\n    CircularProgress\n} from '@material-ui/core';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\";\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { changePassword } from \"../../crud/auth.crud\"\nimport _ from \"lodash\"\nimport clsx from \"clsx\"\nimport CropImageForm from \"./components/CropImageForm\"\nimport { editUser, getRoleList } from \"../../crud/auth.crud\"\nimport { useDispatch } from \"react-redux\";\nimport { actionTypes as authAction } from \"../../store/ducks/auth.duck\"\nimport { ROLE_DETAIL } from \"../../constant/role\"\n\nProfile.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: '#fbfbfb',\n        padding: '80px 50px',\n        '& .input-base': {\n            marginBottom: 20,\n            '& .MuiFormLabel-root': {\n                color: '#014B68'\n            }\n        },\n    },\n    userInfo: {\n        marginRight: 30,\n        textAlign: 'center',\n        minWidth: 250\n    },\n    commomInfor: {\n        width: 420,\n        padding: '0 15px',\n    },\n    userLogo: {\n        display: 'inline-block',\n        position: 'relative',\n    },\n    userLogoImg: {\n        width: '162px',\n        height: '162px',\n        background: '#bdbdbd'\n    },\n    avatar: {\n        padding: '0 15px',\n    },\n    avatarContainer: {\n        width: 300,\n        textAlign: 'center'\n    },\n    formAction: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        '& button': {\n            width: 'calc(50% - 7px)'\n        }\n    },\n    previewAvatar: {\n        width: 125,\n        height: 125,\n        borderRadius: 48,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: '0 auto 30px auto',\n        '& .material-icons': {\n            color: 'white',\n            fontSize: 80\n        }\n    },\n    uploadBtn: {\n        width: 160,\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: '0 auto',\n        color: '#014B68',\n        border: '1px solid #014B68',\n        padding: 8,\n        borderRadius: '30px',\n        '& .material-icons': {\n            marginRight: 5\n        }\n    },\n    resetPasswordForm: {\n        padding: '30px',\n        width: 600,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    resetPasswordFormContainer: {\n        width: 350,\n        margin: '0 auto'\n    },\n    actionBtn: {\n        height: '44px',\n        borderRadius: '50%',\n        backgroundColor: '#f3f3f3',\n        minWidth: '44px',\n        margin: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer'\n    },\n    uploadAction: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        transform: 'translateX(50%)'\n    },\n    formLegend: {\n        color: '#014B68',\n        fontSize: 20,\n        marginBottom: 15\n    },\n    permissionList: {\n        marginTop: 20,\n        padding: 0,\n        '& li': {\n            listStyle: 'none',\n            marginBottom: 10,\n            color: '#6b6c6f',\n            display: 'flex',\n            alignItems: 'center',\n            '& .material-icons': {\n                marginRight: 5\n            },\n            '&:before': {\n                content: '✓',\n                display: 'block'\n            }\n        }\n    },\n})\n\nfunction Profile(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const [openChangePasswordDialog, setChangePasswordDialog] = useState(false)\n    const [openUploadDataDialog, setUploadDataDialog] = useState(false)\n    const [tempImageURL, setTempImageURL] = useState('')\n    const [userDefaultLogo, setUserDefaultLogo] = useState(_.get(props, 'auth.user.avatar'))\n    const [user, setUser] = useState(_.get(props, 'auth.user') || {})\n    const [changePasswordLoading, setChangePasswordLoading] = useState(false)\n    const [file, setFile] = useState('')\n    const [uploadLogoLoading, setUploadLogoLoading] = useState(false)\n    const [logoErr, setLogoErr] = useState('')\n    const [pwConfig, setPWConfig] = useState({\n        oldPW: false,\n        newPW: false,\n        confirmPW: false\n    })\n\n    const dispatch = useDispatch();\n\n    const handleCloseUploadDialog = () => {\n        setFile('')\n        setUploadDataDialog(false)\n        setLogoErr('')\n    }\n\n    useEffect(() => {\n        if (!_.get(props, 'auth.roles')) {\n            getRoleList()\n                .then(res => {\n                    dispatch({\n                        type: authAction.SetRoles,\n                        payload: _.get(res, 'data.result.roles')\n                    })\n                    dispatch({\n                        type: authAction.SetPermissions,\n                        payload: _.get(res, 'data.result.permissions')\n                    })\n                })\n        }\n\n    }, [])\n\n    const uploadImage = e => {\n        let avatar = e.target.files[0]\n        if (avatar && avatar.type) {\n            if (avatar.type.includes('image')) {\n                setUploadDataDialog(true)\n                setLogoErr('')\n                setTempImageURL((window.URL\n                    ? URL\n                    : window.webkitURL\n                ).createObjectURL(avatar))\n            }\n            else {\n                setLogoErr('Wrong image format. Please select another file')\n            }\n        }\n    }\n\n    const handleEditUserAvatar = (img) => {\n        setUploadLogoLoading(true)\n        setLogoErr('')\n        setTimeout(() => {\n            editUser(_.get(img, 'file'))\n                .then(res => {\n                    setUploadLogoLoading(false)\n                    setUploadDataDialog(false)\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setLogoErr(errMsg)\n                    }\n                    else {\n                        const user = _.get(props, 'auth.user')\n                        user.avatar = _.get(img, 'url')\n                        dispatch({\n                            type: authAction.UpdateUser,\n                            payload: user\n                        })\n                        setUploadDataDialog(false)\n                        setUserDefaultLogo(user.avatar)\n                    }\n                })\n                .catch(err => {\n                    setLogoErr('Network error. Please try again')\n                    setUploadLogoLoading(false)\n                    setUploadDataDialog(false)\n                })\n        }, 500)\n    }\n\n    const handleChangePassword = (values, { setStatus, setSubmitting }) => {\n        setChangePasswordLoading(true)\n        setSubmitting(true);\n        setTimeout(() => {\n            changePassword(\n                values.oldpassword,\n                values.password\n            )\n                .then(res => {\n                    setChangePasswordLoading(false)\n                    setSubmitting(false);\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setChangePasswordDialog(false)\n                    }\n                })\n                .catch(() => {\n                    setChangePasswordLoading(false)\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    return (\n        <div className={classes.root}>\n            <form style={{\n                display: 'flex',\n                justifyContent: 'center'\n            }}>\n                <div className={classes.userInfo}>\n                    <div className={classes.userLogo}>\n                        <Avatar className={classes.userLogoImg} src={userDefaultLogo}></Avatar>\n                        <div className={classes.uploadAction}>\n                            <label htmlFor=\"file-input\" className={classes.actionBtn}><Icon>publish</Icon></label>\n                        </div>\n                    </div>\n                    {logoErr && <div role=\"alert\" style={{\n                        width: 230,\n                        margin: '20px 0'\n                    }} className=\"alert alert-danger\">\n                        <div className=\"alert-text\">{logoErr}</div>\n                    </div>}\n                    <TextField\n                        id=\"file-input\"\n                        type=\"file\"\n                        style={{\n                            display: 'none'\n                        }}\n                        value={file}\n                        onChange={uploadImage}\n                    />\n                </div>\n                <div className={classes.commomInfor}>\n                    <FormGroup className=\"input-base\">\n                        <InputLabel>Your Name</InputLabel>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"email\"\n                            placeholder=\"Your name\"\n                            value=\"Ecomeasy\"\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"input-base\">\n                        <InputLabel>Password</InputLabel>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Your password\"\n                            value=\"123456\"\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                            style={{\n                                opacity: 0.5,\n                                pointerEvents: 'none'\n                            }}\n                        />\n                        <Link className=\"input-base__action\" onClick={() => setChangePasswordDialog(true)}>Change</Link>\n                    </FormGroup>\n                    <FormGroup className=\"input-base\">\n                        <InputLabel>Your email</InputLabel>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={user.email}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                            style={{\n                                opacity: 0.5,\n                                pointerEvents: 'none'\n                            }}\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"input-base\">\n                        <InputLabel>Your role</InputLabel>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={user.role}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                            style={{\n                                opacity: 0.5,\n                                pointerEvents: 'none'\n                            }}\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"input-base\">\n                        <InputLabel>Your permissions:</InputLabel>\n                        <ul className={classes.permissionList}>\n                            {user && user.permissions && user.permissions.length > 0 && user.permissions.map((item, index) => (\n                                <li key={index}>\n                                    <Icon>check</Icon>{_.get(_.get(props, 'auth.permissions')[item], 'name.en')}\n                                </li>\n                            ))}\n\n                        </ul>\n                    </FormGroup>\n                    <div className={classes.formAction}>\n                        <Button className=\"btn-base btn-base--cancel btn-base--lg\">Cancel</Button>\n                        <Button className=\"btn-base btn-base--success btn-base--lg\">Save</Button>\n                    </div>\n                </div>\n            </form>\n            <Dialog\n                open={openUploadDataDialog}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={handleCloseUploadDialog}\n            >\n                <DialogContent>\n                    <CropImageForm\n                        loading={uploadLogoLoading}\n                        src={tempImageURL}\n                        onCancel={handleCloseUploadDialog}\n                        onSave={handleEditUserAvatar} />\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={openChangePasswordDialog}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setChangePasswordDialog(false)}\n            >\n                <DialogContent>\n                    <div className={classes.resetPasswordForm}>\n                        <div className={classes.formLegend}>\n                            <Icon fontSize=\"large\">lock</Icon>\n                            <p>Reset your password</p>\n                        </div>\n                        <div className={classes.resetPasswordFormContainer}>\n                            <Formik\n                                initialValues={{\n                                    oldpassword: '',\n                                    password: '',\n                                    confirmPassword: ''\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.oldpassword) {\n                                        errors.oldpassword = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    if (!values.confirmPassword) {\n                                        errors.confirmPassword = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    else if (values.password !== values.confirmPassword) {\n                                        errors.confirmPassword =\n                                            \"Password and Confirm Password didn't match.\";\n                                    }\n\n                                    if (!values.password) {\n                                        errors.password = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleChangePassword}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base input-base--hasIcon\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type={pwConfig.oldPW ? 'text' : 'password'}\n                                                    placeholder=\"Current password\"\n                                                    name=\"oldpassword\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.oldpassword}\n                                                    helperText={touched.oldpassword && errors.oldpassword}\n                                                    error={Boolean(touched.oldpassword && errors.oldpassword)}\n                                                    InputProps={{\n                                                        startAdornment: <VpnKeyIcon />,\n                                                        endAdornment: <IconButton\n                                                            onClick={() => {\n                                                                setPWConfig({\n                                                                    ...pwConfig,\n                                                                    oldPW: !pwConfig.oldPW\n                                                                })\n                                                            }}> {pwConfig.oldPW ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                                    }}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base input-base--hasIcon\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type={pwConfig.newPW ? 'text' : 'password'}\n                                                    placeholder=\"Your password\"\n                                                    name=\"password\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.password}\n                                                    helperText={touched.password && errors.password}\n                                                    error={Boolean(touched.password && errors.password)}\n                                                    InputProps={{\n                                                        startAdornment: <VpnKeyIcon />,\n                                                        endAdornment: <IconButton\n                                                            onClick={() => {\n                                                                setPWConfig({\n                                                                    ...pwConfig,\n                                                                    newPW: !pwConfig.newPW\n                                                                })\n                                                            }}> {pwConfig.newPW ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                                    }}\n                                                /></FormGroup>\n\n                                            <FormGroup className=\"input-base input-base--hasIcon\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type={pwConfig.confirmPW ? 'text' : 'password'}\n                                                    name=\"confirmPassword\"\n                                                    placeholder=\"Confirm password\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.confirmPassword}\n                                                    helperText={touched.confirmPassword && errors.confirmPassword}\n                                                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                                                    InputProps={{\n                                                        startAdornment: <VpnKeyIcon />,\n                                                        endAdornment: <IconButton\n                                                            onClick={() => {\n                                                                setPWConfig({\n                                                                    ...pwConfig,\n                                                                    confirmPW: !pwConfig.confirmPW\n                                                                })\n                                                            }}> {pwConfig.confirmPW ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                                    }}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": changePasswordLoading\n                                                    }\n                                                )}`}>Reset Password</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setChangePasswordDialog(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    auth: store.auth\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(Profile)\n);","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\nimport { getLog } from \"../../crud/auth.crud\"\nimport _ from \"lodash\"\n\nActivityLog.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    table: {\n\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 30px 0'\n    },\n})\n\nfunction ActivityLog(props) {\n    const classes = useStyles()\n    const columns = [\n        {\n            label: 'Activity',\n            property: 'activity',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Source',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Trạng thái',\n            property: 'markets',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày',\n            property: 'users',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n    const [logs, setLogs] = useState([])\n\n    useEffect(() => {\n        getLog()\n            .then(res => {\n                setLogs(_.get(res, 'data.result'))\n            })\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <p className={classes.headerTitle}>Nhật ký hoạt động</p>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n    );\n}\n\nexport default ActivityLog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Table, TableHead, TableCell, TableBody, CircularProgress, TableRow } from '@material-ui/core';\nimport { getShops } from \"../../crud/statitics.crud\"\nimport _ from \"lodash\"\n\nShopList.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 30px 0'\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n})\n\nfunction ShopList(props) {\n    const classes = useStyles()\n    const [errorMessage, setErrorMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [shops, setShops] = useState([])\n\n    const columns = [\n        {\n            label: 'Tên shop',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Marketplace',\n            property: 'marketplace',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Connected shop',\n            property: 'connectedshop',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Source detail',\n            property: 'sourcedetail',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'spreadSheet',\n            property: 'spreadSheet',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Sync date',\n            property: 'syncdate',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Brand ID',\n            property: 'brandId',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        setLoading(true)\n        setShops([])\n        setErrorMessage('')\n        getShops()\n            .then(res => {\n                setLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setErrorMessage(errMsg)\n                    setShops([])\n                }\n                else {\n                    setShops(_.get(res, 'data.result'))\n                    setErrorMessage('')\n                }\n            })\n            .catch(err => {\n                setErrorMessage(err)\n            })\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <p className={classes.headerTitle}>Danh sách shops</p>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {shops && shops.map((row, index) => (\n                            <TableRow key={index}>\n                                <TableCell>{row.name}</TableCell>\n                                <TableCell>{row.marketplace}</TableCell>\n                                <TableCell><span style={{\n                                    wordBreak: 'break-all'\n                                }}>{row.connectedShop && JSON.stringify(row.connectedShop)}</span></TableCell>\n                                <TableCell><span style={{\n                                    wordBreak: 'break-all'\n                                }}>{row.sourceDetail && JSON.stringify(row.sourceDetail)}</span></TableCell>\n                                <TableCell><span style={{\n                                    wordBreak: 'break-all'\n                                }}>{row.spreadSheet}</span></TableCell>\n                                <TableCell>{row.syncDate}</TableCell>\n                                <TableCell>{row.brandId}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ShopList;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStyles } from \"./statistics/OrderList\"\nimport {\n    Table, TableHead, TableCell, TableBody, FormGroup, TextField, Link, FormControlLabel, Checkbox,\n    CircularProgress, TableRow, Button, Dialog, DialogContent, InputLabel, Select, Menu, MenuItem\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport { getUsers } from \"../../crud/statitics.crud\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport clsx from \"clsx\"\nimport { getRoleList, createRole } from \"../../crud/auth.crud\"\nimport { getUserList } from \"../../crud/statitics.crud\"\nimport { actionTypes as authAction } from \"../../store/ducks/auth.duck\"\nimport { useDispatch } from \"react-redux\";\n\nPermissionList.propTypes = {\n\n};\n\nfunction PermissionList(props) {\n    let permissions = { ..._.get(props, 'auth.permissions') }\n    const classes = useStyles()\n    const [errorMessage, setErrorMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [users, setUsers] = useState([])\n    const [emails, setEmails] = useState([])\n    const [email, setEmail] = useState([])\n    const [createRolePopup, setCreateRolePopup] = useState(false)\n    const [createRoleloading, setCreateRoleLoading] = useState(false)\n    const { intl } = props;\n    const dispatch = useDispatch();\n    const [selectedPermissons, setSelectedPermissons] = useState([])\n\n    const columns = [\n        {\n            label: 'Email',\n            property: 'email',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Role',\n            property: 'role',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Permissions',\n            property: 'permissions',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Scope',\n            property: 'scope',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày bắt đầu',\n            property: 'start',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày kết thúc',\n            property: 'end',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        getUserList()\n            .then(res => {\n                setLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setErrorMessage(errMsg)\n                    setEmails([])\n                }\n                else {\n                    let emailList = _.get(res, 'data.result')\n                    emailList.sort((a, b) => a.email.localeCompare(b.email))\n                    setEmails(emailList)\n                    setEmail(_.get(emailList, '[0].email'))\n                    setErrorMessage('')\n                }\n            })\n            .catch(err => {\n                setErrorMessage(err)\n            })\n    }, [])\n\n    useEffect(() => {\n        getRoleList()\n            .then(res => {\n                dispatch({\n                    type: authAction.SetRoles,\n                    payload: _.get(res, 'data.result.roles')\n                })\n                dispatch({\n                    type: authAction.SetPermissions,\n                    payload: _.get(res, 'data.result.permissions')\n                })\n            })\n    }, [])\n\n    useEffect(() => {\n        setLoading(true)\n        setUsers([])\n        setErrorMessage('')\n        getUsers()\n            .then(res => {\n                setLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setErrorMessage(errMsg)\n                    setUsers([])\n                }\n                else {\n                    let result = []\n                    _.get(res, 'data.result').forEach(item => {\n                        result = [...result, ...item.users]\n                    })\n                    setUsers(result)\n                    setErrorMessage('')\n                }\n            })\n            .catch(err => {\n                setErrorMessage(err)\n            })\n    }, [])\n\n    const closeCreateRolePopup = () => {\n        setCreateRolePopup(false)\n        Object.keys(permissions).forEach(key => {\n            if (permissions[key].ischecked) {\n                delete permissions[key].ischecked\n            }\n        })\n    }\n\n    const handleSelectPermissions = (e, p) => {\n        const temp = [...selectedPermissons]\n        if (temp.find(item => item === p)) {\n            temp.splice(temp.indexOf(p), 1)\n        }\n        else {\n            temp.push(p)\n        }\n        setSelectedPermissons(temp)\n    }\n\n    const handleSubmitCreateRoleForm = (values, { setStatus, setSubmitting }) => {\n\n        setSubmitting(false)\n        setStatus('')\n        if (selectedPermissons.length > 0) {\n            setCreateRoleLoading(true)\n            setSubmitting(true);\n            setTimeout(() => {\n                createRole(\n                    values.role,\n                    email,\n                    selectedPermissons,\n                )\n                    .then(res => {\n                        setCreateRoleLoading(false)\n                        setSubmitting(false);\n                        const errMsg = _.get(res, 'data.errMsg')\n                        if (errMsg) {\n                            setStatus(errMsg)\n                        }\n                        else {\n                            setCreateRolePopup(false)\n                        }\n                    })\n                    .catch(() => {\n                        setCreateRoleLoading(false)\n                        setSubmitting(false);\n                        setStatus('Some thing went wrong');\n                    });\n            }, 1000)\n        }\n        else {\n            setStatus('Please select permissions')\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <p className={classes.headerTitle}>Danh sách permissions</p>\n            <div className={classes.filterSection}>\n                <Button\n                    onClick={() => setCreateRolePopup(true)}\n                    className=\"btn-base btn-base--success\">Create Role</Button>\n            </div>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableCell></TableCell>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {users && users.map((row, index) => {\n                            return (\n                                <TableRow key={index}>\n                                    <TableCell style={{\n                                        width: 80\n                                    }}>{\n                                            !row.end || new Date(row.end) > new Date() ? <p className=\"chip chip--success\">Active</p> : <p className=\"chip chip--danger\">Expired</p>\n                                        }</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.permissions && row.permissions.length > 0 && row.permissions.map((item, sindex) => (\n                                        <p key={sindex} style={{\n                                            margin: 0\n                                        }}>{item}</p>\n                                    ))}</TableCell>\n                                    <TableCell>{row.scope}</TableCell>\n                                    <TableCell>{row.start}</TableCell>\n                                    <TableCell>{row.end}</TableCell>\n                                </TableRow>\n                            )\n                        })\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createRolePopup}\n                keepMounted\n                maxWidth=\"md\"\n            >\n                <DialogContent>\n                    <div className={classes.createRoleForm}>\n                        <div className={classes.formLegend}>\n                            <p>Create role</p>\n                        </div>\n                        <div>\n                            <Formik\n                                initialValues={{\n                                    role: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.role) {\n                                        errors.role = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleSubmitCreateRoleForm}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    name=\"role\"\n                                                    placeholder=\"Role name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.role}\n                                                    helperText={touched.role && errors.role}\n                                                    error={Boolean(touched.role && errors.role)}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                margin: '10px 0'\n                                            }}>\n                                                <InputLabel\n                                                    style={{\n                                                        textAlign: 'left'\n                                                    }}\n                                                >Email</InputLabel>\n                                                <Select\n                                                    value={email}\n                                                    onChange={(e) => setEmail(e.target.value)}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }} >\n                                                    {emails && emails.map((item, index) => (\n                                                        <MenuItem value={item.email} key={index}>\n                                                            {item.email}\n                                                        </MenuItem>\n                                                    ))}\n\n                                                </Select>\n                                            </FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"checkbox\" style={{\n                                                margin: '20px 0'\n                                            }}>\n                                                <InputLabel\n                                                    style={{\n                                                        textAlign: 'left'\n                                                    }}\n                                                >Permissions</InputLabel>\n                                                <ul style={{\n                                                    textAlign: 'left',\n                                                    padding: 0,\n                                                    listStyle: 'none',\n                                                    marginTop: 10\n                                                }} >\n                                                    {Object.keys(permissions).map((p, index) => (\n                                                        <li><FormControlLabel\n                                                            key={index}\n                                                            control={\n                                                                <Checkbox\n                                                                    checked={selectedPermissons.find(s => s === p)}\n                                                                    onChange={(e) => handleSelectPermissions(e, p)}\n                                                                    name=\"checkedB\"\n                                                                    color=\"primary\"\n                                                                />\n                                                            }\n                                                            label={permissions[p].name.en}\n                                                        /></li>\n                                                    ))}\n                                                </ul>\n                                            </FormGroup>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": createRoleloading\n                                                    }\n                                                )}`}>Create Role</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    closeCreateRolePopup()\n                                                }}>Cancel</Link>\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    auth: store.auth\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(PermissionList)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableCell, TableBody, Dialog, DialogContent, Icon, Link, Input, Checkbox, ListItemText,\n    CircularProgress, TableRow, Button, FormGroup, TextField, InputLabel, Select, MenuItem\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport { getUserList } from \"../../crud/statitics.crud\"\nimport { getRoleList, addAdmin } from \"../../crud/auth.crud\"\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes as authAction } from \"../../store/ducks/auth.duck\"\n\n\nUserList.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& .Mui-selected': {\n            backgroundColor: '#FFF !important'\n        }\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 30px 0'\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    addRoleForm: {\n        padding: '30px',\n        width: 600,\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    addRoleFormContainer: {\n        width: 350,\n        margin: '0 auto'\n    },\n    formLegend: {\n        color: '#014B68',\n        fontSize: 20,\n        marginBottom: 30,\n        textAlign: 'center'\n    },\n})\n\nfunction UserList(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [errorMessage, setErrorMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [users, setUsers] = useState([])\n    const [addRoleDialog, setAddRoleDialog] = useState(false)\n    const [selectedRole, setSelectedRole] = useState('brandAdmin')\n    const [selectedBrands, setSelectedBrands] = useState([])\n    const [selectedEmail, setSelectedEmail] = useState([])\n    const { intl } = props;\n\n    const columns = [\n        {\n            label: 'ID',\n            property: 'id',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Email',\n            property: 'marketplace',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'created',\n            property: 'brandId',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'brandId',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        if (!_.get(props, 'auth.roles')) {\n            getRoleList()\n                .then(res => {\n                    dispatch({\n                        type: authAction.SetRoles,\n                        payload: _.get(res, 'data.result.roles')\n                    })\n                    dispatch({\n                        type: authAction.SetPermissions,\n                        payload: _.get(res, 'data.result.permissions')\n                    })\n                })\n        }\n    }, [])\n\n    useEffect(() => {\n        setLoading(true)\n        setUsers([])\n        setErrorMessage('')\n        getUserList()\n            .then(res => {\n                setLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setErrorMessage(errMsg)\n                    setUsers([])\n                }\n                else {\n                    setUsers(_.get(res, 'data.result'))\n                    setErrorMessage('')\n                }\n            })\n            .catch(err => {\n                setErrorMessage(err)\n            })\n    }, [])\n\n    const selectBrand = (e) => {\n        setSelectedBrands(e.target.value);\n    }\n\n    const handleAddRole = (values, { setStatus, setSubmitting }) => {\n        setStatus('')\n        setSubmitting(true)\n        if (selectedBrands.length > 0) {\n            let requestes = []\n            selectedBrands.forEach(item => {\n                requestes.push(addAdmin(item._id, selectedEmail, selectedRole))\n            })\n            Promise.all(requestes)\n                .then(res => {\n                    setSubmitting(false)\n                    setStatus('')\n                    setAddRoleDialog(false)\n                    setSelectedBrands([])\n                })\n                .catch(err => {\n                    setSubmitting(false)\n                    setStatus('Something went wrong')\n                })\n        }\n        else {\n            setSubmitting(false)\n            setStatus('Please select brand')\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <p className={classes.headerTitle}>Danh sách users</p>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {users && users.map((row, index) => (\n                            <TableRow key={index}>\n                                <TableCell>{row._id}</TableCell>\n                                <TableCell>{row.email}</TableCell>\n                                <TableCell>{row.created}</TableCell>\n                                <TableCell><Button\n                                    onClick={() => {\n                                        setAddRoleDialog(true)\n                                        setSelectedEmail(row.email)\n                                    }}\n                                >Add role</Button></TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={addRoleDialog}\n                keepMounted\n                maxWidth=\"md\">\n                <DialogContent>\n                    <div className={classes.addRoleForm}>\n                        <div className={classes.formLegend}>\n                            <p>Add Role</p>\n                        </div>\n                        <div className={classes.addRoleFormContainer}>\n                            <Formik\n                                initialValues={{\n                                    email: selectedEmail,\n                                }}\n                                validate={values => {\n                                    return {}\n                                }}\n                                onSubmit={handleAddRole}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup style={{\n                                                flexWrap: 'nowrap',\n                                                flexDirection: 'row',\n                                                marginBottom: 30\n                                            }} className=\"input-base input-base--hasIcon\">\n                                                <TextField\n                                                    style={{\n                                                        margin: 0\n                                                    }}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    onBlur={handleBlur}\n                                                    onChange={selectBrand}\n                                                    value={selectedEmail}\n                                                    input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\n                                                    readOnly\n                                                    InputProps={{\n                                                        startAdornment: <MailOutlineIcon />\n                                                    }}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                marginBottom: 30\n                                            }}>\n                                                <InputLabel>Brand</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-mutiple-checkbox-label\"\n                                                    id=\"demo-mutiple-checkbox\"\n                                                    multiple\n                                                    value={selectedBrands}\n                                                    onChange={selectBrand}\n                                                    input={<Input />}\n                                                    renderValue={(selected) => {\n                                                        const names = []\n                                                        _.forEach(selected, item => {\n                                                            names.push(item.name)\n                                                        })\n                                                        return names.join(', ')\n                                                    }}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n\n                                                    {_.get(props, 'brand.brandList')\n                                                        .sort((a, b) => a.name.localeCompare(b.name))\n                                                        .map((brand, index) => (\n                                                            <MenuItem key={index} value={brand}>\n                                                                <Checkbox\n                                                                    checked={typeof (selectedBrands.find(item => item._id === brand._id)) === 'object'} />\n                                                                <ListItemText primary={brand.name} />\n                                                            </MenuItem>\n                                                        ))}\n                                                </Select>\n                                            </FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                marginBottom: 15\n                                            }}>\n                                                <InputLabel>Role</InputLabel>\n                                                <Select\n                                                    onChange={e => setSelectedRole(e.target.value)}\n                                                    value={selectedRole}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n                                                    {Object.keys(_.get(props, 'auth.roles')).map((item, index) => (\n                                                        <MenuItem key={index} value={item}>{_.get(_.get(props, 'auth.roles')[item], 'lang.en')}</MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormGroup>\n                                            <Button style={{\n                                                marginTop: 15,\n                                                width: '100%'\n                                            }}\n                                                disabled={isSubmitting}\n                                                onClick={handleSubmit}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Add</Button>\n                                            <div style={{\n                                                textAlign: 'center'\n                                            }}><Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block',\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setAddRoleDialog(false)\n                                                    setSelectedBrands([])\n                                                    setSelectedRole('brandAdmin')\n                                                }}>Cancel</Link>\n                                            </div>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand,\n    auth: store.auth\n});\n\nexport default injectIntl(connect(mapStateToProps)(UserList))\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button, ButtonGroup, Grid, makeStyles, Icon, Tooltip,\n    Table, TableCell, TableHead, TableBody, TableRow, FormGroup, FormControlLabel, Checkbox, ListItemText\n} from '@material-ui/core';\nimport RevenueCard from './components/RevenueCard'\nimport DonutChart from './components/chart/DonutChart'\nimport LineChart from './components/chart/LineChart'\nimport _ from \"lodash\"\nimport { parseLocaleString, calucateGrowthRate } from \"../../helpers/helper\"\nimport RangeDatePicker from \"./components/RangeDatePicker\"\nimport moment from \"moment\"\nimport Slider from \"react-slick\";\nimport { MARKET_PLACE } from \"../../constant/marketplace\"\nimport { getBrandReport } from \"../../crud/statitics.crud\"\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { syncCommentData } from '../../crud/monitoring.crud';\nimport { groupOrderStatus, randomColor } from '../../helpers/helper'\nimport { useDispatch } from 'react-redux';\nimport { actionTypes as commonTypes } from \"../../store/ducks/common.duck\"\nimport { GROUP_BY, FILTER_OPTION } from \"./statistics/RevenueStatistics\"\nimport { ORDER_CANCELLED_ORDER } from \"../../constant/orderStatus\"\nimport { connect } from \"react-redux\";\nimport { CheckBoxOutlineBlank } from '@material-ui/icons';\n\nInternalReport.propTypes = {\n\n};\n\nexport const FILTER_CHART = {\n    SALE_CHANNEL: 'sale-channel',\n    BRAND: 'brand'\n}\n\nconst useStyles = makeStyles({\n    root: {\n        fontSize: '16px',\n        '& >div': {\n            margin: '30px 0'\n        },\n        '& .percentage-change': {\n            fontSize: '10px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        }\n    },\n    revenueSection: {\n    },\n    header: {\n        borderBottom: '1px solid #dbdbdb',\n        margin: '0 !important',\n        padding: '15px 0',\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 0 0'\n    },\n    chartContainer: {\n        position: 'relative',\n        height: '400px ',\n        backgroundColor: '#fbfbfb',\n        borderRadius: '15px',\n        boxShadow: '0 0 20px 0 rgba(51, 51, 51, 0.1)'\n    },\n    donutChart: {\n        padding: '0'\n    },\n    lineChart: {\n\n    },\n    lineChartTitle: {\n        fontSize: '20px',\n        color: '#333',\n        fontWeight: 800,\n        padding: '15px 30px',\n        margin: 0,\n        borderBottom: '1px solid #dbdbdb'\n    },\n    tableLegend: {\n        fontSize: '20px',\n        color: '#333',\n        fontWeight: 800,\n        marginBottom: 30,\n    },\n    table: {\n        color: '#000',\n        '& p': {\n            margin: 0\n        },\n        '& td': {\n            border: 'none'\n        },\n        '& tr': {\n            '&:nth-child(even)': {\n                background: 'rgba(140, 160, 179, 0.1)'\n            }\n        },\n        '& .cell-product-name': {\n            fontSize: '14px',\n        },\n        '& .cell-sku': {\n            fontSize: '14px',\n            color: '#053361',\n            '& img': {\n                width: 22,\n                marginRight: 8\n            }\n        },\n        '& .cell-price': {\n            fontSize: '16px',\n            fontWeight: 600,\n            color: '#053361'\n        },\n        '& .cell-quantity': {\n            fontSize: '14px',\n            fontStyle: 'italic',\n            color: '#000a12',\n            minWidth: '150px',\n        },\n        '& .cell-market': {\n            fontSize: '16px',\n            color: '#333',\n            border: '1px solid #979797',\n            borderRadius: '15px',\n            padding: '5px',\n            minWidth: '100px',\n            maxWidth: '200px',\n            textTransform: 'capitalize'\n        }\n    },\n    tableContainer: {\n        border: '1px solid #dbdbdb',\n        borderRadius: '4px'\n    },\n    brandFilter: {\n        listStyle: 'none',\n        padding: 0,\n        color: '#000',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& li': {\n            padding: 10,\n            display: 'flex',\n            alignItems: 'center'\n        }\n    }\n})\n\nexport const MARKET_FILTER = {\n    shopee: {\n        key: 'shopee',\n        name: 'Shopee',\n    },\n    sendo: {\n        key: 'sendo',\n        name: 'Sendo',\n    },\n    lazada: {\n        key: 'lazada',\n        name: 'Lazada',\n    },\n    others: {\n        key: 'others',\n        name: 'Others',\n    },\n    yes24: {\n        key: 'yes24',\n        name: 'Yes 24',\n    }\n}\n\nfunction InternalReport(props) {\n    const classes = useStyles()\n    const [filter, setFilter] = useState('all')\n    const startDateConfig = { hour: 0, minute: 0, second: 0, millisecond: 0 }\n    const endDateConfig = { hour: 23, minute: 59, second: 59, millisecond: 999 }\n    const search = useLocation().search\n    const dateFilter = search && search.split('&mode=')[1]\n    const queryString = search ? search.split('&mode=')[0].split('?from=')[1].split('&to=') : []\n    const [mode, setMode] = useState(dateFilter || 'year')\n    const [from, setFrom] = useState(queryString.length > 0 ? queryString[0] :\n        moment().startOf('year').set(startDateConfig).toISOString())\n    const [to, setTo] = useState(queryString.length > 0 ? queryString[1] : moment().set(endDateConfig).toISOString())\n    let history = useHistory()\n    const dispatch = useDispatch();\n    const [groupedData, setgroupedData] = useState({})\n    const [brands, setBrands] = useState({})\n    const [chartData, setChartData] = useState({})\n    const [oldGroupedData, setOldGroupedData] = useState({})\n    const [oldBrands, setOldBrands] = useState({})\n    const [revenueTooltip, setRevenueTooltip] = useState('')\n    const [chartDataByBrand, setChartDataByBrand] = useState({})\n    const [filterChart, setFilterChart] = useState(FILTER_CHART.BRAND)\n    const [brandFilter, setBrandFilter] = useState()\n    const [apiRes, setApiRes] = useState({})\n    const [oldApiRes, setOldApiRes] = useState({})\n\n    const getLostRevenue = (key, status) => {\n        const params = {}\n        params[key] = getStatus(status)\n        return _.get(groupOrderStatus(params, 'all'), 'amount.CANCELLED')\n    }\n\n    const getLostOrder = (key, status) => {\n        const params = {}\n        params[key] = getStatus(status)\n        return _.get(groupOrderStatus(params, 'all'), 'data.CANCELLED')\n    }\n\n    const getStatus = data => {\n        let status = []\n        data.forEach(item => {\n            if (brandFilter && brandFilter[item._id.brandId]) {\n                status.push({\n                    ...item,\n                    _id: _.get(item, '_id.status')\n                })\n            }\n        })\n        return status\n    }\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 1\n    };\n\n    const handleStartDateChange = e => {\n        setFrom(moment(e).set(startDateConfig).toISOString())\n    }\n\n    const handleEndDateChange = e => {\n        setTo(moment(e).set(endDateConfig).toISOString())\n    }\n\n    const getRangeDateComparison = (s, e, mode) => {\n        let startDate = ''\n        let endDate = ''\n        let range = moment(e).diff(moment(s), 'days') + 1\n        let label = ''\n        switch (mode) {\n            case FILTER_OPTION.YEAR:\n                startDate = moment(s).subtract(1, 'year').startOf('year')\n                endDate = moment(s).subtract(1, 'year').endOf('year')\n                label = `Số liệu năm ${startDate.year()}`\n                break;\n            case FILTER_OPTION.MONTH:\n                startDate = moment(s).subtract(1, 'month').startOf('month')\n                endDate = moment(s).subtract(1, 'month').endOf('month')\n                label = `Số liệu tháng ${startDate.month() + 1} - ${startDate.year()}`\n                break;\n            default:\n                startDate = moment(s).subtract(range, 'days')\n                endDate = moment(e).subtract(range, 'days')\n                label = `Số liệu từ ${startDate.format('MM-DD-YYYY')} đến ${endDate.format('MM-DD-YYYY')}`\n                break;\n        }\n        setRevenueTooltip(label)\n        startDate = startDate.set(startDateConfig).toISOString()\n        endDate = endDate.set(endDateConfig).toISOString()\n        return { startDate, endDate }\n    }\n\n    const isCheckAll = filter => {\n        let count = 0\n        Object.keys(filter).forEach(key => {\n            filter[key] && count++\n        })\n        return count === _.get(props, 'brand.brandList').length\n    }\n\n    const checkAllBrandFilter = flag => {\n        const temp = {}\n        _.get(props, 'brand.brandList').forEach(item => {\n            temp[item._id] = flag\n        })\n        setBrandFilter(temp)\n    }\n\n    useEffect(() => {\n        if (from && to) {\n            const oldRangeDate = getRangeDateComparison(from, to, mode)\n            visualizeData(from, to)\n            visualizeData(oldRangeDate.startDate, oldRangeDate.endDate, true)\n        }\n    }, [from, to])\n\n    useEffect(() => {\n        refactorData(apiRes, false)\n        refactorData(oldApiRes, true)\n    }, [brandFilter, filter])\n\n    const visualizeData = (f, t, isGetOldRevenue) => {\n        dispatch({\n            type: commonTypes.ShowBackdropLoading,\n            payload: true\n        })\n        !isGetOldRevenue && history.push(`/internal-report?from=${f}&to=${t}&mode=${mode}`)\n        getBrandReport(f, t, getGroupBy(f, t).value)\n            .then(res => {\n                try {\n                    dispatch({\n                        type: commonTypes.ShowBackdropLoading,\n                        payload: false\n                    })\n                    refactorData(_.get(res, 'data.result'), isGetOldRevenue)\n                    isGetOldRevenue ? setOldApiRes(_.get(res, 'data.result')) : setApiRes(_.get(res, 'data.result'))\n                    brandFilter || checkAllBrandFilter(true)\n                }\n                catch (err) {\n                    console.log(err)\n                }\n                finally {\n                    dispatch({\n                        type: commonTypes.ShowBackdropLoading,\n                        payload: false\n                    })\n                }\n            })\n            .catch(err => {\n                dispatch({\n                    type: commonTypes.ShowBackdropLoading,\n                    payload: false\n                })\n            })\n    }\n\n    const refactorData = (data, isGetOldRevenue) => {\n        let temp = {}\n        let tempBrand = {}\n        let tempChartData = []\n        let tempDate = []\n        let tempTotalAmount = 0\n        let revenueList = []\n        const tempChartDataByBrand = {}\n        Object.keys(data).forEach(item => {\n            if (item !== 'tiki' && (filter === 'all' || filter === item)) {\n                temp[item] = {\n                    gmv: _.get(data[item], '[0].revenueGroupBrand').filter(item => brandFilter && brandFilter[item._id]).reduce((a, b) => +a + +b.totalAmount, 0),\n                    lost_revenue: getLostRevenue(item, _.get(data[item], '[0].revenueGroupByStatusBrand')),\n                    total_order: _.get(data[item], '[0].revenueGroupBrand').filter(item => brandFilter && brandFilter[item._id]).reduce((a, b) => +a + +b.count, 0),\n                    total_lost_order: getLostOrder(item, _.get(data[item], '[0].revenueGroupByStatusBrand'))\n                }\n                if (data[item][0].revenueGroupByStatusBrand && data[item][0].revenueGroupByStatusBrand.length > 0) {\n                    data[item][0].revenueGroupByStatusBrand.forEach(subItem => {\n                        if (_.get(subItem, '_id.brandId') && brandFilter && brandFilter[_.get(subItem, '_id.brandId')]) {\n                            if (tempBrand[subItem._id.brandId]) {\n                                tempBrand[subItem._id.brandId] = {\n                                    ...tempBrand[subItem._id.brandId],\n                                    totalAmount: tempBrand[subItem._id.brandId].totalAmount + subItem.totalAmount,\n                                    count: tempBrand[subItem._id.brandId].count + subItem.count\n                                }\n                            }\n                            else {\n                                tempBrand[subItem._id.brandId] = {\n                                    totalAmount: subItem.totalAmount,\n                                    count: subItem.count,\n                                    total_lost_revenue: 0,\n                                    total_lost_order: 0\n                                }\n                            }\n                            const status = typeof (subItem._id.status) === 'object' ? subItem._id.status[0] : subItem._id.status\n                            if (ORDER_CANCELLED_ORDER[item].includes(status)) {\n                                tempBrand[subItem._id.brandId].total_lost_revenue += subItem.totalAmount\n                                tempBrand[subItem._id.brandId].total_lost_order += subItem.count\n                            }\n                        }\n                    })\n                }\n                if (data[item][0].revenueGroupByTimeBrand && data[item][0].revenueGroupByTimeBrand.length > 0) {\n                    data[item][0].revenueGroupByTimeBrand.forEach(r => {\n\n                        //get chart data by gmv\n                        const id = moment.utc(`${r._id.time.month || 1}-${r._id.time.dayOfMonth || 1}-\n                                    ${r._id.time.year}${r._id.time.hour ? ' ' + r._id.time.hour + ':00:00' : ''}`)\n                            .local()\n                        tempTotalAmount += r.totalAmount\n                        Object.assign(tempChartData, { [`${id.format(getGroupBy(from, to).format)}`]: r.totalAmount })\n                        tempDate.push(id)\n\n                        //get chart data by brand\n                        if (r._id.brandId && brandFilter && brandFilter[r._id.brandId]) {\n                            if (tempChartDataByBrand[r._id.brandId]) {\n                                let newDate = [...tempChartDataByBrand[r._id.brandId].date]\n                                let newData = { ...tempChartDataByBrand[r._id.brandId].data }\n                                let newTotalAmount = tempChartDataByBrand[r._id.brandId].totalAmount + r.totalAmount\n                                if (newData[`${id.format(getGroupBy(from, to).format)}`]) {\n                                    newData[`${id.format(getGroupBy(from, to).format)}`] += r.totalAmount\n                                }\n                                else {\n                                    newData[`${id.format(getGroupBy(from, to).format)}`] = r.totalAmount\n                                }\n                                newDate.push(id)\n                                tempChartDataByBrand[r._id.brandId] = {\n                                    ...tempChartDataByBrand[r._id.brandId],\n                                    date: newDate,\n                                    data: newData,\n                                    totalAmount: newTotalAmount\n                                }\n                            }\n                            else {\n                                tempChartDataByBrand[r._id.brandId] = {\n                                    _id: _.get(_.get(props, 'brand.brandList').find(i => i._id === r._id.brandId), 'name') || r._id.brandId,\n                                    name: _.get(_.get(props, 'brand.brandList').find(i => i._id === r._id.brandId), 'name') || r._id.brandId,\n                                    color: randomColor(),\n                                    data: {\n                                        [`${id.format(getGroupBy(from, to).format)}`]: r.totalAmount\n                                    },\n                                    date: [id],\n                                    totalAmount: r.totalAmount\n                                }\n                            }\n                        }\n\n                    })\n                }\n\n                revenueList.push({\n                    _id: item,\n                    name: item,\n                    color: MARKET_PLACE[item] ? MARKET_PLACE[item].color : randomColor(),\n                    data: tempChartData,\n                    date: tempDate,\n                    totalAmount: tempTotalAmount\n                })\n                tempDate = []\n                tempChartData = {}\n                tempTotalAmount = 0\n            }\n        })\n        temp['all'] = {\n            gmv: Object.values(temp).reduce((a, b) => +a + +b.gmv, 0),\n            lost_revenue: Object.values(temp).reduce((a, b) => +a + +b.lost_revenue, 0),\n            total_order: Object.values(temp).reduce((a, b) => +a + +b.total_order, 0),\n            total_lost_order: Object.values(temp).reduce((a, b) => +a + +b.total_lost_order, 0)\n        }\n        if (isGetOldRevenue) {\n            setOldBrands(tempBrand)\n            setOldGroupedData(temp)\n        }\n        else {\n            setgroupedData(temp)\n            console.log(tempBrand)\n            setBrands(tempBrand)\n            setChartData(revenueList)\n            const tempData = []\n            Object.keys(tempChartDataByBrand).forEach(item => {\n                tempData.push(tempChartDataByBrand[item])\n            })\n            setChartDataByBrand(tempData)\n        }\n    }\n\n    const handleChangeMode = (m) => {\n        setMode(m)\n    }\n\n    const handleChangeBrandFilter = id => {\n        const temp = { ...brandFilter }\n        temp[id] = !temp[id]\n        setBrandFilter(temp)\n    }\n\n    const handleCheckAllBrandFilter = () => {\n        checkAllBrandFilter(!isCheckAll(brandFilter))\n    }\n\n    const getGroupBy = (s, e) => {\n        const diff = moment(e).diff(moment(s), 'days')\n        if (diff < GROUP_BY.HOUR.limit) {\n            return GROUP_BY.HOUR\n        }\n        else if (diff <= GROUP_BY.DAY.limit) {\n            return GROUP_BY.DAY\n        }\n        else if (diff <= GROUP_BY.MONTH.limit) {\n            return GROUP_BY.MONTH\n        }\n        else {\n            return GROUP_BY.YEAR\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Grid container spacing={0} style={{\n                    justifyContent: 'space-between'\n                }}>\n                    <Grid item>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start'\n                        }}>\n                            <p className={classes.headerTitle}>Internal report</p>\n                        </div>\n                    </Grid>\n                    <Grid item style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end'\n                    }}>\n                        <RangeDatePicker setFrom={handleStartDateChange}\n                            setMode={handleChangeMode}\n                            setTo={handleEndDateChange}\n                            from={from ? new Date(from) : null}\n                            to={to ? new Date(to) : null} mode={mode} />\n                    </Grid>\n                </Grid>\n            </div>\n            <div className={classes.filterSection}></div>\n            <div style={{\n                margin: '50px 0'\n            }}>\n                <ul className=\"filter-tabs\">\n                    <Slider {...settings}>\n                        <li className=\"filter-tabs__item\">\n                            <div\n                                onClick={(() => setFilter('all'))}\n                                className={`filter-tabs__item__container ${filter === 'all' ? 'filter-tabs__item--selected' : ''}`}>\n                                <Icon className=\"filter-tabs__item__icon\">check_circle_icon</Icon>\n                                <div className=\"filter-tabs__item__label\">Tất cả</div>\n                            </div>\n                        </li>\n                        {Object.keys(MARKET_FILTER).map((item, index) => (\n                            item != 'all' && <li className=\"filter-tabs__item\" key={index}>\n                                <div\n                                    onClick={(() => setFilter(item))}\n                                    className={`filter-tabs__item__container ${filter === item ? 'filter-tabs__item--selected' : ''}`}>\n                                    <Icon className=\"filter-tabs__item__icon\">check_circle_icon</Icon>\n                                    <div className=\"filter-tabs__item__label\">{_.get(MARKET_PLACE[item], 'image') && <img src={_.get(MARKET_PLACE[item], 'image')} style={{\n                                        width: 25,\n                                        height: 25\n                                    }} />}{_.get(MARKET_PLACE[item], 'name')}</div>\n                                </div>\n                            </li>\n                        ))}\n                    </Slider>\n                </ul>\n            </div>\n            <div>\n                {\n                    brandFilter &&\n\n                    <ul className={classes.brandFilter}>\n                        <li>\n                            <Checkbox\n                                checked={isCheckAll(brandFilter)}\n                                onChange={handleCheckAllBrandFilter}\n                            />\n                            <ListItemText primary=\"All\" />\n                        </li>\n                        {\n                            _.get(props, 'brand.brandList').map((item, index) => {\n                                return (\n                                    <li key={index}>\n                                        <Checkbox\n                                            onChange={() => handleChangeBrandFilter(item._id)}\n                                            checked={brandFilter[item._id]} />\n                                        <ListItemText primary={item.name} />\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                }\n            </div>\n            <div className={classes.revenueSection}>\n                <Grid container spacing={5}>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"Tổng GMV\" oldRevenue={_.get(oldGroupedData[filter], 'gmv')}\n                            isPrice={true} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'gmv')}></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"Tổng NMV\" oldRevenue={_.get(oldGroupedData[filter], 'gmv') - _.get(oldGroupedData[filter], 'lost_revenue')}\n                            isPrice={true} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'gmv') - _.get(groupedData[filter], 'lost_revenue')}></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"Tổng đơn hàng\" oldRevenue={_.get(oldGroupedData[filter], 'total_order')}\n                            isPrice={false} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'total_order')}></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"Tổng giá trị đơn hủy\" oldRevenue={_.get(oldGroupedData[filter], 'lost_revenue')}\n                            isPrice={true} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'lost_revenue')}></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"Tổng đơn hủy\" oldRevenue={_.get(oldGroupedData[filter], 'total_lost_order')}\n                            isPrice={false} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'total_lost_order')}></RevenueCard>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4} xl={3}>\n                        <RevenueCard tooltip={revenueTooltip} name=\"EE Revenue\" oldRevenue={_.get(oldGroupedData[filter], 'gmv') * 0.08}\n                            isPrice={true} showIcon={false} id=\"all\" revenue={_.get(groupedData[filter], 'gmv') * 0.08}></RevenueCard>\n                    </Grid>\n                </Grid>\n            </div>\n            <div>\n                <ButtonGroup>\n                    <Button\n                        className={filterChart === FILTER_CHART.BRAND && 'active'}\n                        onClick={() => setFilterChart(FILTER_CHART.BRAND)}>Brand</Button>\n                    <Button\n                        className={filterChart === FILTER_CHART.SALE_CHANNEL && 'active'}\n                        onClick={() => setFilterChart(FILTER_CHART.SALE_CHANNEL)}>Sale channel</Button>\n\n                </ButtonGroup>\n            </div>\n            {\n                chartDataByBrand &&\n                <div className={classes.chart}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={8}>\n                            <div className={`${classes.lineChart} ${classes.chartContainer} empty-block`}>\n                                <p className={classes.lineChartTitle}>Revenue trend</p>\n                                {filterChart === FILTER_CHART.SALE_CHANNEL ? <LineChart shops={[]} groupBy={getGroupBy(from, to)}\n                                    revenueList={chartData} />\n                                    : <LineChart shops={[]} groupBy={getGroupBy(from, to)}\n                                        revenueList={chartDataByBrand} />}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <div className={`${classes.donutChart} ${classes.chartContainer} empty-block`}>\n                                {filterChart === FILTER_CHART.SALE_CHANNEL ? <DonutChart shops={[]} revenueList={chartData} />\n                                    : <DonutChart shops={[]} revenueList={chartDataByBrand} />}\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            }\n\n            <div className={classes.skuStatitics}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={`${classes.tableContainer}`}>\n                            <Table className={`${classes.table}`} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>STT</TableCell>\n                                        <TableCell>Brand</TableCell>\n                                        <TableCell>GMV</TableCell>\n                                        <TableCell>NMV</TableCell>\n                                        <TableCell>AOV</TableCell>\n                                        <TableCell>Số đơn huỷ</TableCell>\n                                        <TableCell>Doanh thu thất thoát</TableCell>\n                                        <TableCell>Tỷ lệ thất thoát</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(brands).map((key, index) => {\n                                        const newGMV = _.get(brands[key], 'totalAmount')\n                                        const oldGMV = _.get(oldBrands[key], 'totalAmount')\n                                        const gmvComparison = calucateGrowthRate(oldGMV, newGMV)\n                                        const newAOV = _.get(brands[key], 'totalAmount') / _.get(brands[key], 'count')\n                                        const oldAOV = _.get(oldBrands[key], 'totalAmount') / _.get(oldBrands[key], 'count')\n                                        const aovComparison = calucateGrowthRate(oldAOV, newAOV)\n                                        const newLostRevenue = _.get(brands[key], 'total_lost_revenue')\n                                        const oldLostRevenue = _.get(oldBrands[key], 'total_lost_revenue')\n                                        const lostRevenueComparison = calucateGrowthRate(oldLostRevenue, newLostRevenue)\n                                        const newLostOrder = _.get(brands[key], 'total_lost_order')\n                                        const oldLostOrder = _.get(oldBrands[key], 'total_lost_order')\n                                        const lostOrderComparison = calucateGrowthRate(oldLostRevenue, newLostRevenue)\n                                        const newNMV = newGMV - newLostRevenue\n                                        const oldNMV = oldGMV - oldLostRevenue\n                                        const nmvComparison = calucateGrowthRate(oldNMV, newNMV)\n                                        const newRateofLostRevenue = (newLostRevenue / newGMV) * 100\n                                        const oldRateofLostRevenue = (oldLostRevenue / oldGMV) * 100\n                                        const rateofLostRevenueComparison = calucateGrowthRate(oldRateofLostRevenue, newRateofLostRevenue)\n                                        return (<TableRow key={index}>\n                                            <TableCell>{index + 1}</TableCell>\n                                            <TableCell>{_.get(_.get(props, 'brand.brandList').find(i => i._id === key), 'name') || key}</TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newGMV)}</p>\n                                                {\n                                                    !gmvComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldGMV)}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: gmvComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(gmvComparison.percentageChange)}%</span>\n                                                            <Icon>{gmvComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newNMV)}</p>\n                                                {\n                                                    !nmvComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldNMV)}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: nmvComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(nmvComparison.percentageChange)}%</span>\n                                                            <Icon>{nmvComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newAOV)}</p>\n                                                {\n                                                    !aovComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldAOV)}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: aovComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(aovComparison.percentageChange)}%</span>\n                                                            <Icon>{aovComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newLostOrder)}</p>\n                                                {\n                                                    !lostOrderComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldLostOrder)}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: lostOrderComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(lostOrderComparison.percentageChange)}%</span>\n                                                            <Icon>{lostOrderComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newLostRevenue)}</p>\n                                                {\n                                                    !lostRevenueComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldLostRevenue)}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: lostRevenueComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(lostRevenueComparison.percentageChange)}%</span>\n                                                            <Icon>{lostRevenueComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                <p>{parseLocaleString(newRateofLostRevenue) + '%'}</p>\n                                                {\n                                                    !rateofLostRevenueComparison.isInvariant &&\n                                                    <Tooltip title={`${revenueTooltip}: \n                                                    ${parseLocaleString(oldRateofLostRevenue) + '%'}`}>\n                                                        <div className=\"percentage-change\" style={{\n                                                            color: rateofLostRevenueComparison.isIncrease ? '#91dd47' : '#ed0000'\n                                                        }}>\n                                                            <span style={{\n                                                                fontSize: 13\n                                                            }}>{parseLocaleString(rateofLostRevenueComparison.percentageChange)}%</span>\n                                                            <Icon>{rateofLostRevenueComparison.isIncrease ? 'trending_up' : 'trending_down'}</Icon>\n\n                                                        </div>\n                                                    </Tooltip>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                        )\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand\n});\n\nexport default connect(mapStateToProps)(InternalReport);","import axios from '../helpers/axios'\n\nexport const CREATE_BANK = '/api/create-bank'\nexport const BANK_LIST = '/api/bank'\nexport const CREATE_BANK_ACCOUNT = bankId => `/api/bank/${bankId}/add-account`\nexport const ADD_BALANCE = bankId => `/api/bank/${bankId}/add-balance`\nexport const GET_BALANCE = (from, to) => `/api/balance?from=${from}&to=${to}`\nexport const DELETE_ACCOUNT = bankId => `/api/bank/${bankId}/delete-account`\nexport const EDIT_BALANCE = balanceId => `/api/balance/${balanceId}/edit-balance`\nexport const GET_BALANCE_DETAIL = (accountNumber) => `/api/balance/${accountNumber}`\nexport const DELETE_BANK = bankId => `/api/bank/${bankId}/delete-bank`\nexport const DELETE_BALANCE = balanceId => `/api/balance/${balanceId}/remove-balance`\nexport const FINANCE_REPORT = '/api/finance-report'\n\nexport function sendReport(emails) {\n    const data = new FormData()\n    data.append('emails', JSON.stringify(emails))\n    return axios({\n        method: 'POST',\n        url: FINANCE_REPORT,\n        data: data\n    })\n}\n\nexport function deleteBalance(balanceId) {\n    return axios({\n        method: 'POST',\n        url: DELETE_BALANCE(balanceId)\n    })\n}\n\nexport function deletebank(bankId) {\n    return axios({\n        method: 'POST',\n        url: DELETE_BANK(bankId)\n    })\n}\n\nexport const getBalanceDetail = (accountNumber) => axios({\n    method: 'GET',\n    url: GET_BALANCE_DETAIL(accountNumber)\n})\n\nexport const editBalance = (balanceId, balance) => {\n    const data = new FormData()\n    data.append('balance', balance)\n    return axios({\n        method: 'POST',\n        url: EDIT_BALANCE(balanceId),\n        data: data\n    })\n}\n\nexport const deleteAccount = (bankId, accountNumber, accountName) => {\n    const data = new FormData()\n    data.append('accountNumber', accountNumber)\n    data.append('accountName', accountName)\n    return axios({\n        method: 'POST',\n        url: DELETE_ACCOUNT(bankId),\n        data: data\n    })\n}\n\nexport const createBank = name => {\n    const data = new FormData()\n    data.append('name', name)\n    return axios({\n        method: 'POST',\n        url: CREATE_BANK,\n        data: data\n    })\n}\n\nexport const getListBank = () => axios({\n    method: 'GET',\n    url: BANK_LIST\n})\n\nexport const getBalance = (from, to) => axios({\n    method: 'GET',\n    url: GET_BALANCE(from, to)\n})\n\nexport const createBankAccount = (bankId, accountName, accountNumber) => {\n    let data = new FormData()\n    data.append('accountName', accountName)\n    data.append('accountNumber', accountNumber)\n    return axios({\n        method: 'POST',\n        url: CREATE_BANK_ACCOUNT(bankId),\n        data: data\n    })\n}\n\nexport const addBalance = (bankName, bankId, accountName, accountNumber, balance, date) => {\n    let data = new FormData()\n    data.append('bankName', bankName)\n    data.append('accountName', accountName)\n    data.append('accountNumber', accountNumber)\n    data.append('balance', balance)\n    data.append('date', date)\n    return axios({\n        method: 'POST',\n        url: ADD_BALANCE(bankId),\n        data: data\n    })\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Button, ButtonGroup, Grid, Table, TableBody, TableHead,\n    TableCell, Icon, TableRow, Dialog, DialogContent, FormGroup, TextField\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport { parseLocaleString } from \"../../../helpers/helper\"\nimport { useParams, useHistory } from 'react-router-dom'\nimport { connect, useDispatch } from \"react-redux\"\nimport _ from \"lodash\"\nimport { editBalance, getBalanceDetail, deleteBalance } from \"../../../crud/finance.crud\"\nimport { actionTypes } from '../../../store/ducks/finance.duck'\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport moment from \"moment\"\nimport { globalStyles } from \"../../../styles/globalStyles\"\nimport ConfirmationPopup from \"../../../partials/popup/ConfirmationPopup\"\n\nBankAccountDetail.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        fontSize: '16px',\n        '& >div': {\n            margin: '30px 0'\n        },\n        '& .percentage-change': {\n            fontSize: '10px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        }\n    },\n    header: {\n        margin: '0 !important',\n        padding: '15px 0',\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 0 0'\n    },\n    ...globalStyles\n})\n\nfunction BankAccountDetail(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const columns = [\n        {\n            label: 'Ngày nhập',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày kiểm kê',\n            property: 'date',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số dư',\n            property: 'balance',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n    const dispatch = useDispatch()\n    const { bankAccountId } = useParams()\n    const [bankAcc, setBankAcc] = useState({})\n    const [selectedBalance, setSelectedBalance] = useState({})\n    const [editBalancePopup, setEditBalancePopup] = useState(false)\n    const [deleteBalancePopup, setDeleteBalancePopup] = useState(false)\n    const [deleteBalanceLoading, setDeleteBalanceLoading] = useState(false)\n\n    let history = useHistory()\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    const handleDeleteBalance = () => {\n        setDeleteBalanceLoading(true)\n        deleteBalance(selectedBalance._id)\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    fetchData()\n                    setDeleteBalanceLoading(false)\n                    setDeleteBalancePopup(false)\n                }\n            })\n    }\n\n    const handleEditBalance = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            editBalance(\n                selectedBalance._id,\n                values.balance\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        fetchData()\n                        setEditBalancePopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const fetchData = () => {\n        getBalanceDetail(bankAccountId)\n            .then(res => {\n                setBankAcc({\n                    balances: _.get(res, 'data.result') || []\n                })\n                if (_.get(res, 'data.result') && _.get(res, 'data.result').length === 0) {\n                    history.push('/finance-overview')\n                }\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <Link to=\"/finance-overview\"><Icon>arrow_back</Icon></Link>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>{`Chi tiết tài khoản: \n                ${_.get(bankAcc, 'balances[0].bankName') || ''} - \n                ${_.get(bankAcc, 'balances[0].accountName') || ''} \n                 - ${_.get(bankAcc, 'balances[0].accountNumber') || ''} `}</p>\n            </div>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            _.get(bankAcc, 'balances') && _.get(bankAcc, 'balances').map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {moment(row.created).format('MM/DD/YYYY')}\n                                    </TableCell>\n                                    <TableCell>\n                                        {moment(row.date).format('MM/DD/YYYY')}\n                                    </TableCell>\n                                    <TableCell>\n                                        {parseLocaleString(row.balance, true)}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link onClick={e => {\n                                            e.preventDefault()\n                                            setSelectedBalance(row)\n                                            setEditBalancePopup(true)\n                                        }}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }}\n                                            onClick={() => {\n                                                setSelectedBalance(row)\n                                                setDeleteBalancePopup(true)\n                                            }}>delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n            <Dialog\n                open={editBalancePopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setEditBalancePopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    balance: selectedBalance.balance,\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.balance) {\n                                        errors.balance = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleEditBalance}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base disabled\">\n                                                <TextField\n                                                    disabled={true}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    value={selectedBalance.bankName}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base disabled\">\n                                                <TextField\n                                                    disabled={true}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    value={selectedBalance.accountName}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base disabled\">\n                                                <TextField\n                                                    disabled={true}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    name=\"balance\"\n                                                    value={selectedBalance.accountNumber}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base disabled\">\n                                                <TextField\n                                                    disabled={true}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    value={moment(selectedBalance.date).format('MM/DD/YYYY')}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Balance\"\n                                                    name=\"balance\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.balance}\n                                                    helperText={touched.balance && errors.balance}\n                                                    error={Boolean(touched.balance && errors.balance)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Update Balance</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setEditBalancePopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn xóa thông tin này này?\"\n                open={deleteBalancePopup}\n                onClose={() => setDeleteBalancePopup(false)}\n                loading={deleteBalanceLoading}\n                onOK={handleDeleteBalance} />\n        </div>\n    );\n}\nconst mapStateToProps = store => ({\n    finance: store.finance\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(BankAccountDetail)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport ConfirmationPopup from \"../../../partials/popup/ConfirmationPopup\"\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport _ from \"lodash\"\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { parseLocaleString } from \"../../../helpers/helper\"\nimport { createBankAccount } from '../../../crud/finance.crud'\nimport { useParams } from \"react-router-dom\"\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes } from '../../../store/ducks/finance.duck'\nimport { deleteAccount, getListBank } from \"../../../crud/finance.crud\"\n\nBankDetail.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    table: {\n\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: 0\n    },\n    createBankForm: {\n        padding: '30px',\n        width: 500,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    createBankFormContainer: {\n        width: 350,\n        margin: '15px auto'\n    }\n})\n\nfunction BankDetail(props) {\n    const classes = useStyles()\n    const { bankId } = useParams()\n    const bank = _.get(props, 'finance.bankList') && _.get(props, 'finance.bankList').find(item => item._id === bankId)\n    const [deleteBankPopup, setDeleteBankPopup] = useState(false)\n    const [createBankAccountPopup, setCreateBankAccountPopup] = useState(false)\n    const [deleteLoading, setDeleteLoading] = useState(false)\n    const [selectedAccount, setSelectedAccount] = useState({})\n    const { intl } = props;\n    const dispatch = useDispatch();\n    const columns = [\n        {\n            label: 'Tên tài khoản',\n            property: 'bank_account_name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số tài khoản',\n            property: 'bank_account',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số dư',\n            property: 'balance',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày',\n            property: 'date',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        fetchBankList()\n    }, [])\n\n    const fetchBankList = () => {\n\n        getListBank()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    dispatch({\n                        type: actionTypes.SetBankList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                }\n            })\n    }\n\n    const handleCreateBankAccount = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            createBankAccount(\n                bankId,\n                values.bank_name,\n                values.bank_account\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        fetchBankList()\n                        setCreateBankAccountPopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const handleDelelteBankAccount = () => {\n        setDeleteLoading(true)\n        deleteAccount(bankId, selectedAccount.accountNumber, selectedAccount.accountName)\n            .then(res => {\n                setDeleteBankPopup(false)\n                setDeleteLoading(false)\n                fetchBankList()\n            })\n            .catch(err => setDeleteLoading(false))\n    }\n\n    return (\n        <div className={classes.root}>\n            <Link to=\"/bank-list\"><Icon>arrow_back</Icon></Link>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>{bank.name}</p>\n                <Button onClick={() => setCreateBankAccountPopup(true)} className=\"btn-base btn-base--success\" >Add Bank Account</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            bank.accounts.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.accountName}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.accountNumber}\n                                    </TableCell>\n                                    <TableCell>\n                                        {parseLocaleString(row.balance, true)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.created}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Icon style={{\n                                            color: '#5867dd',\n                                            cursor: 'pointer'\n                                        }} onClick={() => setCreateBankAccountPopup(true)}>edit</Icon>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }} onClick={() => {\n                                            setSelectedAccount(row)\n                                            setDeleteBankPopup(true)\n                                        }}>delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n            <Dialog\n                open={createBankAccountPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateBankAccountPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.createBankForm}>\n                        <div className={classes.createBankFormContainer}>\n                            <Formik\n                                initialValues={{\n                                    bank_name: '',\n                                    bank_account: ''\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.bank_name) {\n                                        errors.bank_name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    if (!values.bank_account) {\n                                        errors.bank_account = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateBankAccount}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Tên tài khoản\"\n                                                    name=\"bank_name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.bank_name}\n                                                    helperText={touched.bank_name && errors.bank_name}\n                                                    error={Boolean(touched.bank_name && errors.bank_name)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Số tài khoản\"\n                                                    name=\"bank_account\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.bank_account}\n                                                    helperText={touched.bank_account && errors.bank_account}\n                                                    error={Boolean(touched.bank_account && errors.bank_account)}\n                                                /></FormGroup>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Bank Account</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateBankAccountPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn xóa tài khoản không?\"\n                open={deleteBankPopup}\n                onClose={() => setDeleteBankPopup(false)}\n                onOK={handleDelelteBankAccount}\n                loading={deleteLoading}\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    finance: store.finance\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(BankDetail)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport ConfirmationPopup from \"../../../partials/popup/ConfirmationPopup\"\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport _ from \"lodash\"\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { createBank, getListBank, deletebank } from \"../../../crud/finance.crud\"\nimport moment from \"moment\"\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes } from '../../../store/ducks/finance.duck'\n\nBankManagement.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    datatable: {\n        border: '1px solid #e0e0e0'\n    },\n    table: {\n\n    },\n    tableHeader: {\n        fontWeight: 800\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: 0\n    },\n    createBankForm: {\n        padding: '30px',\n        width: 500,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    createBankFormContainer: {\n        width: 350,\n        margin: '15px auto'\n    }\n})\n\nfunction BankManagement(props) {\n    const classes = useStyles()\n    const [deleteBankPopup, setDeleteBankPopup] = useState(false)\n    const [createBankPopup, setCreateBankPopup] = useState(false)\n    const [deleteBankLoading, setDeleteBankLoading] = useState(false)\n    const [bankList, setBankList] = useState([])\n    const [selectedBank, setSelectedBank] = useState([])\n    const [fetchBankListLoading, setFetchBankListLoading] = useState(false)\n    const { intl } = props;\n    const dispatch = useDispatch();\n    const columns = [\n        {\n            label: 'Tên ngân hàng',\n            property: 'bank_name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số tài khoản',\n            property: 'bank_name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        fetchBankList()\n    }, [])\n\n    const fetchBankList = () => {\n        setFetchBankListLoading(true)\n        setBankList([])\n        getListBank()\n            .then(res => {\n                setFetchBankListLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setBankList(_.get(res, 'data.result') || [])\n                }\n                dispatch({\n                    type: actionTypes.SetBankList,\n                    payload: _.get(res, 'data.result') || []\n                })\n            })\n            .catch(err => {\n                setFetchBankListLoading(false)\n            })\n    }\n\n    const handleDeleteBank = () => {\n        setDeleteBankLoading(true)\n        deletebank(selectedBank)\n            .then(res => {\n                setDeleteBankLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    fetchBankList()\n                    setDeleteBankPopup(false)\n                }\n            })\n            .catch(err => {\n                setDeleteBankLoading(false)\n                setDeleteBankPopup(false)\n            })\n    }\n\n    const handleCreateBank = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            createBank(\n                values.name,\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        fetchBankList()\n                        setCreateBankPopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Danh sách ngân hàng</p>\n                <Button onClick={() => setCreateBankPopup(true)} className=\"btn-base btn-base--success\" >CREATE BANK</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            bankList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.accounts && row.accounts.length > 0 && row.accounts.map(item => (\n                                            <p style={{\n                                                margin: '5px 0'\n                                            }}>\n                                                {item.accountNumber}\n                                            </p>\n                                        ))}\n                                    </TableCell>\n                                    <TableCell>\n                                        {moment(row.created).format('MM/DD/YYYY')}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link to={`/bank/${row._id}`}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }} onClick={() => {\n                                            setSelectedBank(row._id)\n                                            setDeleteBankPopup(true)\n                                        }}>delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchBankListLoading || bankList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchBankListLoading && <CircularProgress />}\n                        {!fetchBankListLoading && bankList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createBankPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateBankPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.createBankForm}>\n                        <div className={classes.createBankFormContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateBank}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Bank name\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    helperText={touched.name && errors.name}\n                                                    error={Boolean(touched.name && errors.name)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Bank</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateBankPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn xóa ngân hàng không?\"\n                open={deleteBankPopup}\n                loading={deleteBankLoading}\n                onOK={handleDeleteBank}\n                onClose={() => setDeleteBankPopup(false)} />\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    finance: store.finance\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(BankManagement)\n);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nFinanceReport.propTypes = {\n\n};\n\nfunction FinanceReport(props) {\n    return (\n        <div>\n\n        </div>\n    );\n}\n\nexport default FinanceReport;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Button, FormGroup, Grid, Dialog, DialogContent, TextField, Select, InputLabel,\n    Table, TableBody, TableHead, TableCell, Icon, TableRow, Chip, MenuItem\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport { parseLocaleString } from \"../../../helpers/helper\"\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport RangeDatePicker from \"../../home/components/RangeDatePicker\"\nimport moment from \"moment\"\nimport _ from \"lodash\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { actionTypes } from '../../../store/ducks/finance.duck'\nimport { addBalance, getListBank, getBalance, sendReport } from \"../../../crud/finance.crud\"\nimport { actionTypes as commonTypes } from \"../../../store/ducks/common.duck\"\nimport { isValidEmail } from \"../../../helpers/helper\"\n\nFinanceOverview.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        fontSize: '16px',\n        '& >div': {\n            margin: '30px 0'\n        },\n        '& .percentage-change': {\n            fontSize: '10px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        }\n    },\n    header: {\n        borderBottom: '1px solid #dbdbdb',\n        margin: '0 !important',\n        padding: '15px 0',\n    },\n    headerTitle: {\n        color: '#014b68',\n        fontWeight: 800,\n        fontSize: '32px',\n        margin: '0 15px 0 0'\n    },\n    createBankForm: {\n        padding: '30px',\n        width: 500,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    createBankFormContainer: {\n        width: 350,\n        margin: '15px auto'\n    },\n    recipientsList: {\n        listStyle: 'none',\n        padding: 15,\n        marginBottom: 15,\n        border: '1px solid #dbdbdb',\n        width: 380\n    },\n    recipient: {\n        margin: 5,\n        float: 'left'\n    },\n    selectedEmail: {\n        padding: 15\n    }\n})\n\nfunction FinanceOverview(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const [createBankPopup, setCreateBankPopup] = useState(false)\n    const [financeReportPopup, setFinanceReportPopup] = useState(false)\n    const search = useLocation().search\n    const dateFilter = search && search.split('&mode=')[1]\n    const queryString = search ? search.split('&mode=')[0].split('?from=')[1].split('&to=') : []\n    const [balance, setBalance] = useState([])\n    const startDateConfig = { hour: 0, minute: 0, second: 0, millisecond: 0 }\n    const endDateConfig = { hour: 23, minute: 59, second: 59, millisecond: 999 }\n    const [mode, setMode] = useState(dateFilter || 'year')\n    const [total, setTotal] = useState(0)\n    const [from, setFrom] = useState(queryString.length > 0 ? queryString[0] :\n        moment().startOf('year').set(startDateConfig).toISOString())\n    const [to, setTo] = useState(queryString.length > 0 ? queryString[1] : moment().set(endDateConfig).toISOString())\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [recipients, setRecipients] = useState(['ngoc@ecomeasy.asia', 'nhung@ecomeasy.asia'])\n    const [recipient, setRecipient] = useState('')\n    const [recipientStatus, setRecipientStatus] = useState('')\n    const [recipientLoading, setRecipientLoading] = useState(false)\n    const handleStartDateChange = e => {\n        setFrom(moment(e).set(startDateConfig).toISOString())\n    }\n\n    const handleEndDateChange = e => {\n        setTo(moment(e).set(endDateConfig).toISOString())\n    }\n\n    const handleChangeMode = (m) => {\n        setMode(m)\n    }\n\n    useEffect(() => {\n        fetchBankList()\n    }, [])\n\n    useEffect(() => {\n        fetchBalance()\n    }, [from, to])\n\n    const fetchBankList = () => {\n        getListBank()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    dispatch({\n                        type: actionTypes.SetBankList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                }\n            })\n    }\n\n    const fetchBalance = () => {\n        dispatch({\n            type: commonTypes.ShowBackdropLoading,\n            payload: true\n        })\n        getBalance(from, to)\n            .then(res => {\n                dispatch({\n                    type: commonTypes.ShowBackdropLoading,\n                    payload: false\n                })\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n\n                    const temp = _.get(res, 'data.result') || []\n                    temp.forEach(item => {\n                        item['balance'] = item.balances && item.balances.sort((a, b) => new Date(b.date) - new Date(a.date))[0]\n                    })\n                    setTotal(temp.reduce(function (acc, obj) { return acc + obj.balance.balance; }, 0))\n                    setBalance(temp)\n\n                    dispatch({\n                        type: actionTypes.SetBalanceList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                }\n            })\n            .catch(err => {\n                dispatch({\n                    type: commonTypes.ShowBackdropLoading,\n                    payload: false\n                })\n            })\n    }\n\n    useEffect(() => {\n        if (from && to) {\n            history.push(`/finance-overview?from=${from}&to=${to}&mode=${mode}`)\n        }\n    }, [from, to])\n\n    const columns = [\n        {\n            label: 'Tên tài khoản',\n            property: 'account_author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số tài khoản',\n            property: 'bank_account',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n\n        {\n            label: 'Số dư',\n            property: 'balance',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày nhập',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Tên ngân hàng',\n            property: 'bank_name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const handleInputBalance = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        addBalance(\n            values.bank.name,\n            values.bank._id,\n            values.bank_account.accountName,\n            values.bank_account.accountNumber,\n            values.balance.trim(),\n            moment(values.date).utc().toISOString()\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(errMsg)\n                }\n                else {\n                    fetchBalance()\n                    setCreateBankPopup(false)\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n    const handleRemoveRecipients = (data) => {\n        setRecipients(recipients => recipients.filter(r => r !== data));\n    }\n    const handleInputRecipient = (event) => {\n        setRecipientStatus('')\n        if (event.keyCode === 13 && recipient) {\n            if (isValidEmail(recipient)) {\n                if (!recipients.includes(recipient)) {\n                    const temp = [...recipients]\n                    temp.push(recipient)\n                    setRecipients(temp);\n                    setRecipient('')\n                }\n                else {\n                    setRecipient('')\n                }\n            }\n            else {\n                setRecipientStatus(`${recipient} is not an email`)\n            }\n        }\n    }\n\n    const handleSendReport = () => {\n        if (recipients.length > 0) {\n            setRecipientLoading(true)\n            setRecipientStatus('')\n            sendReport(recipients)\n                .then(res => {\n                    const errMsg = _.get(res, 'data.errMsg')\n                    setRecipientLoading(false)\n                    if (!errMsg) {\n                        setFinanceReportPopup(false)\n                        setRecipients(['ngoc@ecomeasy.asia', 'nhung@ecomeasy.asia'])\n                    }\n                    else {\n                        setRecipientStatus(errMsg)\n                    }\n                })\n                .catch(err => {\n                    setRecipientLoading(false)\n                    setRecipientStatus('Something went wrong')\n                })\n        }\n        else {\n            setRecipientStatus('Empty recipients')\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Grid container spacing={0} style={{\n                    justifyContent: 'space-between'\n                }}>\n                    <Grid item>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start'\n                        }}>\n                            <p className={classes.headerTitle}>Báo cáo tài chính</p>\n                        </div>\n                    </Grid>\n                    <Grid item style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end'\n                    }}>\n                        <RangeDatePicker setFrom={handleStartDateChange}\n                            isShowDateSelection={true}\n                            setMode={handleChangeMode}\n                            setTo={handleEndDateChange}\n                            from={from ? new Date(from) : null}\n                            to={to ? new Date(to) : null} mode={mode} />\n                    </Grid>\n                </Grid>\n            </div>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '30px 0 15px 0'\n            }}>\n                <p style={{\n                    fontSize: 24,\n                    fontWeight: 800,\n                    margin: 0\n                }}>{`Tổng: ${parseLocaleString(total)}`}</p>\n                <div>\n                    <Button onClick={() => setCreateBankPopup(true)} className=\"btn-base btn-base--success\" >Input Balance</Button>\n                    <Button style={{\n                        marginLeft: 15\n                    }} onClick={() => setFinanceReportPopup(true)} className=\"btn-base btn-base--success\" >Send Report</Button>\n                </div>\n            </div>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            balance && balance.length > 0 && balance.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {_.get(row, 'balances[0].accountName')}\n                                    </TableCell>\n                                    <TableCell>\n                                        {_.get(row, 'balances[0].accountNumber')}\n                                    </TableCell>\n                                    <TableCell>\n                                        {\n                                            <p style={{\n                                                margin: '5px 0'\n                                            }}>{parseLocaleString(_.get(row, 'balance.balance'))}</p>\n\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        {\n                                            <p style={{\n                                                margin: '5px 0'\n                                            }}>{moment(row.balances && row.balances.sort((a, b) => new Date(b.date) - new Date(a.date))[0].date).format('MM/DD/YYYY')}</p>\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        {_.get(row, 'balances[0].bankName')}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link to={`account_number/${row._id}`}><Icon>edit</Icon></Link>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n            <Dialog\n                open={createBankPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateBankPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.createBankForm}>\n                        <div className={classes.createBankFormContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    bank: '',\n                                    bank_account: '',\n                                    balance: '',\n                                    date: moment().format('YYYY-MM-DD')\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.bank) {\n                                        errors.bank = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.bank_account) {\n                                        errors.bank_account = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.balance) {\n                                        errors.balance = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    else if (!Number(values.balance)) {\n                                        errors.balance = 'Invalid number';\n                                    }\n                                    if (!values.date) {\n                                        errors.date = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleInputBalance}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                marginBottom: 30,\n                                                textAlign: 'left'\n                                            }}>\n                                                <InputLabel>Ngân hàng</InputLabel>\n                                                <Select\n                                                    name=\"bank\"\n                                                    value={values.bank}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    helperText={touched.bank && errors.bank}\n                                                    error={Boolean(touched.bank && errors.bank)}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n                                                    {\n                                                        _.get(props, 'finance.bankList') && props.finance.bankList.map(item => (\n                                                            <MenuItem key={item._id} value={item}>{item.name}</MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                            </FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                marginBottom: 15,\n                                                textAlign: 'left'\n                                            }}>\n                                                <InputLabel>Số tài khoản</InputLabel>\n                                                <Select\n                                                    name=\"bank_account\"\n                                                    value={values.bank_account}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    helperText={touched.bank_account && errors.bank_account}\n                                                    error={Boolean(touched.bank_account && errors.bank_account)}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n                                                    {\n                                                        _.get(props, 'finance.bankList') && _.get(props, 'finance.bankList')\n                                                            .find(item => item._id === values.bank._id)\n                                                        && _.get(props, 'finance.bankList')\n                                                            .find(item => item._id === values.bank._id).accounts.map((item, index) => (\n                                                                <MenuItem key={index} value={item}>{item.accountNumber}</MenuItem>\n                                                            ))\n                                                    }\n                                                </Select>\n                                            </FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Balance\"\n                                                    name=\"balance\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.balance}\n                                                    helperText={touched.balance && errors.balance}\n                                                    error={Boolean(touched.banbalance && errors.balance)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    name=\"date\"\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"date\"\n                                                    placeholder=\"Date\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.date}\n                                                    helperText={touched.date && errors.date}\n                                                    error={Boolean(touched.bank && errors.date)}\n                                                /></FormGroup>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateBankPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={financeReportPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setFinanceReportPopup(false)}\n            >\n                <DialogContent>\n                    <div style={{\n                        padding: '15px 30px'\n                    }}>\n                        <div className={classes.selectedEmail}>\n                            {recipientStatus && <div style={{\n                                marginBottom: 10\n                            }} role=\"alert\" className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{recipientStatus}</div>\n                            </div>}\n                            <ul className={`${classes.recipientsList} clearfix`}>\n                                {\n                                    recipients && recipients.map(item => (\n                                        <li className={classes.recipient}>\n                                            <Chip\n                                                label={item}\n                                                onDelete={() => handleRemoveRecipients(item)}\n                                            />\n                                        </li>\n                                    ))\n                                }\n                                <li style={{\n                                    padding: '0 10px'\n                                }}><TextField style={{\n                                    width: '100%',\n                                }}\n                                    value={recipient}\n                                    onChange={e => setRecipient(e.target.value)}\n                                    id=\"recipient\"\n                                    label=\"Email\"\n                                    onKeyUp={e => handleInputRecipient(e)} /></li>\n                            </ul>\n                        </div>\n                        <div style={{\n                            textAlign: 'center'\n                        }}><Button\n                            onClick={handleSendReport}\n                            className={`btn-base btn-base--success ${clsx(\n                                {\n                                    \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": recipientLoading\n                                }\n                            )}`}>Submit</Button></div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    finance: store.finance\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(FinanceOverview)\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    FormGroup, Button, Dialog, DialogContent, TextField, Grid, Icon, InputLabel, FormControlLabel\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport _ from \"lodash\"\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { globalStyles } from '../../styles/globalStyles'\nimport { getUserList, getDepartments, createDepartments, addUserToDepartment } from '../../crud/statitics.crud'\nimport { CheckBox } from '@material-ui/icons';\n\nDeparments.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& .MuiFormControlLabel-root': {\n            margin: 0\n        }\n    },\n    departmentList: {\n        marginTop: 15\n    },\n    deparmentCard: {\n        borderRadius: '4px',\n        backgroundColor: '#f7f7f7',\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        padding: '15px 20px',\n        position: 'relative',\n        height: '100%',\n        color: '#333333'\n    },\n    addUserBtn: {\n        color: '#014b68',\n        position: 'absolute',\n        right: 15\n    },\n    deparmentName: {\n        fontSize: 18,\n        fontWeight: 700,\n        paddingRight: 60\n    },\n    ...globalStyles\n})\n\nfunction Deparments(props) {\n    const { intl } = props;\n    let classes = useStyles()\n    const [departmentPopup, setDepartmentPopup] = useState(false)\n    const [deparments, setDeparments] = useState([])\n    const [addUserPopup, setAddUserPopup] = useState(false)\n    const [users, setUsers] = useState([])\n    const [selectedDepartment, setSelectedDepartment] = useState({})\n\n    useEffect(() => {\n        fetchDepartmentList()\n        fetchUserList()\n    }, [])\n\n    const handleCreateDeparment = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            createDepartments(\n                values.name,\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setDepartmentPopup(false)\n                        fetchDepartmentList()\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const handleAddUserToDeparment = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            addUserToDepartment(\n                _.get(selectedDepartment, '_id'),\n                [\"huy@ecomeasy.asia\"],\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setAddUserPopup(false)\n                        fetchDepartmentList()\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const fetchDepartmentList = () => {\n        getDepartments()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setDeparments(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    const fetchUserList = () => {\n        getUserList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setUsers(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    const openAddUserPopup = (d) => {\n        setAddUserPopup(true)\n        setSelectedDepartment(d)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <p className={classes.headerTitle}>Quản lý phòng ban</p>\n            </div>\n            <div className={classes.leftBtnContainer}>\n                <Button onClick={() => setDepartmentPopup(true)} className=\"btn-base btn-base--success\" >Create Department</Button>\n            </div>\n            <Grid container spacing={5} className={classes.departmentList}>\n                {\n                    deparments.map((item, index) => {\n                        return (<Grid item xs={12} md={6} lg={4} xl={3} key={index}>\n                            <div className={classes.deparmentCard}>\n                                <Button\n                                    onClick={() => openAddUserPopup({\n                                        _id: _.get(item, '_id'),\n                                        name: _.get(item, 'name'),\n                                        users: _.get(item, 'users')\n                                    })}\n                                    className={classes.addUserBtn}><Icon>person_add_icon</Icon></Button>\n                                <p className={classes.deparmentName}>{_.get(item, 'name')}</p>\n                                <ul>\n                                    {_.get(item, 'users') && _.get(item, 'users').map((user, userIndex) => (\n                                        <li key={userIndex}>{user}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </Grid>)\n                    })\n                }\n            </Grid>\n            <Dialog\n                open={departmentPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setDepartmentPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateDeparment}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Tên phòng ban\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    helperText={touched.name && errors.name}\n                                                    error={Boolean(touched.name && errors.name)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setDepartmentPopup(false)\n                                                }}>Cancel</Link>\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={addUserPopup}\n                keepMounted\n                maxWidth=\"md\"\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                }}\n                                validate={values => {\n                                    const errors = {};\n                                    return errors;\n                                }}\n                                onSubmit={handleAddUserToDeparment}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Tên phòng ban\"\n                                                    name=\"name\"\n                                                    value={_.get(selectedDepartment, 'name')}\n                                                    InputProps={{\n                                                        readOnly: true,\n                                                    }}\n                                                /></FormGroup>\n                                            <FormGroup variant=\"outlined\" className=\"checkbox\" style={{\n                                                margin: '20px 0'\n                                            }}>\n                                                <InputLabel\n                                                    style={{\n                                                        textAlign: 'left'\n                                                    }}\n                                                >Users</InputLabel>\n                                                <ul style={{\n                                                    textAlign: 'left',\n                                                    padding: 0,\n                                                    listStyle: 'none',\n                                                    marginTop: 10,\n                                                    maxHeight: 250,\n                                                    overflow: 'auto'\n                                                }} >\n                                                    {users && users.length > 0 && users.map((item, index) => (\n                                                        <li key={index}><FormControlLabel\n                                                            style={{\n                                                                margin: '5px 0'\n                                                            }}\n                                                            control={\n                                                                <CheckBox\n                                                                    name=\"checkedB\"\n                                                                    color=\"primary\"\n                                                                    style={{\n                                                                        marginRight: 5\n                                                                    }}\n                                                                />\n                                                            }\n                                                            label={_.get(item, 'email')}\n                                                        /></li>\n                                                    ))}\n                                                </ul>\n                                            </FormGroup>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setAddUserPopup(false)\n                                                }}>Cancel</Link>\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default injectIntl(Deparments);","import { ErrorOutlined } from '@material-ui/icons'\nimport axios from '../helpers/axios'\nimport _ from \"lodash\"\n\nexport const CREATE_PROCESS = '/api/create-process'\nexport const CREATE_STEP = processId => `/api/process/${processId}/add-step`\nexport const GET_PROCESS_LIST = '/api/process'\nexport const EDIT_STEP = (processId, stepSlug) => `/api/process/${processId}/step/${stepSlug}/modify-step`\nexport const REQUEST_LIST = '/api/request'\nexport const STEP_ACTION_LIST = '/api/actions'\nexport const CREATE_REQUEST = (processId, stepSlug) => `/api/process/${processId}/step/${stepSlug}/`\nexport const GET_REQUEST_DETAIL = requestId => `/api/request/${requestId}`\nexport const REQUEST_SELECT = '/api/request/create'\n\nexport function selectRequest(requestName, processId, stepSlug) {\n    let formData = new FormData()\n    formData.append('requestName', requestName)\n    formData.append('processId', processId)\n    formData.append('stepSlug', stepSlug)\n    return axios({\n        method: 'POST',\n        url: REQUEST_SELECT,\n        data: formData\n    })\n\n}\n\nexport function getRequestDetail(requestId) {\n    return axios({\n        method: 'GET',\n        url: GET_REQUEST_DETAIL(requestId)\n    })\n}\n\nexport function editStep(processId, stepSlug, data, actions) {\n    let formData = new FormData()\n    formData.append('data', typeof (data) === 'object' ? JSON.stringify(data) : '[]')\n    formData.append('actions', typeof (actions) === 'object' ? JSON.stringify(actions) : '[]')\n    return axios({\n        method: 'POST',\n        url: EDIT_STEP(processId, stepSlug),\n        data: formData\n    })\n}\n\nexport function createProcess(name) {\n    let data = new FormData()\n    data.append('name', name)\n    return axios({\n        method: 'POST',\n        url: CREATE_PROCESS,\n        data: data\n    })\n}\n\nexport function getProcessList() {\n    return axios({\n        method: 'GET',\n        url: GET_PROCESS_LIST,\n    })\n}\n\nexport function createStep(processId, stepName, stepSlug, stepDes) {\n    let data = new FormData()\n    try {\n        data.append('stepName', stepName)\n        data.append('stepSlug', stepSlug)\n        data.append('stepDes', stepDes)\n    }\n    catch (err) {\n        console.log(err)\n    }\n    return axios({\n        method: 'POST',\n        url: CREATE_STEP(processId),\n        data: data\n    })\n}\n\nexport function getRequestList() {\n    return axios({\n        method: 'GET',\n        url: REQUEST_LIST\n    })\n}\n\nexport function getStepActionList() {\n    return axios({\n        method: 'GET',\n        url: STEP_ACTION_LIST\n    })\n}\n\nexport function createRequest(processId, step, stepSlug, action, requestId) {\n    let data = new FormData()\n    data.append('action', action)\n    data.append('requestId', requestId)\n    Object.keys(step).forEach(key => {\n        data.append(`${key}`, step[key])\n    })\n    _.get(step, 'inputData') && _.get(step, 'inputData').forEach(item => {\n    })\n    return axios({\n        method: 'POST',\n        url: CREATE_REQUEST(processId, stepSlug),\n        data: data\n    })\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../styles/globalStyles'\nimport _ from \"lodash\"\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Button, Table, TableHead, TableCell, Icon, FormGroup, TextField,\n    TableBody, TableRow, CircularProgress, Dialog, DialogContent\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { createProcess, getProcessList } from '../../crud/process.crud'\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes } from '../../store/ducks/process.duck'\n\nProcessSetting.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction ProcessSetting(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const [createProcessPopup, setCreateProcessPopup] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n    const dispatch = useDispatch();\n\n    const [processes, setProcesses] = useState([])\n\n    const columns = [\n        {\n            label: 'Tên qui trình',\n            property: 'process',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Số bước',\n            property: 'step',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const fetchProcessList = () => {\n        getProcessList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    dispatch({\n                        type: actionTypes.SetProcessList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                    setProcesses(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchProcessList()\n    }, [])\n\n    const handleCreateProcess = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        createProcess(\n            values.name,\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(errMsg)\n                }\n                else {\n                    fetchProcessList()\n                    setCreateProcessPopup(false)\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <p className={classes.headerTitle}>Quản lý qui trình</p>\n            </div>\n            <div className={classes.leftBtnContainer}>\n                <Button onClick={() => setCreateProcessPopup(true)} className=\"btn-base btn-base--success\" >Create Process</Button>\n            </div>\n            <div style={{\n                marginTop: 15\n            }} className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            processes && processes.length > 0 && processes.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.steps && row.steps.length}</TableCell>\n                                    <TableCell>{row.created}</TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link to={`/process/${row._id}`}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }}>delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createProcessPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateProcessPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateProcess}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <div>\n                                                <FormGroup className=\"input-base\">\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        margin=\"normal\"\n                                                        required\n                                                        fullWidth\n                                                        type=\"text\"\n                                                        placeholder=\"Tên qui trình\"\n                                                        name=\"name\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        value={values.name}\n                                                        helperText={touched.name && errors.name}\n                                                        error={Boolean(touched.name && errors.name)}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateProcessPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    process: store.process\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(ProcessSetting)\n);","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport _ from \"lodash\"\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\"\nimport { Button, TextField, FormGroup } from '@material-ui/core';\nimport { createRequest } from \"../../../crud/process.crud\"\nimport { useHistory } from \"react-router-dom\"\n\nProcessForm.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction ProcessForm(props) {\n    const classes = useStyles()\n    const [initialValues, setInitialValues] = useState({})\n    const process = _.get(props, 'process')\n    const request = _.get(props, 'request') || {}\n    const stepId = _.get(props, 'step')\n    const isPreview = _.get(props, 'isPreview')\n    let currentStep = _.get(props, 'currentStep')\n    const [step, setSteps] = useState({})\n    const [selectedAction, setSelectedAction] = useState('')\n    let history = useHistory()\n\n    useEffect(() => {\n        let temp = {}\n        if (process && process.steps && process.steps.find(item => item._id === stepId)) {\n            currentStep = process.steps.find(item => item._id === stepId)\n        }\n\n        currentStep && currentStep.inputData && currentStep.inputData.forEach((item, index) => {\n            temp[item.key] = request[item.key] || ''\n        })\n        setSteps(currentStep)\n        setInitialValues(temp)\n    }, [])\n\n    useEffect(() => {\n        setSteps(currentStep)\n    }, [currentStep])\n\n    const handleSubmitForm = (values, { setStatus, setSubmitting, resetForm }) => {\n        setSubmitting(true)\n        setStatus('')\n        try {\n            createRequest(step._processId, values, step.stepSlug, selectedAction.controller, request._id)\n                .then(res => {\n                    setSubmitting(false)\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        history.push('/requests')\n                    }\n                })\n                .catch(err => {\n                    resetForm()\n                    setStatus(err)\n                    setSubmitting(false)\n                })\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={`${classes.form} process-form`} style={{\n                padding: 0\n            }}>\n                <div className={`${classes.formContainer} process-form__container`} >\n                    <Formik\n                        enableReinitialize\n                        initialValues={initialValues}\n                        validate={values => {\n                            const errors = {};\n\n                            return errors;\n                        }}\n                        onSubmit={handleSubmitForm}\n                    >\n                        {({\n                            values,\n                            status,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            isSubmitting,\n                            resetForm\n                        }) => (\n                                <form onSubmit={handleSubmit} noValidate>\n                                    {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                        <div className=\"alert-text\">{status}</div>\n                                    </div>}\n                                    {\n                                        _.get(step, 'inputData') && _.get(step, 'inputData').map((item, index) => (\n                                            <FormGroup key={index} className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder={item.label}\n                                                    name={item.key}\n                                                    id={item.key}\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values[item.key]}\n                                                    helperText={touched[item.key] && errors[item.key]}\n                                                    error={Boolean(touched[item.key] && errors[item.key])}\n                                                /></FormGroup>\n                                        ))\n                                    }\n                                    {\n                                        _.get(step, 'actions') && _.get(step, 'actions').map((item, index) => (\n                                            <Button key={index} style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                onClick={() => setSelectedAction(item)}\n                                                type=\"submit\"\n                                                disabled={isPreview || isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\":\n                                                            isSubmitting && selectedAction.name === item.name\n                                                    }\n                                                )}`}>{item.name}</Button>\n                                        ))\n                                    }\n                                </form>\n                            )}\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProcessForm;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button, Table, TableHead, TableCell, Icon, FormGroup, TextField, InputLabel, MenuItem, Select,\n    TableBody, TableRow, CircularProgress, Dialog, DialogContent, Step, Stepper, StepLabel, Typography\n} from '@material-ui/core';\nimport { globalStyles } from \"../../styles/globalStyles\"\nimport _ from \"lodash\"\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { actionTypes } from '../../store/ducks/process.duck'\nimport { selectRequest, getProcessList, getRequestList, getRequestDetail } from '../../crud/process.crud'\nimport ProcessForm from './components/ProcessForm'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const exceptProperty = [\"_id\", \"processId\", \"stepId\", \"createBy\", \"created\"]\n\nRequestPage.propTypes = {\n\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        fontSize: 16\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    legend: {\n        marginTop: 15,\n        fontSize: 22,\n        fontWeight: 800\n    },\n    instructions: {\n        marginTop: 15,\n        fontSize: 18,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    currentForm: {\n        maxWidth: 600,\n        margin: '0 auto',\n        textAlign: 'center'\n    },\n    ...globalStyles\n}));\n\nfunction getSteps() {\n    return ['Leader gửi form cho nhân viên', 'Nhân viên hoàn thành đơn', 'Leader gửi đơn lên ban giám đốc', 'Ban giám đốc duyệt'];\n}\n\nfunction getStepContent(step) {\n    switch (step) {\n        case 0:\n            return 'Leader gửi form cho nhân viên';\n        case 1:\n            return 'Nhân viên hoàn thành đơn';\n        case 2:\n            return 'Leader gửi đơn lên ban giám đốc';\n        case 3:\n            return 'Ban giám đốc duyệt';\n        default:\n            return 'Unknown step';\n    }\n}\n\nfunction RequestPage(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [selectProcessPopup, setSelectProcessPopup] = useState(false)\n    const [initialValues, setInitialValues] = useState({})\n    const [process, setProcess] = useState('')\n    const [isShowStep, setIsShowStep] = useState(false)\n    const dispatch = useDispatch();\n    const [processes, setProcesses] = useState([])\n    const [processObj, setProcessObj] = useState([])\n    const [selectedStep, setSelectedStep] = useState('')\n    const [requestList, setRequestList] = useState([])\n    const [fetchRequestListLoading, setFetchRequestListLoading] = useState(false)\n    const [requestDetailPopup, setRequestDetailPopup] = useState(false)\n    const [selectedRequest, setSelectedRequest] = useState(false)\n    const [selectedRequestId, setSelectedRequestId] = useState(false)\n    let history = useHistory()\n\n    const columns = [\n        {\n            label: 'Request',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Process ID',\n            property: 'processId',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const steps = getSteps();\n\n    const handleNext = () => {\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSelectProcess = (values, { setStatus, setSubmitting }) => {\n        setSubmitting(true)\n        selectRequest(processObj.name, processObj._id, selectedStep.stepSlug)\n            .then(res => {\n                setSubmitting(false)\n                setSelectProcessPopup(false)\n                setIsShowStep(true)\n                setSubmitting(false)\n                const id = _.get(res, 'data.result._id')\n                id && history.push(`/request/${id}`)\n            })\n    }\n\n    const fetchProcessList = () => {\n        getProcessList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    dispatch({\n                        type: actionTypes.SetProcessList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                    setProcesses(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchProcessList()\n        fetchRequestList()\n    }, [])\n\n    const fetchRequestList = () => {\n        setFetchRequestListLoading(true)\n        getRequestList()\n            .then(res => {\n                setFetchRequestListLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setRequestList(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchRequestListLoading(false)\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <p className={classes.headerTitle}>{isShowStep ? processObj.name : 'Gửi yêu cầu'}</p>\n            </div>\n            <div className={classes.leftBtnContainer}>\n                <Button onClick={() => setSelectProcessPopup(true)} className=\"btn-base btn-base--success\" >New request</Button>\n            </div>\n            {\n                isShowStep &&\n                <div>\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div className={classes.currentForm}>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    Hoàn tất qui trình\n            </Typography>\n                            </div>\n                        ) : (\n                                <div>\n                                    <Typography className={classes.legend}>{processObj.name}</Typography>\n                                    <Typography className={classes.instructions}>{selectedStep.stepName}</Typography>\n                                    <ProcessForm process={processObj} step={selectedStep._id} />\n                                    {/* <div>\n                                        <Button style={{\n                                            width: 150\n                                        }} disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n                                 </Button>\n                                        <Button\n                                            className=\"btn-base btn-base--success btn-base--lg\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div> */}\n                                </div>\n                            )}\n                    </div>\n                </div>\n            }\n            {\n                !isShowStep &&\n                <div className={`${classes.datatable} brand-list`} style={{\n                    marginTop: 30\n                }}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            {columns.map((col, index) => (\n                                <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                    align=\"left\" key={index}>{col.label}</TableCell>\n                            ))}\n                        </TableHead>\n                        <TableBody>\n                            {\n                                requestList.map((row, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            {row.requestName}\n                                        </TableCell>\n                                        <TableCell>\n                                            {row.processId}\n                                        </TableCell>\n                                        <TableCell>\n                                            {row.created}\n                                        </TableCell>\n                                        <TableCell style={{\n                                            width: 100\n                                        }}>\n                                            <Link to={`/request/${row._id}`}><Icon>edit</Icon></Link>\n                                            <Icon style={{\n                                                marginLeft: '15px',\n                                                cursor: 'pointer'\n                                            }}>delete</Icon>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                    {\n                        (fetchRequestListLoading || requestList.length === 0) &&\n                        <div className=\"spinner-container\">\n                            {fetchRequestListLoading && <CircularProgress />}\n                            {!fetchRequestListLoading && requestList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                        </div>\n                    }\n                </div>\n            }\n            <Dialog\n                open={selectProcessPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setSelectProcessPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    return errors;\n                                }}\n                                onSubmit={handleSelectProcess}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                margin: '10px 0'\n                                            }}>\n                                                <InputLabel\n                                                    style={{\n                                                        textAlign: 'left'\n                                                    }}\n                                                >Process</InputLabel>\n                                                <Select\n                                                    value={process}\n                                                    onChange={(e) => {\n                                                        setProcess(e.target.value)\n                                                        setProcessObj(processes.find(i => i._id === e.target.value))\n                                                        setSelectedStep(processes.find(i => i._id === e.target.value).steps[0])\n                                                    }}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }} >\n                                                    {processes && processes.map((item, index) => (\n                                                        <MenuItem value={item._id} key={index}>\n                                                            {item.name}\n                                                        </MenuItem>\n                                                    ))}\n\n                                                </Select>\n                                            </FormGroup>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setSelectProcessPopup(false)\n                                                }}>Cancel</Link>\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={requestDetailPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setRequestDetailPopup(false)}\n            >\n                <DialogContent>\n                    <div style={{\n                        width: 400,\n                        padding: 30\n                    }}>\n                        {\n                            Object.keys(selectedRequest).map((item, index) => (\n                                exceptProperty.includes(item) ||\n                                <FormGroup style={{\n                                    marginBottom: 15\n                                }} key={index} className=\"input-base\">\n                                    <InputLabel>{item}</InputLabel>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        type=\"text\"\n                                        placeholder={item}\n                                        name={item}\n                                        value={selectedRequest[item]}\n                                    /></FormGroup>\n                            ))\n                        }\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default injectIntl(RequestPage);","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { globalStyles } from '../../styles/globalStyles'\nimport {\n    Button, FormGroup, TextField, Icon, InputLabel, Link, Checkbox,\n    FormControlLabel, Select, MenuItem, Dialog, DialogContent, TextareaAutosize\n} from '@material-ui/core';\nimport _ from \"lodash\"\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { getUserList } from '../../crud/statitics.crud'\nimport { useParams } from \"react-router-dom\"\nimport { connect, useDispatch } from \"react-redux\";\nimport { getProcessList, createStep, editStep, getStepActionList } from \"../../crud/process.crud\"\nimport { actionTypes } from '../../store/ducks/process.duck'\nimport ProcessForm from './components/ProcessForm'\n\nCreateProcess.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& .dropdown .MuiInputLabel-root': {\n            marginBottom: 17\n        },\n        '& .process-form': {\n            width: 'unset !important',\n            padding: '0 30px !important'\n        },\n        '& .process-form__container': {\n            width: '250px !important'\n        }\n    },\n    departmentList: {\n        marginTop: 15\n    },\n    processCard: {\n        borderRadius: '4px',\n        backgroundColor: '#f7f7f7',\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        padding: '15px 20px',\n        position: 'relative',\n        height: '100%',\n        color: '#333333'\n    },\n    processName: {\n        fontSize: 18,\n        fontWeight: 700,\n        paddingRight: 60\n    },\n    stepList: {\n        listStyle: 'none',\n        padding: 0,\n        marginTop: 30\n    },\n    stepItem: {\n        backgroundColor: '#f7f7f7',\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        padding: '30px',\n        position: 'relative',\n        margin: '30px auto',\n        display: 'flex'\n    },\n    stepOptions: {\n        border: '1px solid #CECECE',\n        marginTop: 15,\n        padding: 30,\n        position: 'relative'\n    },\n    absoluteAction: {\n        color: 'red',\n        position: 'absolute',\n        right: 15,\n        top: 15\n    },\n    stepHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: 15\n    },\n    stepTitle: {\n        color: '#333',\n        fontSize: 14,\n        fontWeight: 800,\n        margin: 0\n    },\n    stepIconButton: {\n        cursor: 'pointer'\n    },\n    stepField: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        '& >div': {\n            flex: 1,\n            margin: '0 7px'\n        },\n        marginBottom: 15\n    },\n    ...globalStyles\n})\n\nfunction CreateProcess(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const { processId } = useParams()\n    const dispatch = useDispatch()\n    const [originalStep, setOriginalStep] = useState([])\n\n    const baseField = {\n        key: '',\n        label: '',\n        type: '',\n        hint: '',\n        required: false\n    }\n    const baseNextStep = {\n        name: '',\n        description: '',\n        controller: '',\n        nextStep: '',\n    }\n    const baseStep = {\n        stepName: '',\n        stepDes: '',\n        stepSlug: '',\n        inputData: [{ ...baseField }],\n        processor: [],\n        actions: [{ ...baseNextStep }]\n    }\n    const [users, setUsers] = useState([])\n    const [addUserPopup, setAddUserPopup] = useState(false)\n    const [createStepPopup, setcreateStepPopup] = useState(false)\n    const [steps, setSteps] = useState([])\n    const [currentProcess, setCurrentProcess] = useState({})\n    const [selectedStep, setSelectedStep] = useState({})\n    const [stepActionList, setStepActionList] = useState({})\n\n    const fetchUserList = () => {\n        getUserList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setCurrentProcess(_.get(props, 'process.processList').find(item => item._id === processId))\n                    setUsers(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    const fetchStepActionList = () => {\n        getStepActionList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setStepActionList(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchUserList()\n        fetchProcessList()\n        fetchStepActionList()\n    }, [])\n\n    const fetchProcessList = () => {\n        getProcessList()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    dispatch({\n                        type: actionTypes.SetProcessList,\n                        payload: _.get(res, 'data.result') || []\n                    })\n                    const tempStep = _.get(_.get(res, 'data.result').find(item => item._id === processId), 'steps')\n                    setSteps(_.cloneDeep(tempStep))\n                }\n            })\n    }\n\n    const removeStep = (index) => {\n        let tempStep = [...steps]\n        tempStep.splice(index, 1)\n        setSteps(tempStep)\n    }\n\n    const addField = (index) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData.push({ ...baseField })\n        setSteps(tempStep)\n    }\n\n    const handleChangeStepDescription = (e, index) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].stepDes = e.target.value\n        setSteps(tempStep)\n    }\n\n    const removeField = (index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData.splice(subIndex, 1)\n        setSteps(tempStep)\n    }\n\n    const addNextStep = (index) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions.push({ ...baseNextStep })\n        setSteps(tempStep)\n    }\n\n    const removeNextStep = (index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions.splice(subIndex, 1)\n        setSteps(tempStep)\n    }\n\n    const handleAsign = () => {\n        setAddUserPopup(false)\n    }\n\n    const handleCreateStep = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        createStep(\n            processId,\n            values.name,\n            values.slug,\n            values.description,\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(errMsg)\n                }\n                else {\n                    const tempSteps = _.cloneDeep(steps)\n                    tempSteps.push(_.get(res, 'data.result'))\n                    setSteps(tempSteps)\n                    setcreateStepPopup(false)\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n    const handleChangetype = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData[subIndex].type = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleCheckRequired = (e, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData[subIndex].required = e.target.checked\n        setSteps(tempStep)\n    }\n\n    const handleSelectUser = (e, id) => {\n        let tempStep = _.cloneDeep(steps)\n        let tempProcessor = [...selectedStep.processors]\n        if (tempProcessor.includes(id)) {\n            tempProcessor.splice(tempProcessor.indexOf(id), 1)\n        }\n        else {\n            tempProcessor.push(id)\n        }\n        tempStep.find(item => item._id === selectedStep._id).processors = [...tempProcessor]\n\n        setSteps(tempStep)\n        setSelectedStep(tempStep.find(item => item._id === selectedStep._id))\n    }\n\n    const handleEditSteps = () => {\n        let editPromise = []\n        if (steps && steps.length > 0) {\n            steps.forEach(s => {\n                editPromise.push(editStep(processId, s.stepSlug, s.inputData, s.actions))\n            })\n        }\n        Promise.all(editPromise)\n            .then(res => {\n            })\n    }\n\n    const handleChangeKey = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData[subIndex].key = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeActionName = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions[subIndex].name = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeActionDescription = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions[subIndex].description = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeActionController = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions[subIndex].controller = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeActionStep = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].actions[subIndex].nextStep = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeLabel = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData[subIndex].label = event.target.value\n        setSteps(tempStep)\n    }\n\n    const handleChangeHint = (event, index, subIndex) => {\n        let tempStep = _.cloneDeep(steps)\n        tempStep[index].inputData[subIndex].hint = event.target.value\n        setSteps(tempStep)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <p className={classes.headerTitle}>{_.get(currentProcess, 'name')}</p>\n            </div>\n            <div>\n                <Button\n                    onClick={() => setcreateStepPopup(true)}\n                    style={{\n                        marginTop: 15\n                    }} className=\"btn-base btn-base--success\">Add Step</Button>\n                <ul className={classes.stepList}>\n                    {\n                        steps && steps.length > 0 && steps.map((item, index) => {\n                            return <React.Fragment>\n                                <li key={index} className={classes.stepItem}>\n                                    <div style={{\n                                        flex: 1\n                                    }}>\n                                        {\n                                            steps.length > 1 &&\n                                            <Button\n                                                className={classes.absoluteAction}\n                                                onClick={() => removeStep(index)}><Icon>delete_icon</Icon></Button>\n                                        }\n\n                                        <p style={{\n                                            color: '#333333',\n                                            fontSize: 20,\n                                            fontWeight: 800,\n                                            marginBottom: 30\n                                        }}>{`${item.stepName} (${item.stepSlug})`}</p>\n                                        <FormGroup className=\"input-base dropdown\">\n                                            <InputLabel>Description</InputLabel>\n                                            <TextareaAutosize\n                                                rowsMax={4}\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                type=\"text\"\n                                                name=\"description\"\n                                                value={item.stepDes}\n                                                onChange={e => handleChangeStepDescription(e, index)}\n                                            />\n                                        </FormGroup>\n                                        <div className={classes.stepOptions}>\n                                            <div className={classes.stepHeader}>\n                                                <p className={classes.stepTitle}>Data</p>\n                                                {<Icon\n                                                    className={classes.stepIconButton}\n                                                    style={{\n                                                        color: 'green'\n                                                    }}\n                                                    onClick={() => addField(index)}\n                                                >add_icon</Icon>\n                                                }\n                                            </div>\n                                            {\n                                                item && item.inputData && item.inputData.length > 0 && item.inputData.map((subItem, subIndex) => (\n\n                                                    <div key={subIndex} style={{\n                                                        display: 'flex'\n                                                    }} >\n                                                        <div style={{\n                                                            width: '60%',\n                                                            marginRight: 15\n                                                        }}>\n                                                            <div className={classes.stepField}>\n                                                                <button style={{\n                                                                    flex: 'unset',\n                                                                    transform: 'translateY(38px)',\n                                                                    background: 'none',\n                                                                    border: 'none'\n                                                                }}>\n                                                                    <Icon\n                                                                        className={classes.stepIconButton}\n                                                                        style={{\n                                                                            color: 'red'\n                                                                        }}\n                                                                        onClick={() => removeField(index, subIndex)}\n                                                                    >delete_icon</Icon>\n                                                                </button>\n                                                                <FormGroup className=\"input-base\">\n                                                                    <InputLabel>Key</InputLabel>\n                                                                    <TextField\n                                                                        variant=\"outlined\"\n                                                                        margin=\"normal\"\n                                                                        required\n                                                                        fullWidth\n                                                                        type=\"text\"\n                                                                        placeholder=\"Key\"\n                                                                        name=\"name\"\n                                                                        onChange={e => handleChangeKey(e, index, subIndex)}\n                                                                        value={subItem.key}\n                                                                    />\n                                                                </FormGroup>\n                                                                <FormGroup className=\"input-base\">\n                                                                    <InputLabel>Label</InputLabel>\n                                                                    <TextField\n                                                                        variant=\"outlined\"\n                                                                        margin=\"normal\"\n                                                                        required\n                                                                        fullWidth\n                                                                        type=\"text\"\n                                                                        placeholder=\"Label\"\n                                                                        name=\"name\"\n                                                                        onChange={e => handleChangeLabel(e, index, subIndex)}\n                                                                        value={subItem.label}\n                                                                    />\n                                                                </FormGroup>\n                                                            </div>\n                                                            <div className={classes.stepField}>\n                                                                <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                                    marginLeft: 40\n                                                                }}>\n                                                                    <InputLabel>Type</InputLabel>\n                                                                    <Select\n                                                                        onChange={e => handleChangetype(e, index, subIndex)}\n                                                                        value={subItem.string} MenuProps={{\n                                                                            anchorOrigin: {\n                                                                                vertical: \"bottom\",\n                                                                                horizontal: \"left\"\n                                                                            },\n                                                                            transformOrigin: {\n                                                                                vertical: \"top\",\n                                                                                horizontal: \"left\"\n                                                                            },\n                                                                            getContentAnchorEl: null\n                                                                        }}>\n                                                                        <MenuItem value=\"string\">String</MenuItem>\n                                                                        <MenuItem value=\"number\">Number</MenuItem>\n                                                                        <MenuItem value=\"date\">Date</MenuItem>\n                                                                    </Select>\n                                                                </FormGroup>\n                                                                <FormGroup variant=\"outlined\" className=\"checkbox\" style={{\n                                                                    marginTop: 25,\n                                                                }}>\n                                                                    <FormControlLabel\n                                                                        style={{\n                                                                            margin: '5px 0'\n                                                                        }}\n                                                                        control={\n                                                                            <Checkbox\n                                                                                name=\"checkedB\"\n                                                                                color=\"primary\"\n                                                                                checked={subItem.required}\n                                                                                onChange={e => handleCheckRequired(e, index, subIndex)}\n                                                                                style={{\n                                                                                    marginRight: 5\n                                                                                }}\n                                                                            />\n                                                                        }\n                                                                        label=\"Required\"\n                                                                    />\n                                                                </FormGroup>\n                                                            </div>\n                                                        </div>\n                                                        <div style={{\n                                                            width: '40%',\n                                                        }}>\n                                                            <FormGroup className=\"input-base dropdown\">\n                                                                <InputLabel>Hint</InputLabel>\n                                                                <TextareaAutosize\n                                                                    rowsMax={4}\n                                                                    variant=\"outlined\"\n                                                                    margin=\"normal\"\n                                                                    required\n                                                                    fullWidth\n                                                                    type=\"text\"\n                                                                    name=\"hint\"\n                                                                    onChange={e => handleChangeHint(e, index, subIndex)}\n                                                                />\n                                                            </FormGroup></div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                        <div className={classes.stepOptions}>\n                                            <div className={classes.stepHeader}>\n                                                <p className={classes.stepTitle}>Actions</p>\n\n                                                {<Icon\n                                                    className={classes.stepIconButton}\n                                                    style={{\n                                                        color: 'green'\n                                                    }}\n                                                    onClick={() => addNextStep(index)}\n                                                >add_icon</Icon>\n                                                }\n                                            </div>\n                                            {\n                                                item && item.actions && item.actions.length > 0 && item.actions.map((subItem, subIndex) => (\n                                                    <div key={subIndex} style={{\n                                                        display: 'flex'\n                                                    }} >\n                                                        <div style={{\n                                                            width: '60%',\n                                                            marginRight: 15\n                                                        }}>\n                                                            <div className={classes.stepField}>\n                                                                <button style={{\n                                                                    flex: 'unset',\n                                                                    transform: 'translateY(38px)',\n                                                                    background: 'none',\n                                                                    border: 'none'\n                                                                }}>\n                                                                    <Icon\n                                                                        className={classes.stepIconButton}\n                                                                        style={{\n                                                                            color: 'red'\n                                                                        }}\n                                                                        onClick={() => removeNextStep(index, subIndex)}\n                                                                    >delete_icon</Icon>\n                                                                </button>\n                                                                <FormGroup className=\"input-base\">\n                                                                    <InputLabel>Action name</InputLabel>\n                                                                    <TextField\n                                                                        variant=\"outlined\"\n                                                                        margin=\"normal\"\n                                                                        required\n                                                                        fullWidth\n                                                                        type=\"text\"\n                                                                        placeholder=\"Action name\"\n                                                                        name=\"name\"\n                                                                        value={subItem.name}\n                                                                        onChange={e => handleChangeActionName(e, index, subIndex)}\n                                                                    />\n                                                                </FormGroup>\n                                                                <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                                    marginLeft: 40\n                                                                }}>\n                                                                    <InputLabel>Controller</InputLabel>\n                                                                    <Select\n                                                                        onChange={e => handleChangeActionController(e, index, subIndex)}\n                                                                        value={subItem.controller}\n                                                                        MenuProps={{\n                                                                            anchorOrigin: {\n                                                                                vertical: \"bottom\",\n                                                                                horizontal: \"left\"\n                                                                            },\n                                                                            transformOrigin: {\n                                                                                vertical: \"top\",\n                                                                                horizontal: \"left\"\n                                                                            },\n                                                                            getContentAnchorEl: null\n                                                                        }}>\n                                                                        {\n                                                                            stepActionList && stepActionList.length > 0\n                                                                            && stepActionList.map((item, index) => (\n                                                                                <MenuItem key={index} value={item}>{item}</MenuItem>\n                                                                            ))\n                                                                        }\n\n                                                                    </Select>\n                                                                </FormGroup>\n                                                            </div>\n                                                            <div className={classes.stepField}>\n\n                                                                <div></div>\n                                                            </div>\n                                                        </div>\n                                                        <div style={{\n                                                            width: '40%',\n                                                        }}>\n                                                            <FormGroup className=\"input-base dropdown\">\n                                                                <InputLabel>Action description</InputLabel>\n                                                                <TextareaAutosize\n                                                                    onChange={e => handleChangeActionDescription(e, index, subIndex)}\n                                                                    rowsMax={4}\n                                                                    variant=\"outlined\"\n                                                                    margin=\"normal\"\n                                                                    required\n                                                                    fullWidth\n                                                                    type=\"text\"\n                                                                    name=\"name\"\n                                                                    value={subItem.description}\n                                                                />\n                                                            </FormGroup>\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                        <div className={classes.stepOptions}>\n                                            <div className={classes.stepHeader}>\n                                                <p className={classes.stepTitle}>Assignees</p>\n                                                {<Icon\n                                                    onClick={() => {\n                                                        setSelectedStep(item)\n                                                        setAddUserPopup(true)\n                                                    }}\n                                                    className={classes.stepIconButton}\n                                                    style={{\n                                                        color: 'blue'\n                                                    }}\n                                                >person_add_icon</Icon>\n                                                }\n                                            </div>\n                                            <ul style={{\n                                                marginTop: 15\n                                            }}>\n                                                {\n                                                    item && item.processors && item.processors.map((pro, proIndex) => (\n                                                        <li key={proIndex}>{users.find(u => u._id === pro).email}</li>\n                                                    ))\n                                                }\n                                            </ul>\n                                        </div>\n                                    </div>\n                                    <div style={{\n                                        paddingTop: 187\n                                    }}>\n                                        <p style={{\n                                            margin: 0,\n                                            color: '#333',\n                                            fontSize: 18,\n                                            fontWeight: 700,\n                                            marginLeft: 30\n                                        }}>Preview</p>\n                                        <ProcessForm currentStep={item} isPreview={true} step={item._id} />\n                                    </div>\n\n                                </li>\n                            </React.Fragment>\n                        })\n                    }\n                </ul>\n                <div className={classes.leftBtnContainer}>\n                    <Button onClick={handleEditSteps} className=\"btn-base btn-base--success\" >Save</Button>\n                </div>\n            </div>\n            <Dialog\n                open={addUserPopup}\n                keepMounted\n                maxWidth=\"md\"\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                }}\n                                validate={values => {\n                                    const errors = {};\n                                    return errors;\n                                }}\n                                onSubmit={handleAsign}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup variant=\"outlined\" className=\"checkbox\">\n                                                <InputLabel\n                                                    style={{\n                                                        textAlign: 'left'\n                                                    }}\n                                                >Users</InputLabel>\n                                                <ul style={{\n                                                    textAlign: 'left',\n                                                    padding: 0,\n                                                    listStyle: 'none',\n                                                    marginTop: 10,\n                                                    maxHeight: 350,\n                                                    overflow: 'auto'\n                                                }}>\n\n                                                    {addUserPopup && users && users.length > 0 && users.map((item, index) => (\n                                                        <li key={index}><FormControlLabel\n                                                            style={{\n                                                                margin: '5px 0'\n                                                            }}\n                                                            control={\n                                                                <Checkbox\n                                                                    name={item._id}\n                                                                    id={item._id}\n                                                                    color=\"primary\"\n                                                                    onChange={e => handleSelectUser(e, item._id)}\n                                                                    checked={\n                                                                        selectedStep &&\n                                                                        selectedStep.processor &&\n                                                                        selectedStep.processor.length > 0 &&\n                                                                        selectedStep.processor.some(pro => pro === item._id)}\n                                                                    style={{\n                                                                        marginRight: 5\n                                                                    }}\n                                                                />\n                                                            }\n                                                            label={_.get(item, 'email')}\n                                                        /></li>\n                                                    ))}\n                                                </ul>\n                                            </FormGroup>\n                                            {/* <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button> */}\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setAddUserPopup(false)\n                                                }}>Close</Link>\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n\n            </Dialog>\n            <Dialog\n                open={createStepPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setcreateStepPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    name: '',\n                                    slug: '',\n                                    description: ''\n                                }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    if (!values.slug) {\n                                        errors.slug = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    else if (values.slug.indexOf(' ') >= 0) {\n                                        errors.slug = 'Please remove spaces'\n                                    }\n\n                                    else if (values.slug.toLowerCase() !== values.slug) {\n                                        errors.slug = 'This field only accepts lowercase letters'\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateStep}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm,\n                                    setFieldValue\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <div style={{\n                                                textAlign: 'left'\n                                            }}>\n                                                <FormGroup className=\"input-base\">\n                                                    <InputLabel>Step name</InputLabel>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        margin=\"normal\"\n                                                        required\n                                                        fullWidth\n                                                        type=\"text\"\n                                                        name=\"name\"\n                                                        onBlur={handleBlur}\n                                                        onChange={e => {\n                                                            handleChange(e)\n                                                            setFieldValue('slug', e.target.value.split(' ').join('_').toLowerCase())\n                                                        }}\n                                                        value={values.name}\n                                                        helperText={touched.name && errors.name}\n                                                        error={Boolean(touched.name && errors.name)}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup className=\"input-base\">\n                                                    <InputLabel style={{\n                                                        marginTop: 15\n                                                    }}>Step slug</InputLabel>\n                                                    <TextField\n                                                        variant=\"outlined\"\n                                                        margin=\"normal\"\n                                                        required\n                                                        fullWidth\n                                                        type=\"text\"\n                                                        name=\"slug\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        value={values.slug}\n                                                        helperText={touched.slug && errors.slug}\n                                                        error={Boolean(touched.slug && errors.slug)}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup className=\"input-base dropdown\">\n                                                    <InputLabel style={{\n                                                        margin: '15px 0'\n                                                    }}>Description</InputLabel>\n                                                    <TextareaAutosize\n                                                        rowsMax={4}\n                                                        variant=\"outlined\"\n                                                        margin=\"normal\"\n                                                        required\n                                                        fullWidth\n                                                        value={values.description}\n                                                        type=\"text\"\n                                                        name=\"description\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setcreateStepPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div >\n    );\n}\n\nconst mapStateToProps = store => ({\n    process: store.process\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(CreateProcess)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { globalStyles } from '../../styles/globalStyles'\nimport { getRequestDetail } from '../../crud/process.crud'\nimport { useParams } from \"react-router-dom\"\nimport _ from \"lodash\"\nimport { Link } from \"react-router-dom\";\nimport { Icon } from '@material-ui/core';\nimport ProcessForm from '../home/components/ProcessForm'\n\nRequestDetail.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction RequestDetail(props) {\n    const classes = useStyles()\n    const { requestId } = useParams()\n    const [selectedRequest, setSelectedRequest] = useState(false)\n\n    useEffect(() => {\n        getRequestDetail(requestId)\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setSelectedRequest(_.get(res, 'data.result'))\n                }\n            })\n    }, [])\n    return (\n        <div className={classes.root}>\n            <Link to=\"/requests\"><Icon>arrow_back</Icon></Link>\n            <div>\n                <p className={classes.headerTitle}>{_.get(selectedRequest, 'step.stepName')}</p>\n            </div>\n            <div>\n                {selectedRequest &&\n                    <ProcessForm request={selectedRequest.request} currentStep={selectedRequest.step} step={_.get(selectedRequest, 'step._id')} />}\n            </div>\n        </div>\n    );\n}\n\nexport default RequestDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Select, MenuItem, FormControl, Icon, Link } from '@material-ui/core';\n\nProcessDashboard.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    processList: {\n        marginTop: 30\n    },\n    processCard: {\n        boxShadow: '0 0 10px rgba(51, 51, 51, 0.15)',\n        position: 'relative',\n        textAlign: 'center',\n        overflow: 'hidden',\n        borderRadius: 5,\n        height: '100%',\n        '&:hover $processCardAction': {\n            transform: 'translateY(0)'\n        }\n    },\n    processCardContainer: {\n        height: '100%'\n    },\n    processCardBanner: {\n        height: 150,\n        background: '#ffdb99',\n    },\n    processCardAction: {\n        borderTop: '1px solid #dbdbdb',\n        transition: '0.2s all linear',\n        transform: 'translateY(52px)',\n        '& a': {\n            display: 'block',\n            flex: 1,\n            padding: 15\n        }\n    },\n    ...globalStyles\n})\n\nfunction ProcessDashboard(props) {\n    const classes = useStyles()\n\n    const data = [\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n        {\n            name: 'Purchase Request',\n            description: 'Request an item to be purchase'\n        },\n    ]\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.headerLegend}>\n                <Grid container spacing={0} style={{\n                    justifyContent: 'space-between'\n                }}>\n                    <Grid item>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'flex-start'\n                        }}>\n                            <p className={classes.headerTitle}>Process Dashboard</p>\n                        </div>\n                    </Grid>\n                    <Grid item style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end'\n                    }}>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                        }}>\n                            <span>Show</span>\n                            <FormControl style={{\n                                marginLeft: 15,\n                                background: 'unset',\n                                height: 33,\n                            }} variant=\"outlined\" >\n                                <Select\n                                    value={2}\n                                    style={{\n                                        width: 200,\n                                        maxHeight: '100%'\n                                    }}\n                                    MenuProps={{\n                                        anchorOrigin: {\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        },\n                                        transformOrigin: {\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        },\n                                        getContentAnchorEl: null\n                                    }}\n                                    labelId=\"brand\"\n                                    id=\"brand\"\n                                    label=\"Brand\"\n                                >\n                                    <MenuItem>All Category</MenuItem>\n                                    <MenuItem>Category 1</MenuItem>\n                                    <MenuItem>Category 2</MenuItem>\n                                    <MenuItem>Category 3</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            <div className={classes.processList}>\n                <Grid container spacing={5}>\n                    <Grid item xs={12} md={6} lg={3} xl={3}>\n                        <div className={classes.processCard}>\n                            <div className={`${classes.processCardContainer} flexbox-center-container`}>\n                                <div>\n                                    <Icon style={{\n                                        cursor: 'pointer',\n                                        fontSize: 72,\n                                        color: '#91dd47'\n                                    }}>add_circle_icon</Icon>\n                                    <p style={{\n                                        fontSize: 20,\n                                        color: '#000',\n                                        fontWeight: 800\n                                    }}>Create from scratch</p>\n                                </div>\n                            </div>\n                        </div>\n                    </Grid>\n                    {\n                        data.map(item => {\n                            return (\n                                <Grid item xs={12} md={6} lg={3} xl={3}>\n                                    <div className={classes.processCard}>\n                                        <div className={classes.processCardContainer}>\n                                            <div className={`${classes.processCardBanner} flexbox-center-container`}>\n                                                <Icon style={{\n                                                    fontSize: 54,\n                                                    fontWeight: 800,\n                                                    color: '#ffa500'\n                                                }}>crop_free_icon</Icon>\n                                            </div>\n                                            <div style={{\n                                                padding: 20,\n                                                marginTop: 30,\n                                                color: '#000',\n                                            }}>\n                                                <p style={{\n                                                    fontSize: 20,\n                                                    fontWeight: 800\n                                                }}>{item.name}</p>\n                                                <p style={{\n                                                    fontSize: 16\n                                                }}\n                                                >{item.description}</p>\n                                            </div>\n                                            <div className={`${classes.processCardAction} flexbox-center-container`}>\n                                                <Link style={{\n                                                    borderRight: '1px solid #dbdbdb',\n                                                }}>More Infor</Link>\n                                                <Link>Install now</Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Grid>\n                            )\n                        })\n                    }\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default ProcessDashboard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Button, ButtonGroup, Grid, Dialog, DialogContent, TextField, Select, InputLabel,\n    Table, TableBody, TableHead, TableCell, Icon, TableRow, FormGroup, MenuItem\n} from '@material-ui/core';\n\nRequestDashboard.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    datatable: {\n        marginTop: 30\n    },\n    requestCard: {\n        padding: '25px 20px',\n        borderRadius: 10,\n        color: '#FFF',\n        '& p': {\n            margin: 0\n        }\n    },\n    ...globalStyles\n})\n\nfunction RequestDashboard(props) {\n    const classes = useStyles()\n    const columns = [\n        {\n            label: '',\n            property: 'account_author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Current step',\n            property: 'bank_account',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n\n        {\n            label: '>180 days',\n            property: 'balance',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '180 to 90 days',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '90 to 30 days',\n            property: 'bank_name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '30 to 15 days',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '<30 days',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <p className={classes.headerTitle}>Request Dashboard</p>\n            </div>\n            <div className={classes.requestStatusBar} style={{\n                margin: '60px 0'\n            }}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6} lg={3} xl={3}>\n                        <div className={classes.requestCard} style={{\n                            background: '#FF1493'\n                        }}>\n                            <div className={`${classes.requestCardContainer}`}>\n                                <p style={{\n                                    fontSize: 36,\n                                    fontWeight: 800\n                                }}>16</p>\n                                <p style={{\n                                    fontSize: 18\n                                }}>In progess items</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={3} xl={3}>\n                        <div className={classes.requestCard} style={{\n                            background: '#ffb732'\n                        }}>\n                            <div className={`${classes.requestCardContainer}`}>\n                                <p style={{\n                                    fontSize: 36,\n                                    fontWeight: 800\n                                }}>1</p>\n                                <p style={{\n                                    fontSize: 18\n                                }}>Completed items</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={3} xl={3}>\n                        <div className={classes.requestCard} style={{\n                            background: '#4646ff'\n                        }}>\n                            <div className={`${classes.requestCardContainer}`}>\n                                <p style={{\n                                    fontSize: 36,\n                                    fontWeight: 800\n                                }}>32</p>\n                                <p style={{\n                                    fontSize: 18\n                                }}>Rejected items</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={3} xl={3}>\n                        <div className={classes.requestCard} style={{\n                            background: '#329932'\n                        }}>\n                            <div className={`${classes.requestCardContainer}`}>\n                                <p style={{\n                                    fontSize: 36,\n                                    fontWeight: 800\n                                }}>15</p>\n                                <p style={{\n                                    fontSize: 18\n                                }}>Withdrawn items</p>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>1</TableCell>\n                            <TableCell>Step 1</TableCell>\n                            <TableCell>3</TableCell>\n                            <TableCell>14</TableCell>\n                            <TableCell>0</TableCell>\n                            <TableCell>34</TableCell>\n                            <TableCell>42</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>1</TableCell>\n                            <TableCell>Step 1</TableCell>\n                            <TableCell>3</TableCell>\n                            <TableCell>14</TableCell>\n                            <TableCell>0</TableCell>\n                            <TableCell>34</TableCell>\n                            <TableCell>42</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>1</TableCell>\n                            <TableCell>Step 1</TableCell>\n                            <TableCell>3</TableCell>\n                            <TableCell>14</TableCell>\n                            <TableCell>0</TableCell>\n                            <TableCell>34</TableCell>\n                            <TableCell>42</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n    );\n}\n\nexport default RequestDashboard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { toAbsoluteUrl } from \"../../../../_metronic/utils/utils\";\nimport { Avatar, Button } from '@material-ui/core';\n\nLiveStreaming.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        color: '#65686a',\n        fontSize: 16\n    },\n    informationSection: {\n        maxWidth: 1200,\n        margin: '0 auto'\n    },\n    downloadSection: {\n        textAlign: 'center',\n        margin: '50px 0'\n    },\n    downloadOptionsSection: {\n        maxWidth: 1200,\n        margin: '0 auto'\n    },\n    ...globalStyles\n})\n\nfunction LiveStreaming(props) {\n    const classes = useStyles()\n    const information = [\n        {\n            title: 'Simplified Global Cloud Video Streaming',\n            image: toAbsoluteUrl('/media/bg/live-streaming-1.jpg'),\n            content: [\n                {\n                    title: 'Configure Professional Streams in Minutes',\n                    content: ['Configure streams easily with the Wowza Streaming Cloud GUI management portal.',\n                        'Stream using a wide variety of protocols and codecs.', 'Transcode and transmux for a wide range of networks and devices.'\n                        , 'Instantly create video-on-demand assets from your live streams.']\n                },\n                {\n                    title: 'Stream to Any Size Audience, Anywhere',\n                    content: ['Manage costs with pay-as-you-go, contract-free pricing.', 'Scale automatically to accommodate global audiences of any size.', 'Leverage industry-leading CDNs like Akamai and Fastly.']\n                },\n                {\n                    title: 'Leverage Advanced Features',\n                    content: ['4K streaming for UHD, virtual reality and augmented reality.', 'Stream customization for full control of your message and brand.',\n                        'Wide range of security options, including CDN token authorization and geoblocking.', 'Near real-time visibility into bandwidth consumption and number of viewers by region.']\n                }\n            ]\n        },\n        {\n            title: 'Built to Build On',\n            image: toAbsoluteUrl('/media/bg/live-streaming-2.jpg'),\n            content: [\n                {\n                    title: 'Comprehensive REST API and SDKs',\n                    content: ['Programmable access to every aspect of stream processing.', 'Automatic monitoring and management of the entire workflow.',\n                        'Advanced options to customize transcoding, sources, and targets.']\n                },\n                {\n                    title: 'Proven App Development Framework',\n                    content: ['Extensive developer tools including a REST API, Java and Ruby SDKs, and code samples.', 'Seamless integration with a broad ecosystem of streaming tools.']\n                }\n            ]\n        },\n        {\n            title: 'Low-Latency Solutions for Every Use Case',\n            image: toAbsoluteUrl('/media/bg/live-streaming-3.png'),\n            content: [\n                {\n                    title: 'Stream From Your Browser, Broadcast to Thousands',\n                    content: ['Wowza Streaming Cloud enables simple browser-based streaming powered by WebRTC. Easily capture video from any browser without complicated configuration or integration and broadcast it to any destination.']\n                },\n                {\n                    title: 'Near-Real-Time Streaming Over Suboptimal Networks',\n                    content: ['SRT (Secure Reliable Transport) can be used to transport high-quality live streams to Streaming Cloud for transcoding and redistribution, enabling the best-quality live video over the most unpredictable networks. Learn more about SRT.']\n                },\n                {\n                    title: 'Tuning HLS for Low Latency',\n                    content: ['When quality, affordability, and mass distribution are your highest priorities, Wowza Streaming Cloud can help tune HLS for reduced-latency streaming. Learn more about Tuning HLS.']\n                }\n            ]\n        }\n    ]\n\n    const options = [\n        {\n            os: 'Windows',\n            image: toAbsoluteUrl('/media/bg/windows.png'),\n            url: 'https://www.wowza.com/downloads/WowzaStreamingEngine-4-8-5-05/WowzaStreamingEngine-4.8.5.05-windows-installer.exe',\n            steps: ['Double-click the WowzaStreamingEngine-4.8.5.05-windows-installer.exe installer file and follow the onscreen instructions.',\n                'To run Wowza™ Transcoder on Windows Server 2008 or 2012 the following components are required: .NET Framework 3.5.1, Desktop Experience']\n        },\n        {\n            os: 'Mac',\n            image: toAbsoluteUrl('/media/bg/mac.png'),\n            url: 'https://www.wowza.com/downloads/WowzaStreamingEngine-4-8-5-05/WowzaStreamingEngine-4.8.5.05-osx-installer.dmg',\n            steps: ['Open WowzaStreamingEngine-4.8.5.05-osx-installer.dmg',\n                'Double-click the installer package icon and follow the onscreen instructions.']\n        },\n        {\n            os: 'Linux 64-bit',\n            image: toAbsoluteUrl('/media/bg/linux.png'),\n            url: 'https://www.wowza.com/downloads/WowzaStreamingEngine-4-8-5-05/WowzaStreamingEngine-4.8.5.05-linux-x64-installer.run',\n            steps: ['sudo chmod +x WowzaStreamingEngine-4.8.5.05-linux-x64-installer.run', 'sudo ./WowzaStreamingEngine-4.8.5.05-linux-x64-installer.run',\n                'Follow the onscreen instructions.']\n        }\n    ]\n    return (\n        <div className={classes.root}>\n            <div className={classes.informationSection}>\n                <ul className=\"information__list\">\n                    {\n                        information.map((item, index) => (\n                            <li key={index} className=\"information__item\">\n                                <div className=\"information__container\">\n\n                                    <div className=\"information__image-section\"><img src={item.image} /></div>\n                                    <div className=\"information__text-section\">\n                                        <p className=\"information__text-section__title\">{item.title}</p>\n                                        <ul className=\"information__text-section__content\">\n                                            {\n                                                item.content.map((subItem, subIndex) => (\n                                                    <li key={subIndex} className=\"information__text-section__content__sub-text-section\">\n                                                        <p className=\"information__text-section__content__sub-text-section__title\">{subItem.title}</p>\n                                                        <ul className=\"information__text-section__content__sub-text-section__content\">\n                                                            {\n                                                                subItem.content.map((c, cIndex) => (\n                                                                    <li key={cIndex}>{c}</li>\n                                                                ))\n                                                            }\n                                                        </ul>\n                                                    </li>\n                                                ))\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n            <div className={classes.downloadSection}>\n                <p style={{\n                    fontSize: 30,\n                    color: '#ff8400',\n                    fontWeight: 500\n                }}>Try Wowza Streaming Cloud for Free</p>\n                <button className=\"live-streaming-btn\">Free Trial</button>\n            </div>\n            <div className={classes.downloadOptionsSection}>\n                <p style={{\n                    fontSize: 30,\n                    color: '#ff8400',\n                    fontWeight: 500\n                }}>Download the Wowza Streaming Engine Installer*</p>\n                <p>The current version is Wowza Streaming Engine 4.8.5.05, build 20201006161917, released on October 8, 2020.</p>\n                <p style={{\n                    fontWeight: 700\n                }}>*To update an existing installation of Wowza Streaming Engine with the latest features and enhancements, sign in to your Wowza account and go to My Downloads. After downloading the update, see How to update your Wowza Streaming Engine installation.</p>\n                <ul className=\"option__list\">\n                    {\n                        options.map((item, index) => (\n                            <li key={index} className=\"option__item\">\n                                <div className=\"option__container\">\n                                    <p>{item.os}</p>\n                                    <div style={{\n                                        height: 80\n                                    }}>\n                                        <img src={item.image} />\n                                    </div>\n                                    <a href={item.url} className=\"live-streaming-btn live-streaming-btn--fullwidth\">Download</a>\n                                    <p style={{\n                                        marginTop: 30,\n                                        textAlign: 'left',\n                                        fontSize: 20\n                                    }}>To Install:</p>\n                                    <ul className=\"option__tutorial\">\n                                        {\n                                            item.steps.map((subItem, subIndex) => (\n                                                <li key={subIndex}>{subItem}</li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default LiveStreaming;","import axios from '../helpers/axios'\n\nexport const GET_PRICING_CATEGORIES = '/api/pricing/categories'\nexport const ADD_LINK = '/api/create-pricing-target'\nexport const PRICING_LIST = groupId => `/api/pricing/product-group/${groupId}`\nexport const DELETE_TARGET_DATA = targetId => `/api/target/${targetId}/delete-data`\nexport const PRODUCT_POOL = '/api/pricing/product-target'\nexport const ADD_PRODUCT = '/api/pricing/product-target'\nexport const GET_PRODUCT_GROUP = '/api/pricing/product-group'\nexport const ADD_GROUP = '/api/pricing/product-group'\nexport const EDIT_GROUP = groupId => `/api/pricing/product-group/${groupId}`\n\nexport function editGroup(groupName, groupDes, products, groupId) {\n    const data = new FormData()\n    data.append('groupName', groupName)\n    data.append('groupDes', groupDes)\n    data.append('products', typeof (products) === 'object' ? JSON.stringify(products) : [])\n    return axios({\n        url: EDIT_GROUP(groupId),\n        method: 'POST',\n        data: data\n    })\n}\n\n\nexport function addGroup(groupName, groupDes, products) {\n    const data = new FormData()\n    data.append('groupName', groupName)\n    data.append('groupDes', groupDes)\n    data.append('products', typeof (products) === 'object' ? JSON.stringify(products) : [])\n    return axios({\n        url: ADD_GROUP,\n        method: 'POST',\n        data: data\n    })\n}\n\nexport function getProductGroup(category) {\n    return axios({\n        url: GET_PRODUCT_GROUP,\n        method: 'GET'\n    })\n}\n\nexport function addProduct(productName, productOriginId, link) {\n    const data = new FormData()\n    data.append('productName', productName)\n    data.append('productOriginId', productOriginId)\n    data.append('link', link)\n    return axios({\n        url: ADD_PRODUCT,\n        method: 'POST',\n        data: data\n    })\n}\n\nexport function getProductPool(category) {\n    return axios({\n        url: PRODUCT_POOL,\n        method: 'GET'\n    })\n}\n\nexport function deleteTargetData(targetId, dataId) {\n    const data = new FormData()\n    data.append('dataId', dataId)\n    return axios({\n        url: DELETE_TARGET_DATA(targetId),\n        method: 'POST',\n        data: data\n    })\n}\n\nexport function getPricingList(category) {\n    return axios({\n        url: PRICING_LIST(category),\n        method: 'GET'\n    })\n}\n\nexport function addLink(category, link, productName) {\n    const data = new FormData()\n    data.append('category', category)\n    data.append('link', link)\n    data.append('productName', productName)\n    return axios({\n        url: ADD_LINK,\n        data: data,\n        method: 'POST'\n    })\n}\n\nexport function getPricingCategories() {\n    return axios({\n        url: GET_PRICING_CATEGORIES,\n        method: 'GET'\n    })\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableCell, TableBody, Button, Dialog, DialogContent,\n    CircularProgress, TableRow, FormGroup, Select, MenuItem, TextField, Link, ButtonGroup, Grid, Icon, Chip\n} from '@material-ui/core';\nimport { parseLocaleString } from '../../../helpers/helper'\nimport { Line } from 'react-chartjs-2';\nimport _ from \"lodash\"\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\";\nimport { injectIntl } from \"react-intl\";\nimport { getPricingCategories, addLink, getPricingList, deleteTargetData, getProductGroup } from '../../../crud/pricing.crud'\nimport { randomColor } from \"../../../helpers/helper\"\nimport moment from \"moment\"\nimport ConfirmationPopup from \"../../../partials/popup/ConfirmationPopup\"\n\nCompare.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& .active': {\n            background: '#ebebeb',\n            fontWeight: 800\n        },\n    },\n    chartSection: {\n        marginTop: 50,\n        marginBottom: 50,\n        height: 500,\n    },\n    ...globalStyles,\n    actionSection: {\n        marginBottom: 30,\n        display: 'flex',\n        justifyContent: 'space-between',\n        '& .btn-chip': {\n            display: 'none'\n        }\n    }\n})\n\nconst chartData = () => {\n    const data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [\n            {\n                label: 'My First dataset',\n                pointHighlightStroke: 'rgba(220,220,220,1)',\n                data: [65, 59, 80, 81, 56, 55, 40],\n                fill: false,\n                lineTension: 0.5,\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                borderColor: 'purple'\n            },\n            {\n                label: 'My Second dataset',\n                data: [28, 48, 40, 19, 86, 27, 90],\n                fill: false,\n                lineTension: 0.5,\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                borderColor: 'green'\n            },\n        ]\n    }\n    return data\n}\n\nfunction Compare(props) {\n    const classes = useStyles()\n    const [loading, setLoading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n    const [pricingList, setPricingList] = useState('')\n    const { intl } = props;\n    const [addLinkDialog, setAddLinkDialog] = useState(false)\n    const [categories, setCategories] = useState([])\n    const [filterCategory, setFilterCategory] = useState('')\n    const [selectedCategory, setSelectedCategory] = useState('')\n    const [chartData, setChartData] = useState([])\n    const [selectedTarget, setSelectedTarget] = useState({})\n    const [deleteConfirmationPopup, setDeleteConfirmationPopup] = useState(false)\n    const [deleteLoading, setDeleteLoading] = useState(false)\n    const [selectedData, setSelectedData] = useState('')\n    const [chartTarget, setChartTarget] = useState([])\n    const [groupContent, setGroupContent] = useState([{\n        link: '',\n        productName: ''\n    }])\n    const [groupFormInit, setGroupFormInit] = useState({})\n    const [groupFormValidation, setGroupFormValidation] = useState({})\n\n    const options = {\n        scaleShowGridLines: true,\n        scaleGridLineColor: 'rgba(0,0,0,.05)',\n        scaleGridLineWidth: 1,\n        scaleShowHorizontalLines: true,\n        scaleShowVerticalLines: true,\n        bezierCurve: true,\n        bezierCurveTension: 0.4,\n        pointDot: true,\n        pointDotRadius: 4,\n        pointDotStrokeWidth: 1,\n        pointHitDetectionRadius: 20,\n        datasetStroke: true,\n        datasetStrokeWidth: 2,\n        datasetFill: true,\n        maintainAspectRatio: false,\n        legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',\n    }\n\n    const baseConfig = {\n        fill: false,\n        lineTension: 0.5,\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 5,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n    }\n\n    const columns = [\n        {\n            label: 'Original Price',\n            property: 'originPrice',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Current Price',\n            property: 'currentPrice',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Stock',\n            property: 'stock',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Sold',\n            property: 'sold',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Created',\n            property: 'createdBy',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        getProductGroup()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setCategories(_.get(res, 'data.result') || [])\n                    setFilterCategory(_.get(res, 'data.result[0]._id'))\n                    setSelectedCategory(_.get(res, 'data.result[0]._id'))\n                }\n            })\n    }, [])\n\n    const isValidShopeeLink = txt => {\n        return txt.split('shopee.vn/') && txt.split('shopee.vn/').length === 2\n    }\n\n    useEffect(() => {\n        filterCategory && fetchPricingList()\n    }, [filterCategory])\n\n    useEffect(() => {\n        visualizeChartData(pricingList)\n    }, [chartTarget])\n\n    const visualizeChartData = (targets) => {\n        let data = []\n        let label = []\n        targets && targets.length > 0 && targets.forEach(item => {\n            chartTarget.indexOf(item._id) >= 0 && item.data && item.data.length > 0 && item.data.forEach(subItem => {\n                if (label.indexOf(moment(subItem.created).format('MM/DD/YYYY')) < 0) {\n                    label.push(moment(subItem.created).format('MM/DD/YYYY'))\n                }\n            })\n        });\n        label.sort((a, b) => new Date(a) - new Date(b))\n        targets && targets.length > 0 && targets.forEach(item => {\n            if (chartTarget.indexOf(item._id) >= 0) {\n                let dataset = {\n                    label: _.get(item, 'productDetail[0].productName') || item._id,\n                    borderColor: randomColor(),\n                    data: new Array(label.length).fill(0)\n                }\n                item.data && item.data.length > 0 && item.data.forEach(subItem => {\n                    if (subItem.currentPrice) {\n                        dataset.data[label.indexOf(moment(subItem.created).format('MM/DD/YYYY'))] = subItem.currentPrice\n                    }\n                })\n                dataset = {\n                    ...dataset,\n                    ...baseConfig\n                }\n                data.push(dataset)\n            }\n        });\n\n        setChartData({\n            labels: label,\n            datasets: data\n        })\n    }\n\n    useEffect(() => {\n        if (pricingList && pricingList.length > 0 && pricingList.find(i => i._id === selectedTarget._id) &&\n            pricingList.find(i => i._id === selectedTarget._id).data && pricingList.find(i => i._id === selectedTarget._id).data.length > 0) {\n            setErrorMessage('')\n        }\n        else {\n            setErrorMessage('Empty')\n        }\n    }, [selectedTarget])\n\n    const fetchPricingList = () => {\n        setErrorMessage('')\n        setLoading(true)\n        setPricingList([])\n        getPricingList(filterCategory)\n            .then(res => {\n                setLoading(false)\n                const result = _.get(res, 'data.result')\n                if (_.get(res, 'data.errMsg')) {\n                    setErrorMessage(_.get(res, 'data.errMsg'))\n                }\n                else {\n                    result && result.length === 0 && setErrorMessage('Không có dữ liệu')\n                    setPricingList(_.get(res, 'data.result') || [])\n                    setSelectedTarget(selectedTarget._id ? selectedTarget : _.get(res, 'data.result[0]'))\n                    setChartTarget(chartTarget.length === 0 ? [_.get(res, 'data.result[0]._id')] : chartTarget)\n                    visualizeChartData(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage('Something went wrong')\n            })\n    }\n\n    const handleAddLink = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        addLink(\n            selectedCategory,\n            values.link,\n            values.productName.trim()\n        )\n            .then(res => {\n                setSubmitting(false);\n                resetForm()\n                const errMsg = _.get(res, 'data.errMsg')\n                if (errMsg) {\n                    setStatus(errMsg)\n                }\n                else {\n                    fetchPricingList()\n                    setAddLinkDialog(false)\n                }\n            })\n            .catch(() => {\n                resetForm()\n                setSubmitting(false);\n                setStatus('Some thing went wrong');\n            });\n    }\n\n    const handleCloseDeleteConfirmationPopup = () => {\n        setDeleteConfirmationPopup(false)\n        setDeleteLoading(false)\n        setSelectedData('')\n    }\n\n    const handleRemoveData = () => {\n        setDeleteLoading(true)\n        deleteTargetData(selectedTarget._id, selectedData)\n            .then(res => {\n                fetchPricingList()\n                setDeleteConfirmationPopup(false)\n                setDeleteLoading(false)\n            })\n            .catch(err => {\n                setDeleteConfirmationPopup(false)\n                setDeleteLoading(false)\n            })\n    }\n    const handleChangeChartFilter = item => {\n        let indexOf = chartTarget.indexOf(item._id)\n        if (indexOf < 0) {\n            setChartTarget(chartTarget => {\n                const temp = [...chartTarget]\n                temp.push(item._id)\n                return temp\n            })\n        }\n        else {\n            setChartTarget(chartTarget => {\n                const temp = [...chartTarget]\n                temp.splice(indexOf, 1)\n                return temp\n            })\n        }\n    }\n\n    const addGroup = () => {\n        let temp = [...groupContent]\n        temp.push({\n            link: '',\n            productName: ''\n        })\n        setGroupContent(temp)\n    }\n\n    const removeGroup = index => {\n        let temp = [...groupContent]\n        temp.splice(index, 1)\n        setGroupContent(temp)\n    }\n\n    useEffect(() => {\n        const initVal = {}\n    }, [groupContent])\n\n    return (\n        <div className={classes.root}>\n            <p className={classes.headerTitle}>Compare</p>\n            <div className={classes.actionSection}>\n                <FormGroup style={{\n                    minWidth: 200\n                }} variant=\"outlined\" className=\"dropdown\">\n                    <Select\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between'\n                        }}\n                        value={filterCategory}\n                        onChange={e => {\n                            setSelectedTarget({})\n                            setFilterCategory(e.target.value)\n                        }}\n                        MenuProps={{\n                            anchorOrigin: {\n                                vertical: \"bottom\",\n                                horizontal: \"left\"\n                            },\n                            transformOrigin: {\n                                vertical: \"top\",\n                                horizontal: \"left\"\n                            },\n                            getContentAnchorEl: null\n                        }}>\n                        {\n                            categories.map((item, index) => (\n                                <MenuItem className=\"flexbox-menu\" key={index} value={item._id}>\n                                    <span>{_.get(item, 'groupName')}</span>\n                                    {/* <a style={{\n                                        marginLeft: 10\n                                    }}\n                                        onClick={e => {\n                                            e.preventDefault()\n                                            setAddLinkDialog(true)\n                                        }}\n                                        className=\"btn-chip\">Edit</a> */}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormGroup>\n            </div>\n            {pricingList && pricingList.length > 0 && <div style={{\n                marginBottom: 30\n            }}>\n                <ButtonGroup>{\n                    pricingList.map((item, index) => (\n                        <Button\n                            onClick={() => handleChangeChartFilter(item)}\n                            className={chartTarget.indexOf(item._id) < 0 ? '' : 'active'}\n                            key={index}>{_.get(item, 'productDetail[0].productName') || item._id}</Button>\n                    ))\n                }</ButtonGroup>\n            </div>\n            }\n            <div className={classes.chartSection}>\n                <Line data={chartData} options={options} height={\"500px\"} />\n            </div>\n            {pricingList && pricingList.length > 0 && <div style={{\n                marignTop: 30,\n                marginBottom: 30\n            }}>\n                <ButtonGroup>{\n                    pricingList.map((item, index) => (\n                        <Button\n                            onClick={() => setSelectedTarget(item)}\n                            className={item._id === selectedTarget._id ? 'active' : ''}\n                            key={index}>{_.get(item, 'productDetail[0].productName') || item._id}</Button>\n                    ))\n                }</ButtonGroup>\n            </div>\n            }\n            <div>\n                <p>Link: <a href={_.get(selectedTarget, 'productDetail[0].link')} target=\"_blank\">{_.get(selectedTarget, 'productDetail[0].productName')}</a></p>\n            </div>\n            <div className={`${classes.datatable} brand-list`} style={{\n                marginBottom: 30\n            }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {pricingList && pricingList.find(i => i._id === selectedTarget._id) &&\n\n                            pricingList.find(i => i._id === selectedTarget._id).data.sort((a, b) => new Date(b.created) - new Date(a.created)).map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>{parseLocaleString(row.originPrice)}</TableCell>\n                                    <TableCell>{parseLocaleString(row.currentPrice)}</TableCell>\n                                    <TableCell>{parseLocaleString(row.stock)}</TableCell>\n                                    <TableCell>{parseLocaleString(row.sold)}</TableCell>\n                                    <TableCell>{row.created}</TableCell>\n                                    <TableCell><Button onClick={() => {\n                                        setSelectedData(row._id)\n                                        setDeleteConfirmationPopup(true)\n                                    }}>Delete</Button></TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n                {\n                    (loading || errorMessage) &&\n                    <div className=\"spinner-container\">\n                        {loading && <CircularProgress />}\n                        {!loading && errorMessage && <p className=\"table-error-message\">{errorMessage}</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={addLinkDialog}\n                onClose={() => setAddLinkDialog(false)}\n                keepMounted\n                maxWidth=\"xl\">\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    gorup: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.group) {\n                                        errors.group = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.link) {\n                                        errors.link = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    else if (!isValidShopeeLink(values.link)) {\n                                        errors.link = \"Invalid link. Ex: https://shopee.vn/product123\"\n                                    }\n                                    if (!values.productName.trim()) {\n                                        errors.productName = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    return errors\n                                }}\n                                onSubmit={handleAddLink}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n\n                                            {/* <FormGroup variant=\"outlined\" className=\"dropdown\" style={{\n                                                marginBottom: 30\n                                            }}>\n                                                <Select\n                                                    value={selectedCategory}\n                                                    onChange={e => setSelectedCategory(e.target.value)}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n                                                    {\n                                                        categories.map((item, index) => (\n                                                            <MenuItem key={index} value={item.key}>{_.get(item, 'name.vn')}</MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                            </FormGroup> */}\n                                            <FormGroup style={{\n                                                marginBottom: 30\n                                            }} className=\"input-base\">\n                                                <TextField\n                                                    style={{\n                                                        margin: 0\n                                                    }}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    name=\"group\"\n                                                    placeholder=\"Group Name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.group}\n                                                    helperText={touched.group && errors.group}\n                                                    error={Boolean(touched.group && errors.group)}\n                                                />\n                                            </FormGroup>\n                                            {\n                                                groupContent.map((item, index) => (\n                                                    <div style={{\n                                                        position: 'relative',\n                                                        marginBottom: 15,\n                                                    }}>\n                                                        <div style={{\n                                                            position: 'absolute',\n                                                            top: '50%',\n                                                            transform: 'translateY(-50%)',\n                                                            left: `${index === groupContent.length - 1 ? '-60px' : '-38px'}`,\n                                                        }}>\n                                                            {\n                                                                index === groupContent.length - 1 &&\n                                                                <Icon\n                                                                    onClick={addGroup}\n                                                                    style={{\n                                                                        color: 'green',\n                                                                        cursor: 'pointer'\n                                                                    }}\n\n                                                                >add_icon</Icon>\n                                                            }\n                                                            {\n                                                                groupContent.length > 1 && <Icon\n                                                                    onClick={() => removeGroup(index)}\n                                                                    style={{\n                                                                        marginLeft: 5,\n                                                                        color: 'red',\n                                                                        cursor: 'pointer'\n                                                                    }}\n                                                                >delete_icon</Icon>\n                                                            }\n\n                                                        </div>\n                                                        <Grid container spacing={2}>\n                                                            <Grid item xs={6}>\n                                                                <FormGroup className=\"input-base\">\n                                                                    <TextField\n                                                                        style={{\n                                                                            margin: 0\n                                                                        }}\n                                                                        variant=\"outlined\"\n                                                                        margin=\"normal\"\n                                                                        required\n                                                                        name=\"productName\"\n                                                                        placeholder=\"Product Name\"\n                                                                        onBlur={handleBlur}\n                                                                        onChange={handleChange}\n                                                                        value={values.productName}\n                                                                        helperText={touched.productName && errors.productName}\n                                                                        error={Boolean(touched.productName && errors.productName)}\n                                                                    />\n                                                                </FormGroup>\n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <FormGroup className=\"input-base\">\n                                                                    <TextField\n                                                                        style={{\n                                                                            margin: 0\n                                                                        }}\n                                                                        variant=\"outlined\"\n                                                                        margin=\"normal\"\n                                                                        required\n                                                                        name=\"link\"\n                                                                        placeholder=\"Link\"\n                                                                        onBlur={handleBlur}\n                                                                        onChange={handleChange}\n                                                                        value={values.link}\n                                                                        helperText={touched.link && errors.link}\n                                                                        error={Boolean(touched.link && errors.link)}\n                                                                    />\n                                                                </FormGroup>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n\n                                                ))\n                                            }\n                                            <Button style={{\n                                                marginTop: 15,\n                                                width: '100%'\n                                            }}\n                                                disabled={isSubmitting}\n                                                onClick={handleSubmit}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Add</Button>\n                                            <div style={{\n                                                textAlign: 'center'\n                                            }}><Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block',\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setAddLinkDialog(false)\n                                                }}>Cancel</Link>\n                                            </div>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ConfirmationPopup\n                message=\"Bạn có chắc chắn xóa ?\"\n                open={deleteConfirmationPopup}\n                onClose={handleCloseDeleteConfirmationPopup}\n                loading={deleteLoading}\n                onOK={handleRemoveData} />\n        </div>\n    );\n}\n\nexport default injectIntl(Compare);","import axios from '../helpers/axios'\n\nexport const CREATE_POST = '/api/create-post'\nexport const POST_LIST = '/api/posts'\nexport const CREATE_CAMPAIGN = '/api/create-campaign'\nexport const CAMPAIGN_LIST = '/api/campaigns'\nexport const EDIT_CAMPAIGN = campaignId => `/api/campaign/${campaignId}`\nexport const GET_CAMPAIGN_DETAIL = campaignId => `/api/campaign/${campaignId}`\n\nexport function getCampaignDetail(campaignId) {\n    return axios({\n        url: GET_CAMPAIGN_DETAIL(campaignId),\n        method: 'GET',\n    })\n}\n\nexport function editCampaign(campaignId, outputStream, slug) {\n    const data = new FormData()\n    data.append('outputStream', outputStream)\n    data.append('slug', slug)\n    return axios({\n        url: EDIT_CAMPAIGN(campaignId),\n        method: 'POST',\n        data: data\n    })\n}\n\nexport function getCampaignList() {\n    return axios({\n        url: CAMPAIGN_LIST,\n        method: 'GET',\n    })\n}\n\nexport function getPostList() {\n    return axios({\n        url: POST_LIST,\n        method: 'GET',\n    })\n}\n\nexport function createCampaign(name) {\n    const data = new FormData()\n    data.append('name', name)\n    return axios({\n        url: CREATE_CAMPAIGN,\n        method: 'POST',\n        data: data\n    })\n}\n\nexport function createPost(name) {\n    const data = new FormData()\n    data.append('name', name)\n    return axios({\n        url: CREATE_POST,\n        method: 'POST',\n        data: data\n    })\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField\n} from '@material-ui/core';\n\nimport { createPost, getPostList } from '../../../crud/landing.crud'\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\"\nimport { injectIntl } from \"react-intl\";\nimport { connect, useDispatch } from \"react-redux\";\nimport moment from 'moment'\n\nPostManagement.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction PostManagement(props) {\n    const classes = useStyles()\n    const [createPostPopup, setCreatePostPopup] = useState(false)\n    const [postList, setPostList] = useState([])\n    const [fetchPostListLoading, setFetchPostListLoading] = useState(false)\n    const { intl } = props;\n    const columns = [\n        {\n            label: 'Name',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    const handleCreatePost = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            createPost(\n                values.name,\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setCreatePostPopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    useEffect(() => {\n        fetchPostList()\n    }, [])\n\n    const fetchPostList = () => {\n        setFetchPostListLoading(true)\n        setPostList([])\n        getPostList()\n            .then(res => {\n                setFetchPostListLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setPostList(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchPostListLoading(false)\n            })\n    }\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Danh sách post</p>\n                <Button onClick={() => setCreatePostPopup(true)} className=\"btn-base btn-base--success\" >CREATE POST</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            postList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {moment(row.created).format('MM/DD/YYYY')}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link to={`/post-detail/${row._id}`}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }} >delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchPostListLoading || postList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchPostListLoading && <CircularProgress />}\n                        {!fetchPostListLoading && postList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createPostPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreatePostPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreatePost}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Name\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    helperText={touched.name && errors.name}\n                                                    error={Boolean(touched.name && errors.name)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Post</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreatePostPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n});\n\nexport default injectIntl(\n    connect(mapStateToProps)(PostManagement)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon } from '@material-ui/core';\nimport { Editor } from \"react-draft-wysiwyg\";\n\nPostDetail.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& .rdw-storybook-editor': {\n            padding: '0 15px'\n        }\n    },\n    ...globalStyles\n})\n\nfunction PostDetail(props) {\n    const classes = useStyles()\n    function uploadImageCallBack(file) {\n        return new Promise(\n            (resolve, reject) => {\n                const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n                xhr.open('POST', 'https://api.imgur.com/3/image');\n                xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n                const data = new FormData(); // eslint-disable-line no-undef\n                data.append('image', file);\n                xhr.send(data);\n                xhr.addEventListener('load', () => {\n                    const response = JSON.parse(xhr.responseText);\n                    resolve(response);\n                });\n                xhr.addEventListener('error', () => {\n                    const error = JSON.parse(xhr.responseText);\n                    reject(error);\n                });\n            },\n        );\n    }\n    return (\n        <div className={classes.root}>\n            <Link to=\"/post\"><Icon>arrow_back</Icon></Link>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Post detail</p>\n            </div>\n\n            <div >\n                <div className=\"rdw-storybook-root\" style={{\n                    color: '#000',\n                    border: '1px solid #eee',\n                    marginBottom: 30\n                }}>\n                    <Editor\n                        toolbarClassName=\"rdw-storybook-toolbar\"\n                        wrapperClassName=\"rdw-storybook-wrapper\"\n                        editorClassName=\"rdw-storybook-editor\"\n                        toolbar={{\n                            image: {\n                                uploadCallback: uploadImageCallBack,\n                                alt: { present: true, mandatory: false },\n                            },\n                        }}\n                    />\n                </div>\n            </div>\n            <Button className=\"btn-base btn-base--success\" >Save</Button>\n        </div>\n    );\n}\n\nexport default PostDetail;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField, InputLabel\n} from '@material-ui/core';\nimport { createCampaign, getCampaignList, editCampaign, getCampaignDetail } from '../../../crud/landing.crud'\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport _ from \"lodash\"\nimport { injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport moment from 'moment'\nLiveManagement.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction LiveManagement(props) {\n    const classes = useStyles()\n    const [createCampaignPopup, setCreateCampaignPopup] = useState(false)\n    const [editCampaignPopup, setEditCampaignPopup] = useState(false)\n    const [campaignList, setCampaignList] = useState([])\n    const [fetchCampaignListLoading, setFetchCampaignListLoading] = useState(false)\n    const [selectedCampaign, setSelectedCampagin] = useState({})\n    const { intl } = props;\n    const columns = [\n        {\n            label: 'Name',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày phát',\n            property: 'created',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        fetchCampaignList()\n    }, [])\n\n    const handleEditCampaign = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            editCampaign(\n                selectedCampaign._id,\n                values.outputStream,\n                values.slug\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setEditCampaignPopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const handleCreateCampaign = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            createCampaign(\n                values.name,\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        setCreateCampaignPopup(false)\n                        fetchCampaignList()\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n\n    const fetchCampaignList = () => {\n        setFetchCampaignListLoading(true)\n        setCampaignList([])\n        getCampaignList()\n            .then(res => {\n                setFetchCampaignListLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setCampaignList(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchCampaignListLoading(false)\n            })\n    }\n\n    const handleGetCampaignDetail = (id) => {\n        console.log(id)\n        getCampaignDetail(id)\n            .then(res => {\n                setSelectedCampagin(_.get(res, 'data.result'))\n                setEditCampaignPopup(true)\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Danh sách campaign</p>\n                <Button onClick={() => setCreateCampaignPopup(true)} className=\"btn-base btn-base--success\" >CREATE CAMPAIGN</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            campaignList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {moment(row.created).format('MM/DD/YYYY')}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link onClick={() => handleGetCampaignDetail(row._id)}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }} >delete</Icon>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchCampaignListLoading || campaignList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchCampaignListLoading && <CircularProgress />}\n                        {!fetchCampaignListLoading && campaignList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createCampaignPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateCampaignPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    name: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.name) {\n                                        errors.name = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreateCampaign}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Name\"\n                                                    name=\"name\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.name}\n                                                    helperText={touched.name && errors.name}\n                                                    error={Boolean(touched.name && errors.name)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Campaign</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateCampaignPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={editCampaignPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setEditCampaignPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    outputStream: selectedCampaign.outputStream || '',\n                                    slug: selectedCampaign.slug || ''\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.outputStream) {\n                                        errors.outputStream = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.slug) {\n                                        errors.slug = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    else if (values.slug.indexOf(' ') >= 0) {\n                                        errors.slug = 'Please remove spaces'\n                                    }\n\n                                    else if (values.slug.toLowerCase() !== values.slug) {\n                                        errors.slug = 'This field only accepts lowercase letters'\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleEditCampaign}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel style={{\n                                                    textAlign: 'left'\n                                                }}>Output Stream</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Output Stream\"\n                                                    name=\"outputStream\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.outputStream}\n                                                    helperText={touched.outputStream && errors.outputStream}\n                                                    error={Boolean(touched.outputStream && errors.outputStream)}\n                                                /></FormGroup>\n\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel style={{\n                                                    marginTop: 15,\n                                                    textAlign: 'left'\n                                                }}>Slug</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Slug\"\n                                                    name=\"slug\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.slug}\n                                                    helperText={touched.slug && errors.slug}\n                                                    error={Boolean(touched.slug && errors.slug)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Submit</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setEditCampaignPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n});\n\n\nexport default injectIntl(\n    connect(mapStateToProps)(LiveManagement)\n);","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField\n} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport moment from 'moment'\nimport _ from 'lodash'\nimport { getCrawlHistory } from '../../crud/data.crud'\n\n\nCrawlHistory.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction CrawlHistory(props) {\n    const classes = useStyles()\n    const columns = [\n        {\n            label: 'Email',\n            property: 'email',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Count',\n            property: 'count',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Detail',\n            property: 'detail',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n    const [createCampaignPopup, setCreateCampaignPopup] = useState(false)\n    const [editCampaignPopup, setEditCampaignPopup] = useState(false)\n    const [historyList, setHistoryList] = useState([])\n    const [fetchHistoryListLoading, setFetchHistoryListLoading] = useState(false)\n\n    const fetchHistory = () => {\n        setFetchHistoryListLoading(true)\n        setHistoryList([])\n        getCrawlHistory()\n            .then(res => {\n                setFetchHistoryListLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setHistoryList(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchHistoryListLoading(false)\n            })\n    }\n\n    useEffect(() => {\n        fetchHistory()\n    }, [])\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Lịch sử crawl</p>\n                {/* <Button onClick={() => setCreateCampaignPopup(true)} className=\"btn-base btn-base--success\" >CREATE CAMPAIGN</Button> */}\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            historyList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row._id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.count}\n                                    </TableCell>\n                                    <TableCell>\n                                        <ul>\n                                            {row.history && row.history.map((item, index) => (\n                                                <li key={index}>\n                                                    <p>Ngày: {moment(item.created).format('MM/DD/YYYY')}</p>\n                                                    {item.keyword && <p>Keyword: {item.keyword}</p>}\n                                                    {item.shopid && <p>Link: <a target=\"_blank\" href={`https://shopee.vn/shop/${item.shopid}/`}>{`https://shopee.vn/shop/${item.shopid}/`}</a></p>}\n                                                </li>\n                                            ))}\n                                        </ul>\n\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchHistoryListLoading || historyList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchHistoryListLoading && <CircularProgress />}\n                        {!fetchHistoryListLoading && historyList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default CrawlHistory;","import axios from '../helpers/axios'\n\nexport const CRAWL_DATA_GET_JOB = (keyword, market, isLink) => `/api/v1/crawl-with-keyword?${isLink ? 'shopid' : 'keyword'}=${keyword}&market=${market}`\nexport const CRAWL_DATA_GET_DATA = (job) => `/api/v1/data-with-job?job=${job}`\nexport const CRAWL_HISROTY = '/api/v1/crawl-history'\n\nexport const getCrawlHistory = () => axios.get(CRAWL_HISROTY)\nexport const getJob = (keyword, market, isLink) => axios.get(CRAWL_DATA_GET_JOB(keyword, market, isLink))\nexport const getData = (job) => axios.get(CRAWL_DATA_GET_DATA(job))","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField\n} from '@material-ui/core';\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment'\nimport { getProductPool, addProduct } from '../../../crud/pricing.crud'\nimport _ from 'lodash'\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nProductPool.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction ProductPool(props) {\n    const classes = useStyles()\n    const [createPostPopup, setCreatePostPopup] = useState(false)\n    const [productList, setProductPool] = useState([])\n    const [fetchProductPoolLoading, setFetchProductPoolLoading] = useState(false)\n    const { intl } = props;\n    const columns = [\n        {\n            label: 'Name',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Product origin',\n            property: 'product_origin',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Link',\n            property: 'link',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Người tạo',\n            property: 'author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        fetchProductPool()\n    }, [])\n\n    const fetchProductPool = () => {\n        setFetchProductPoolLoading(true)\n        setProductPool([])\n        getProductPool()\n            .then(res => {\n                setFetchProductPoolLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setProductPool(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchProductPoolLoading(false)\n            })\n    }\n    const handleCreatePost = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        setSubmitting(true);\n        setTimeout(() => {\n            addProduct(\n                values.productName,\n                values.productOriginId,\n                values.link,\n            )\n                .then(res => {\n                    setSubmitting(false);\n                    resetForm()\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        fetchProductPool()\n                        setCreatePostPopup(false)\n                    }\n                })\n                .catch(() => {\n                    resetForm()\n                    setSubmitting(false);\n                    setStatus('Some thing went wrong');\n                });\n        }, 1000)\n    }\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Product pool</p>\n                <Button onClick={() => setCreatePostPopup(true)} className=\"btn-base btn-base--success\" >ADD PRODUCT</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            productList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.productName}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.productOriginId}\n                                    </TableCell>\n                                    <TableCell>\n                                        <a href={row.link} target=\"_blank\">{row.link}</a>\n                                    </TableCell>\n                                    <TableCell>\n                                        {_.get(row, 'user.email')}\n                                    </TableCell><TableCell>\n                                        {row.created ? moment(row.created).format('MM/DD/YYYY') : ''}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        {/* <Link to={`/post-detail/${row._id}`}><Icon>edit</Icon></Link>\n                                        <Icon style={{\n                                            marginLeft: '15px',\n                                            cursor: 'pointer'\n                                        }} >delete</Icon> */}\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchProductPoolLoading || productList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchProductPoolLoading && <CircularProgress />}\n                        {!fetchProductPoolLoading && productList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createPostPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreatePostPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                initialValues={{\n                                    productName: '',\n                                    productOriginId: '',\n                                    link: '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.productName) {\n                                        errors.productName = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.productOriginId) {\n                                        errors.productOriginId = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n                                    if (!values.link) {\n                                        errors.link = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={handleCreatePost}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Product Name\"\n                                                    name=\"productName\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.productName}\n                                                    helperText={touched.productName && errors.productName}\n                                                    error={Boolean(touched.productName && errors.productName)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Product origin Id\"\n                                                    name=\"productOriginId\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.productOriginId}\n                                                    helperText={touched.productOriginId && errors.productOriginId}\n                                                    error={Boolean(touched.productOriginId && errors.productOriginId)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base\">\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    placeholder=\"Link\"\n                                                    name=\"link\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.link}\n                                                    helperText={touched.link && errors.link}\n                                                    error={Boolean(touched.link && errors.link)}\n                                                /></FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Post</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreatePostPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default injectIntl(ProductPool);","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from '../../../styles/globalStyles'\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Table, TableHead, TableRow, TableCell, FormGroup, CircularProgress, Select, Input, MenuItem, Checkbox, ListItemText,\n    Button, TableBody, Icon, Dialog, DialogContent, TextField, TextareaAutosize, InputLabel\n} from '@material-ui/core';\nimport clsx from \"clsx\"\nimport { Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment'\nimport { getProductGroup, editGroup, addGroup, getProductPool } from '../../../crud/pricing.crud'\nimport _ from 'lodash'\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nGroup.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n    ...globalStyles\n})\n\nfunction Group(props) {\n    const classes = useStyles()\n    const [createPostPopup, setCreateGroupPopup] = useState(false)\n    const [groupList, setProductGroup] = useState([])\n    const [productList, setProductList] = useState([])\n    const [selectedProduct, setSelectedProduct] = useState([])\n    const [fetchProductPoolLoading, setFetchProductGroupLoading] = useState(false)\n    const [selectedGroup, setSelectedGroup] = useState('')\n    const { intl } = props;\n    const columns = [\n        {\n            label: 'Group name',\n            property: 'name',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Description',\n            property: 'description',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Product',\n            property: 'product',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Người tạo',\n            property: 'author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: 'Ngày tạo',\n            property: 'author',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n        {\n            label: '',\n            property: 'action',\n            horizontalAlign: 'left',\n            cellFormat: 'string'\n        },\n    ]\n\n    useEffect(() => {\n        fetchProductGroup()\n        fetchProduct()\n    }, [])\n\n    const handleEdit = group => {\n        setSelectedGroup(group)\n        let p = []\n        group.products.forEach(item => productList.find(i => i._id === item) && p.push(productList.find(i => i._id === item)))\n        setSelectedProduct(p)\n        setCreateGroupPopup(true)\n    }\n\n    const fetchProductGroup = () => {\n        setFetchProductGroupLoading(true)\n        setProductGroup([])\n        getProductGroup()\n            .then(res => {\n                setFetchProductGroupLoading(false)\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setProductGroup(_.get(res, 'data.result') || [])\n                }\n            })\n            .catch(err => {\n                setFetchProductGroupLoading(false)\n            })\n    }\n    const fetchProduct = () => {\n        getProductPool()\n            .then(res => {\n                const errMsg = _.get(res, 'data.errMsg')\n                if (!errMsg) {\n                    setProductList(_.get(res, 'data.result') || [])\n                }\n            })\n    }\n    const handleAddGroup = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        let p = []\n        if (selectedProduct && selectedProduct.length > 0) {\n            selectedProduct.forEach(item => {\n                p.push(item._id)\n            })\n            setSubmitting(true);\n            setTimeout(() => {\n                addGroup(\n                    values.groupName,\n                    values.groupDes,\n                    p\n                )\n                    .then(res => {\n                        setSubmitting(false);\n                        resetForm()\n                        const errMsg = _.get(res, 'data.errMsg')\n                        if (errMsg) {\n                            setStatus(errMsg)\n                        }\n                        else {\n                            fetchProductGroup()\n                            setCreateGroupPopup(false)\n                        }\n                    })\n                    .catch(() => {\n                        resetForm()\n                        setSubmitting(false);\n                        setStatus('Some thing went wrong');\n                    });\n            }, 1000)\n        }\n\n        else {\n            setStatus('Please select product')\n        }\n    }\n\n    const handleEditGroup = (values, { setStatus, setSubmitting, resetForm }) => {\n        setStatus('')\n        let p = []\n        if (selectedProduct && selectedProduct.length > 0) {\n            selectedProduct.forEach(item => {\n                p.push(item._id)\n            })\n            setSubmitting(true);\n            setTimeout(() => {\n                editGroup(\n                    values.groupName,\n                    values.groupDes,\n                    p,\n                    selectedGroup._id\n                )\n                    .then(res => {\n                        setSubmitting(false);\n                        resetForm()\n                        const errMsg = _.get(res, 'data.errMsg')\n                        if (errMsg) {\n                            setStatus(errMsg)\n                        }\n                        else {\n                            fetchProductGroup()\n                            setCreateGroupPopup(false)\n                        }\n                    })\n                    .catch(() => {\n                        resetForm()\n                        setSubmitting(false);\n                        setStatus('Some thing went wrong');\n                    });\n            }, 1000)\n        }\n\n        else {\n            setStatus('Please select product')\n        }\n    }\n    return (\n        <div className={classes.root}>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                margin: '15px 0'\n            }}>\n                <p className={classes.headerTitle}>Group</p>\n                <Button onClick={() => {\n                    setSelectedGroup('')\n                    setCreateGroupPopup(true)\n                    setSelectedProduct([])\n                }} className=\"btn-base btn-base--success\" >ADD GROUP</Button>\n            </div>\n\n            <div className={`${classes.datatable} brand-list`}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        {columns.map((col, index) => (\n                            <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                                align=\"left\" key={index}>{col.label}</TableCell>\n                        ))}\n                    </TableHead>\n                    <TableBody>\n                        {\n                            groupList.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>\n                                        {row.groupName}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.groupDes}\n                                    </TableCell>\n                                    <TableCell>\n                                        {\n                                            row.products && row.products.map((item, sIndex) => (\n                                                <p key={sIndex} style={{\n                                                    margin: 0\n                                                }}>{productList.find(i => i._id === item) && productList.find(i => i._id === item).productName}</p>\n                                            ))\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        {_.get(row, 'user.email')}\n                                    </TableCell><TableCell>\n                                        {row.created ? moment(row.created).format('MM/DD/YYYY') : ''}\n                                    </TableCell>\n                                    <TableCell style={{\n                                        width: 100\n                                    }}>\n                                        <Link style={{\n                                            cursor: 'pointer'\n                                        }} onClick={() => handleEdit(row)}><Icon>edit</Icon></Link>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                {\n                    (fetchProductPoolLoading || groupList.length === 0) &&\n                    <div className=\"spinner-container\">\n                        {fetchProductPoolLoading && <CircularProgress />}\n                        {!fetchProductPoolLoading && groupList.length === 0 && <p className=\"table-error-message\">Dữ liệu trống</p>}\n                    </div>\n                }\n            </div>\n            <Dialog\n                open={createPostPopup}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={() => setCreateGroupPopup(false)}\n            >\n                <DialogContent>\n                    <div className={classes.form}>\n                        <div className={classes.formContainer}>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    groupName: selectedGroup.groupName || '',\n                                    groupDes: selectedGroup.groupDes || '',\n                                }}\n                                validate={values => {\n                                    const errors = {};\n\n                                    if (!values.groupName) {\n                                        errors.groupName = intl.formatMessage({\n                                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                        });\n                                    }\n\n                                    return errors;\n                                }}\n                                onSubmit={selectedGroup ? handleEditGroup : handleAddGroup}\n                            >\n                                {({\n                                    values,\n                                    status,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    resetForm\n                                }) => (\n                                        <form onSubmit={handleSubmit} noValidate>\n                                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                                <div className=\"alert-text\">{status}</div>\n                                            </div>}\n                                            <FormGroup className=\"input-base\">\n                                                <InputLabel style={{\n                                                    textAlign: 'left'\n                                                }}>Group Name</InputLabel>\n                                                <TextField\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    name=\"groupName\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.groupName}\n                                                    helperText={touched.groupName && errors.groupName}\n                                                    error={Boolean(touched.groupName && errors.groupName)}\n                                                /></FormGroup>\n                                            <FormGroup className=\"input-base dropdown\">\n                                                <InputLabel style={{\n                                                    margin: '15px 0',\n                                                    textAlign: 'left'\n                                                }}>Description</InputLabel>\n                                                <TextareaAutosize\n                                                    rowsMax={4}\n                                                    variant=\"outlined\"\n                                                    margin=\"normal\"\n                                                    required\n                                                    fullWidth\n                                                    type=\"text\"\n                                                    name=\"groupDes\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    value={values.groupDes}\n                                                    helperText={touched.groupDes && errors.groupDes}\n                                                    error={Boolean(touched.groupDes && errors.groupDes)}\n                                                /></FormGroup>\n\n                                            <FormGroup className=\"input-base dropdown\">\n                                                <InputLabel style={{\n                                                    margin: '15px 0',\n                                                    textAlign: 'left'\n                                                }}>Product</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-mutiple-checkbox-label\"\n                                                    id=\"demo-mutiple-checkbox\"\n                                                    multiple\n                                                    value={selectedProduct}\n                                                    onChange={e => setSelectedProduct(e.target.value)}\n                                                    input={<Input />}\n                                                    renderValue={(selected) => {\n                                                        const names = []\n                                                        _.forEach(selected, item => {\n                                                            names.push(item.productName)\n                                                        })\n                                                        return names.join(', ')\n                                                    }}\n                                                    MenuProps={{\n                                                        anchorOrigin: {\n                                                            vertical: \"bottom\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        transformOrigin: {\n                                                            vertical: \"top\",\n                                                            horizontal: \"left\"\n                                                        },\n                                                        getContentAnchorEl: null\n                                                    }}>\n\n                                                    {productList.map((product, index) => (\n                                                        <MenuItem key={index} value={product}>\n                                                            <Checkbox\n                                                                checked={typeof (selectedProduct.find(item => item._id === product._id)) === 'object'} />\n                                                            <ListItemText primary={product.productName} />\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormGroup>\n\n                                            <Button style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }}\n                                                type=\"submit\"\n                                                disabled={isSubmitting}\n                                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                    {\n                                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": isSubmitting\n                                                    }\n                                                )}`}>Create Group</Button>\n                                            <Link style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}\n                                                onClick={() => {\n                                                    resetForm()\n                                                    setCreateGroupPopup(false)\n                                                }}>Cancel</Link>\n\n                                        </form>\n                                    )}\n                            </Formik>\n                        </div>\n\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default injectIntl(Group);","import { PERMISSIONS, ROLE_DETAIL } from \"../constant/role\"\nimport Dashboard from '../pages/home/statistics/Dashboard'\nimport BrandDetail from '../pages/home/BrandDetail'\nimport BrandList from '../pages/home/BrandList'\nimport ConnectMarket from '../pages/home/ConnectMarket'\nimport Profile from '../pages/home/Profile'\nimport Authorization from '../pages/home/Authorization'\nimport ActivityLog from '../pages/home/ActivityLog'\nimport ShopList from '../pages/home/ShopList'\nimport PermissionList from '../pages/home/PermissionList'\nimport UserList from '../pages/home/UserList'\nimport InternalReport from '../pages/home/InternalReport'\nimport BankAccountDetail from '../../app/pages/home/finance/BankAccountDetail'\nimport BankDetail from '../../app/pages/home/finance/BankDetail'\nimport BankManagement from '../../app/pages/home/finance/BankManagement'\nimport FinanceReport from '../../app/pages/home/finance/FinanceReport'\nimport FinanceOverview from '../../app/pages/home/finance/FinanceOverview'\nimport Deparments from '../../app/pages/home/Deparments'\nimport ProcessSetting from '../../app/pages/home/ProcessSetting'\nimport RequestPage from '../../app/pages/home/RequestPage'\nimport CreateProcess from '../../app/pages/home/CreateProcess'\nimport RequestDetail from '../../app/pages/home/RequestDetail'\nimport ProcessDashboard from '../pages/home/ProcessDashboard'\nimport RequestDashboard from '../pages/home/RequestDashboard'\nimport LiveStreaming from '../pages/home/livestream/LiveStreaming'\nimport Compare from '../pages/home/pricing/Compare'\nimport PostManagement from '../pages/home/post/PostManagement'\nimport PostDetail from '../pages/home/post/PostDetail'\nimport CampaignManagement from '../pages/home/livestream/CampaignManagement'\nimport CrawlHistory from '../pages/crawl/CrawlHistory'\nimport ProductPool from '../pages/home/pricing/ProductPool'\nimport Group from '../pages/home/pricing/Group'\n\nexport const HOME_ROUTER_CONFIG = [\n    {\n        component: Dashboard,\n        url: '/dashboard',\n        permissons: [PERMISSIONS.REVENUE_STATISTICS]\n    },\n    // {\n    //     component: RevenueStatistics,\n    //     url: '/board/:brandId?',\n    //     permissons: [PERMISSIONS.REVENUE_STATISTICS]\n    // },\n    {\n        component: BrandList,\n        url: '/brand',\n        permissons: [PERMISSIONS.READ_ADMIN_BRAND, PERMISSIONS.READ_ALL_BRAND, PERMISSIONS.READ_OWNER_BRAND]\n    },\n    {\n        component: BrandDetail,\n        url: '/brand-detail/:brandId',\n        permissons: [PERMISSIONS.UPDATE_ADMIN_BRAND]\n    },\n    {\n        component: ConnectMarket,\n        url: '/connect-market/:brandId',\n        permissons: [PERMISSIONS.CONNECT_SOURCE]\n    },\n    {\n        component: Profile,\n        url: '/profile',\n        permissons: [],\n\n    },\n    {\n        component: Authorization,\n        url: '/authorization',\n        permissons: [PERMISSIONS.INVITE_TO_BE_ADMIN]\n    },\n    {\n        component: ActivityLog,\n        url: '/log',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: ShopList,\n        url: '/shops',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: PermissionList,\n        url: '/permissions',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: UserList,\n        url: '/users',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: InternalReport,\n        url: '/internal-report',\n        permissons: [PERMISSIONS.INTERNAL_REPORT],\n\n    },\n    {\n        component: LiveStreaming,\n        url: '/live-streaming',\n        role: ROLE_DETAIL.systemAdmin.level,\n\n    },\n    {\n        component: FinanceOverview,\n        url: '/finance-overview',\n        permissons: [],\n    },\n    {\n        component: BankAccountDetail,\n        url: '/account_number/:bankAccountId',\n        permissons: [],\n    },\n    {\n        component: BankManagement,\n        url: '/bank-list',\n        permissons: [],\n    },\n    {\n        component: BankDetail,\n        url: '/bank/:bankId',\n        permissons: [],\n    },\n    {\n        component: FinanceReport,\n        url: '/finance-report',\n        permissons: [],\n    },\n    {\n        component: Deparments,\n        url: '/departments',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: ProcessSetting,\n        url: '/process-setting',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: RequestPage,\n        url: '/requests',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: CreateProcess,\n        url: '/process/:processId',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: RequestDetail,\n        url: '/request/:requestId',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: ProcessDashboard,\n        url: '/process-dashboard',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: RequestDashboard,\n        url: '/request-dashboard',\n        permissons: [],\n        role: ROLE_DETAIL.systemAdmin.level\n    },\n    {\n        component: Compare,\n        url: '/compare',\n        role: ROLE_DETAIL.systemAdmin.level,\n    },\n    {\n        component: ProductPool,\n        url: '/product-pool',\n        role: ROLE_DETAIL.systemAdmin.level,\n    },\n    {\n        component: PostManagement,\n        url: '/post',\n        permissons: []\n    },\n    {\n        component: PostDetail,\n        url: '/post-detail/:postId',\n        isExact: true,\n        permissons: []\n    },\n    {\n        component: CampaignManagement,\n        url: '/campaign',\n        permissons: []\n    },\n    {\n        component: CrawlHistory,\n        url: '/crawl-history',\n        role: ROLE_DETAIL.systemAdmin.level,\n    },\n    {\n        component: Group,\n        url: '/group',\n        role: ROLE_DETAIL.systemAdmin.level,\n    },\n]","import React, { Suspense, lazy, useState, useEffect } from 'react'\nimport { connect, useDispatch } from \"react-redux\";\nimport { Redirect, Route, Switch, useHistory, useLocation } from 'react-router-dom'\nimport { LayoutSplashScreen } from '../../../_metronic'\nimport { CircularProgress, Dialog, DialogContent, DialogActions, Button, Icon } from '@material-ui/core'\nimport { actionTypes } from \"../../store/ducks/auth.duck\"\nimport { HOME_ROUTER_CONFIG } from \"../../router/RouterConfig\"\nimport { isAuthenticated } from \"../../helpers/helper\"\nimport { getUser } from \"../../crud/auth.crud\"\nimport _ from \"lodash\"\n\nfunction HomePage(props) {\n  const [open, setOpen] = useState(false);\n  let history = useHistory()\n  let dispatch = useDispatch()\n  const userPermissions = _.get(props, 'auth.user.permissions')\n  const [isLoadedUserProfile, setIsLoadedUserProfile] = useState(false)\n\n  //Redirect to login in case of token is expired\n  document.addEventListener(\"tokenExpired\", function (e) {\n    setOpen(true)\n  });\n\n  const handleDialogClickOk = () => {\n    dispatch({\n      type: actionTypes.Logout,\n    })\n  }\n\n  useEffect(() => {\n    getUser()\n      .then(res => {\n        const user = {\n          role: _.get(res, 'data.result.role.name'),\n          email: _.get(res, 'data.result.email'),\n          avatar: _.get(res, 'data.result.avatar.Location'),\n          permissions: _.get(res, 'data.result.role.permissions')\n        }\n        dispatch({\n          type: actionTypes.UpdateUser,\n          payload: user\n        })\n        setIsLoadedUserProfile(true)\n      })\n      .catch(err => {\n\n      })\n  }, [])\n\n\n  const path = useLocation().pathname\n\n  if (props.auth.isFirstLoad || path === '/') {\n    if (props.auth.defaultPage) {\n      dispatch({\n        type: actionTypes.SetFirstLoad,\n        payload: false\n      })\n      history.push(props.auth.defaultPage)\n    }\n  }\n\n  return (\n    <div>\n      {\n        isLoadedUserProfile &&\n\n        <Suspense fallback={<LayoutSplashScreen />}>\n          <Switch>\n            {HOME_ROUTER_CONFIG.map((route, index) => (\n\n              <Route key={index} path={route.url} render={p => {\n                return (\n                  isAuthenticated(userPermissions, route.permissons) ?\n                    <route.component />\n                    : <Redirect to=\"/profile\" />\n                )\n              }} />\n            ))}\n            <Redirect to=\"/dashboard/revenue\" />\n          </Switch>\n        </Suspense>\n      }\n      <Dialog\n        open={open}\n        keepMounted\n        maxWidth=\"sm\"\n      >\n        <DialogContent>\n          <div className=\"popup-message\">\n            <Icon>warning</Icon>\n            <p>Sorry. Your session is timeout<br />\n              Please login again</p>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleDialogClickOk}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nconst mapStateToProps = store => ({\n  auth: store.auth\n});\n\nexport default connect(mapStateToProps)(HomePage);","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-1.scss\";\r\n\r\nexport function ErrorPage1() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-error-v1\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\r\n              \"/media/error/bg1.jpg\"\r\n            )})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error-v1__container\">\r\n            <h1 className=\"kt-error-v1__number\">404</h1>\r\n            <p className=\"kt-error-v1__desc\">OOPS! Something went wrong here</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-2.scss\";\r\n\r\nexport function ErrorPage2() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid  kt-error-v2\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\"/media/error/bg2.jpg\")})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error_container\">\r\n            <div className=\"kt-error-v1__container\">\r\n              <span className=\"kt-error_title2 kt-font-light\">\r\n                <h1>OOPS!</h1>\r\n              </span>\r\n              <span className=\"kt-error_desc kt-font-light\">\r\n                Something went wrong here\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-3.scss\";\r\n\r\nexport function ErrorPage3() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-error-v3\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\r\n              \"/media/error/bg3.jpg\"\r\n            )})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error_container\">\r\n            <div className=\"kt-error_number\">\r\n              <h1>404</h1>\r\n            </div>\r\n            <p className=\"kt-error_title kt-font-light\">How did you get here</p>\r\n            <p className=\"kt-error_subtitle\">\r\n              Sorry we can't seem to find the page you're looking for.\r\n            </p>\r\n            <p className=\"kt-error_description\">\r\n              There may be a misspelling in the URL entered,\r\n              <br />\r\n              or the page you are looking for may no longer exist.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-4.scss\";\r\n\r\nexport function ErrorPage4() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-error-v4\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\"/media//error/bg4.jpg\")})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error_container\">\r\n            <h1 className=\"kt-error_number\">404</h1>\r\n            <p className=\"kt-error_title\">ERROR</p>\r\n            <p className=\"kt-error_description\">Nothing left to do here.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-5.scss\";\r\n\r\nexport function ErrorPage5() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid  kt-error-v5\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\"/media/error/bg5.jpg\")})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error_container\">\r\n            <span className=\"kt-error_title\">\r\n              <h1>Oops!</h1>\r\n            </span>\r\n            <p className=\"kt-error_subtitle\">Something went wrong here.</p>\r\n            <p className=\"kt-error_description\">\r\n              We're working on it and we'll get it fixed\r\n              <br />\r\n              as soon possible.\r\n              <br />\r\n              You can back or use our Help Center.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport \"../../../_metronic/_assets/sass/pages/error/error-6.scss\";\r\n\r\nexport function ErrorPage6() {\r\n  return (\r\n    <>\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <div\r\n          className=\"kt-grid__item kt-grid__item--fluid kt-grid  kt-error-v6\"\r\n          style={{\r\n            backgroundImage: `url(${toAbsoluteUrl(\"/media//error/bg6.jpg\")})`\r\n          }}\r\n        >\r\n          <div className=\"kt-error_container\">\r\n            <div className=\"kt-error_subtitle kt-font-light\">\r\n              <h1>Oops...</h1>\r\n            </div>\r\n\r\n            <p className=\"kt-error_description kt-font-light\">\r\n              Looks like something went wrong.\r\n              <br />\r\n              We're working on it\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { ErrorPage1 } from \"./ErrorPage1\";\r\nimport { ErrorPage2 } from \"./ErrorPage2\";\r\nimport { ErrorPage3 } from \"./ErrorPage3\";\r\nimport { ErrorPage4 } from \"./ErrorPage4\";\r\nimport { ErrorPage5 } from \"./ErrorPage5\";\r\nimport { ErrorPage6 } from \"./ErrorPage6\";\r\n\r\nexport default function ErrorsPage() {\r\n  return (\r\n      <Switch>\r\n        <Redirect from=\"/error\" exact={true} to=\"/error/error-v1\" />\r\n        <Route path=\"/error/error-v1\" component={ErrorPage1} />\r\n        <Route path=\"/error/error-v2\" component={ErrorPage2} />\r\n        <Route path=\"/error/error-v3\" component={ErrorPage3} />\r\n        <Route path=\"/error/error-v4\" component={ErrorPage4} />\r\n        <Route path=\"/error/error-v5\" component={ErrorPage5} />\r\n        <Route path=\"/error/error-v6\" component={ErrorPage6} />\r\n      </Switch>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LayoutSplashScreen } from \"../../../_metronic\";\r\nimport { actionTypes as authAction } from \"../../store/ducks/auth.duck\"\r\nimport { actionTypes as brandAction } from \"../../store/ducks/brand.duck\"\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch({\r\n      type: authAction.Logout\r\n    })\r\n    this.props.dispatch({\r\n      type: brandAction.Reset\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/auth\" />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  brand: store.brand,\r\n  auth: store.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Logout);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default class SearchResult extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      return (\r\n        <div className=\"kt-quick-search__result\">\r\n          <div className=\"kt-quick-search__message kt-hidden\">\r\n            No record found\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"kt-quick-search__result\">\r\n        {data.map((item, index) => (\r\n          <React.Fragment key={index}>\r\n            {item.type === 1 && (\r\n              <div className=\"kt-quick-search__item\">\r\n                <div className={clsx({\"kt-quick-search__item-img\": item.iconImage, \"kt-quick-search__item-icon\": item.iconClassName})}>\r\n                  {item.iconClassName ? (\r\n                    <i className={item.iconClassName} />\r\n                  ) : item.iconImage ? (\r\n                    <img src={item.iconImage} alt=\"\" />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"kt-quick-search__item-wrapper\">\r\n                  <a href=\"#\" className=\"kt-quick-search__item-title\">\r\n                    {item.text}\r\n                  </a>\r\n                  <div className=\"kt-quick-search__item-desc\">\r\n                    {item.description}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {item.type === 0 && (\r\n              <div className=\"kt-quick-search__category\">{item.text}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst HeaderDropdownToggle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"kt-header__topbar-wrapper\"\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        props.onClick(e);\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nHeaderDropdownToggle.displayName = 'HeaderDropdownToggle';\r\nexport default HeaderDropdownToggle;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / General / Search\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-General-/-Search\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z\",\n  id: \"Path-2\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z\",\n  id: \"Path\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\"\n}));\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Search.5c98a9b7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { createRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\nimport { ReactComponent as SearchIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Search.svg\";\r\n\r\nconst perfectScrollbarOptions = {\r\n  wheelSpeed: 2,\r\n  wheelPropagation: false\r\n};\r\n\r\nconst fakeData = [\r\n  {\r\n    type: 0,\r\n    text: \"Reports\"\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"AirPlus Requirements\",\r\n    description: \"by Grog John\",\r\n    iconImage: toAbsoluteUrl(\"/media/files/doc.svg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"TechNav Documentation\",\r\n    description: \"by Mary Brown\",\r\n    iconImage: toAbsoluteUrl(\"/media/files/pdf.svg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"All Framework Docs\",\r\n    description: \"by Grog John\",\r\n    iconImage: toAbsoluteUrl(\"/media/files/zip.svg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"AirPlus Requirements\",\r\n    description: \"by Tim Hardy\",\r\n    iconImage: toAbsoluteUrl(\"/media/files/xml.svg\")\r\n  },\r\n  {\r\n    text: \"Customers\",\r\n    type: 0\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"Jimmy Curry\",\r\n    description: \"Software Developer\",\r\n    iconImage: toAbsoluteUrl(\"/media/users/300_11.jpg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"Milena Gibson\",\r\n    description: \"UI Designer\",\r\n    iconImage: toAbsoluteUrl(\"/media/users/300_16.jpg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"Stefan JohnStefan\",\r\n    description: \"Marketing Manager\",\r\n    iconImage: toAbsoluteUrl(\"/media/users/300_22.jpg\")\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"Anna Strong\",\r\n    description: \"Software Developer\",\r\n    iconImage: toAbsoluteUrl(\"/media/users/300_5.jpg\")\r\n  },\r\n  {\r\n    type: 0,\r\n    text: \"Files\"\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"2 New items submitted\",\r\n    description: \"Marketing Manager\",\r\n    iconClassName: \"flaticon2-box kt-font-danger\"\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"79 PSD files generated\",\r\n    description: \"by Grog John\",\r\n    iconClassName: \"flaticon-psd kt-font-brand\"\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"$2900 worth products sold\",\r\n    description: \"Total 234 items\",\r\n    iconClassName: \"flaticon2-supermarket kt-font-warning\"\r\n  },\r\n  {\r\n    type: 1,\r\n    text: \"4 New items submitted\",\r\n    description: \"Marketing Manager\",\r\n    iconClassName: \"flaticon-safe-shield-protection kt-font-info\"\r\n  }\r\n];\r\n\r\nexport default class SearchDropdown extends React.Component {\r\n  buttonRef = createRef();\r\n  state = { loading: false, data: null, searchValue: \"\" };\r\n\r\n  clearTimeout() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = undefined;\r\n    }\r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    this.setState({ data: null, searchValue: event.target.value });\r\n\r\n    if (event.target.value.length > 2) {\r\n      this.clearTimeout();\r\n\r\n      this.setState({ loading: true });\r\n\r\n      // simulate getting search result\r\n      this.timeoutId = setTimeout(() => {\r\n        this.setState({ data: fakeData, loading: false });\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  clear = () => {\r\n    this.setState({ data: null, searchValue: \"\" });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.clearTimeout();\r\n  }\r\n\r\n  render() {\r\n    const { data, loading, searchValue } = this.state;\r\n    const { useSVG, icon, iconType } = this.props;\r\n    return (\r\n      <Dropdown\r\n        alignRight\r\n        className=\"kt-header__topbar-item kt-header__topbar-item--search\"\r\n        drop=\"down\"\r\n        onToggle={() => {\r\n          this.setState({\r\n            data: null,\r\n            loading: false,\r\n            searchValue: \"\"\r\n          });\r\n        }}\r\n      >\r\n        <Dropdown.Toggle as={HeaderDropdownToggle} id=\"dropdown-toggle-search\">\r\n          <span\r\n            className={clsx(\"kt-header__topbar-icon\", {\r\n              [`kt-header__topbar-icon--${iconType}`]: iconType\r\n            })}\r\n          >\r\n            {!useSVG ? (\r\n              <i className={icon} />\r\n            ) : (\r\n              <span className=\"kt-svg-icon\">\r\n                <SearchIcon />\r\n              </span>\r\n            )}\r\n          </span>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-lg\">\r\n          <div\r\n            id=\"kt_quick_search_dropdown\"\r\n            className={clsx(\r\n              \"kt-quick-search kt-quick-search--dropdown kt-quick-search--result-compact\",\r\n              {\r\n                \"kt-quick-search--has-result\": data && data.length\r\n              }\r\n            )}\r\n          >\r\n            <form className=\"kt-quick-search__form\">\r\n              <div\r\n                className={clsx(\"input-group\", {\r\n                  \"kt-spinner kt-spinner--input kt-spinner--sm kt-spinner--brand kt-spinner--right\": loading\r\n                })}\r\n              >\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"flaticon2-search-1\" />\r\n                  </span>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  autoFocus={true}\r\n                  placeholder=\"Search...\"\r\n                  value={searchValue}\r\n                  onChange={this.handleSearchChange}\r\n                  className=\"form-control kt-quick-search__input\"\r\n                />\r\n\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">\r\n                    <i\r\n                      style={{ display: \"flex\" }}\r\n                      onClick={this.clear}\r\n                      hidden={!data || (data && !data.length)}\r\n                      className=\"la la-close kt-quick-search__close\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <PerfectScrollbar\r\n              className=\"kt-quick-search__wrapper kt-scroll\"\r\n              data-height=\"325\"\r\n              data-mobile-height=\"200\"\r\n              data-scroll=\"true\"\r\n              options={perfectScrollbarOptions}\r\n              style={{ maxHeight: \"40vh\"}}\r\n            >\r\n              <SearchResult data={data} />\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Code / Compiling\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Code-/-Compiling\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.56066017,10.6819805 L4.68198052,8.56066017 C5.26776695,7.97487373 6.21751442,7.97487373 6.80330086,8.56066017 L8.9246212,10.6819805 C9.51040764,11.267767 9.51040764,12.2175144 8.9246212,12.8033009 L6.80330086,14.9246212 C6.21751442,15.5104076 5.26776695,15.5104076 4.68198052,14.9246212 L2.56066017,12.8033009 C1.97487373,12.2175144 1.97487373,11.267767 2.56066017,10.6819805 Z M14.5606602,10.6819805 L16.6819805,8.56066017 C17.267767,7.97487373 18.2175144,7.97487373 18.8033009,8.56066017 L20.9246212,10.6819805 C21.5104076,11.267767 21.5104076,12.2175144 20.9246212,12.8033009 L18.8033009,14.9246212 C18.2175144,15.5104076 17.267767,15.5104076 16.6819805,14.9246212 L14.5606602,12.8033009 C13.9748737,12.2175144 13.9748737,11.267767 14.5606602,10.6819805 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.56066017,16.6819805 L10.6819805,14.5606602 C11.267767,13.9748737 12.2175144,13.9748737 12.8033009,14.5606602 L14.9246212,16.6819805 C15.5104076,17.267767 15.5104076,18.2175144 14.9246212,18.8033009 L12.8033009,20.9246212 C12.2175144,21.5104076 11.267767,21.5104076 10.6819805,20.9246212 L8.56066017,18.8033009 C7.97487373,18.2175144 7.97487373,17.267767 8.56066017,16.6819805 Z M8.56066017,4.68198052 L10.6819805,2.56066017 C11.267767,1.97487373 12.2175144,1.97487373 12.8033009,2.56066017 L14.9246212,4.68198052 C15.5104076,5.26776695 15.5104076,6.21751442 14.9246212,6.80330086 L12.8033009,8.9246212 C12.2175144,9.51040764 11.267767,9.51040764 10.6819805,8.9246212 L8.56066017,6.80330086 C7.97487373,6.21751442 7.97487373,5.26776695 8.56066017,4.68198052 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\"\n}));\n\nvar SvgCompiling = function SvgCompiling(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCompiling, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Compiling.2b249961.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Nav, Tab, Dropdown } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\nimport { ReactComponent as CompilingIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Compiling.svg\";\r\n\r\nconst perfectScrollbarOptions = {\r\n  wheelSpeed: 2,\r\n  wheelPropagation: false\r\n};\r\n\r\nexport default class UserNotifications extends React.Component {\r\n  state = { key: \"Alerts\" };\r\n\r\n  getHeaderTopBarCssClassList = () => {\r\n    let result = \"kt-header__topbar-icon \";\r\n    if (this.props.pulse) {\r\n      result += \"kt-pulse kt-pulse--brand \";\r\n    }\r\n\r\n    const { iconType } = this.props;\r\n    if (iconType) {\r\n      result += `kt-header__topbar-icon--${iconType}`;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  getSvgCssClassList = () => {\r\n    let result = \"kt-svg-icon \";\r\n    const { iconType } = this.props;\r\n    if (iconType) {\r\n      result += `kt-svg-icon--${iconType}`;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  getHetBackGroundCssClassList = () => {\r\n    let result = \"kt-head \";\r\n    if (this.props.skin) {\r\n      result += `kt-head--skin-${this.props.skin} `;\r\n    }\r\n\r\n    result += \"kt-head--fit-x kt-head--fit-b\";\r\n    return result;\r\n  };\r\n\r\n  backGroundStyle = () => {\r\n    if (!this.props.bgImage) {\r\n      return \"none\";\r\n    }\r\n\r\n    return \"url(\" + this.props.bgImage + \")\";\r\n  };\r\n\r\n  userNotificationsButtonCssClassList = () => {\r\n    let result = \"btn \";\r\n    if (this.props.type) {\r\n      result += `btn-${this.props.type} `;\r\n    }\r\n\r\n    result += \"btn-sm btn-bold btn-font-md\";\r\n    return result;\r\n  };\r\n\r\n  ulTabsClassList = () => {\r\n    let result = \"nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x  \";\r\n    if (this.props.type) {\r\n      result += `nav-tabs-line-${this.props.type} `;\r\n    }\r\n\r\n    result += \"kt-notification-item-padding-x\";\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const { key } = this.state;\r\n    const { useSVG, icon, pulse } = this.props;\r\n    return (\r\n      <Dropdown className=\"kt-header__topbar-item\" drop=\"down\" alignRight>\r\n        <Dropdown.Toggle\r\n          as={HeaderDropdownToggle}\r\n          id=\"dropdown-toggle-user-notifications\"\r\n        >\r\n          <span className={this.getHeaderTopBarCssClassList()}>\r\n            {!useSVG && <i className={icon} />}\r\n\r\n            {useSVG && (\r\n              <span className={this.getSvgCssClassList()}>\r\n                <CompilingIcon />\r\n              </span>\r\n            )}\r\n\r\n            <span className=\"kt-pulse__ring\" hidden={!pulse} />\r\n          </span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-lg\">\r\n          <form>\r\n            {/** Head */}\r\n            <div\r\n              className={this.getHetBackGroundCssClassList()}\r\n              style={{ backgroundImage: this.backGroundStyle() }}\r\n            >\r\n              <h3 className=\"kt-head__title\">\r\n                User Notifications&nbsp;\r\n                <span className={this.userNotificationsButtonCssClassList()}>\r\n                  23 new\r\n                </span>\r\n              </h3>\r\n\r\n              <Tab.Container\r\n                defaultActiveKey={key}\r\n                className={this.ulTabsClassList()}\r\n              >\r\n                <Nav\r\n                  className={this.ulTabsClassList()}\r\n                  onSelect={_key => this.setState({ key: _key })}\r\n                >\r\n                  <Nav.Item className=\"nav-item\">\r\n                    <Nav.Link eventKey=\"Alerts\" className=\"nav-link show\">\r\n                      Alerts\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"Events\" className=\"nav-link show\">\r\n                      Events\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"Logs\" className=\"nav-link show\">\r\n                      Logs\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"Alerts\">\r\n                    <PerfectScrollbar\r\n                      options={perfectScrollbarOptions}\r\n                      style={{ maxHeight: \"100vh\", position: \"relative\" }}\r\n                    >\r\n                      <div\r\n                        className=\"kt-notification kt-margin-t-10 kt-margin-b-10\"\r\n                        style={{ maxHeight: \"40vh\", position: \"relative\" }}\r\n                      >\r\n                        <div\r\n                          className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                          data-scroll=\"true\"\r\n                          data-height=\"300\"\r\n                          data-mobile-height=\"200\"\r\n                        >\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-line-chart kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New order has been received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                2 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-box-1 kt-font-brand\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer is registered\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-chart2 kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Application has been approved\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-image-file kt-font-warning\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New file has been uploaded\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                5 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-bar-chart kt-font-info\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New user feedback received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                8 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-pie-chart-2 kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                System reboot has been successfully completed\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                12 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-favourite kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New order has been placed\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                15 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item kt-notification__item--read\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-safe kt-font-primary\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Company meeting canceled\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                19 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-psd kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New report has been received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                23 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon-download-1 kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Finance report has been generated\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                25 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon-security kt-font-warning\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer comment recieved\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                2 days ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-pie-chart kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer is registered\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 days ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </PerfectScrollbar>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"Events\">\r\n                    <PerfectScrollbar\r\n                      options={perfectScrollbarOptions}\r\n                      style={{ maxHeight: \"100vh\", position: \"relative\" }}\r\n                    >\r\n                      <div\r\n                        className=\"kt-notification kt-margin-t-10 kt-margin-b-10\"\r\n                        style={{ maxHeight: \"40vh\", position: \"relative\" }}\r\n                      >\r\n                        <div\r\n                          className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                          data-scroll=\"true\"\r\n                          data-height=\"300\"\r\n                          data-mobile-height=\"200\"\r\n                        >\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-psd kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New report has been received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                23 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon-download-1 kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Finance report has been generated\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                25 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-line-chart kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New order has been received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                2 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-box-1 kt-font-brand\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer is registered\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-chart2 kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Application has been approved\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-image-file kt-font-warning\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New file has been uploaded\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                5 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-bar-chart kt-font-info\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New user feedback received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                8 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-pie-chart-2 kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                System reboot has been successfully completed\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                12 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-favourite kt-font-brand\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New order has been placed\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                15 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item kt-notification__item--read\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-safe kt-font-primary\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Company meeting canceled\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                19 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-psd kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New report has been received\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                23 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon-download-1 kt-font-danger\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                Finance report has been generated\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                25 hrs ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon-security kt-font-warning\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer comment recieved\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                2 days ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                          <a className=\"kt-notification__item\">\r\n                            <div className=\"kt-notification__item-icon\">\r\n                              <i className=\"flaticon2-pie-chart kt-font-success\" />\r\n                            </div>\r\n                            <div className=\"kt-notification__item-details\">\r\n                              <div className=\"kt-notification__item-title\">\r\n                                New customer is registered\r\n                              </div>\r\n                              <div className=\"kt-notification__item-time\">\r\n                                3 days ago\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </PerfectScrollbar>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"Logs\">\r\n                    <div\r\n                      className=\"kt-grid kt-grid--ver\"\r\n                      style={{ minHeight: \"200px\" }}\r\n                    >\r\n                      <div className=\"kt-grid kt-grid--hor kt-grid__item kt-grid__item--fluid kt-grid__item--middle\">\r\n                        <div className=\"kt-grid__item kt-grid__item--middle kt-align-center\">\r\n                          All caught up!\r\n                          <br />\r\n                          No new notifications.\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </div>\r\n          </form>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Shopping / Cart3\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Shopping-/-Cart3\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12,4.56204994 L7.76822128,9.6401844 C7.4146572,10.0644613 6.7840925,10.1217854 6.3598156,9.76822128 C5.9355387,9.4146572 5.87821464,8.7840925 6.23177872,8.3598156 L11.2317787,2.3598156 C11.6315738,1.88006147 12.3684262,1.88006147 12.7682213,2.3598156 L17.7682213,8.3598156 C18.1217854,8.7840925 18.0644613,9.4146572 17.6401844,9.76822128 C17.2159075,10.1217854 16.5853428,10.0644613 16.2317787,9.6401844 L12,4.56204994 Z\",\n  id: \"Path-30\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.5,9 L20.5,9 C21.0522847,9 21.5,9.44771525 21.5,10 C21.5,10.132026 21.4738562,10.2627452 21.4230769,10.3846154 L17.7692308,19.1538462 C17.3034221,20.271787 16.2111026,21 15,21 L9,21 C7.78889745,21 6.6965779,20.271787 6.23076923,19.1538462 L2.57692308,10.3846154 C2.36450587,9.87481408 2.60558331,9.28934029 3.11538462,9.07692308 C3.23725479,9.02614384 3.36797398,9 3.5,9 Z M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.8954305 13.1045695,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\"\n}));\n\nvar SvgCartNum3 = function SvgCartNum3(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCartNum3, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/CartNum3.41e04e34.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\nimport { ReactComponent as CartNum3Icon } from \"../../../_metronic/layout/assets/layout-svg-icons/CartNum3.svg\";\r\n\r\nconst perfectScrollbarOptions = {\r\n  wheelSpeed: 2,\r\n  wheelPropagation: false\r\n};\r\n\r\nexport default class MyCart extends React.Component {\r\n  render() {\r\n    const { bgImage, useSVG, icon, iconType } = this.props;\r\n\r\n    return (\r\n      <Dropdown className=\"kt-header__topbar-item\" drop=\"down\" alignRight>\r\n        <Dropdown.Toggle as={HeaderDropdownToggle} id=\"dropdown-toggle-my-cart\">\r\n          <span\r\n            className={clsx(\"kt-header__topbar-icon\", {\r\n              \"kt-header__topbar-icon--brand\": iconType === \"brand\"\r\n            })}\r\n          >\r\n            {!useSVG && <i className={icon} />}\r\n\r\n            {useSVG && (\r\n              <span\r\n                className={clsx(\"kt-svg-icon\", {\r\n                  \"kt-svg-icon-brand\": iconType === \"brand\"\r\n                })}\r\n              >\r\n                <CartNum3Icon className=\"kt-svg-icon kt-svg-icon--primary\" />\r\n              </span>\r\n            )}\r\n          </span>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl\">\r\n          <form className=\"flex-column p-0\">\r\n            <div className=\"kt-mycart\">\r\n              <div\r\n                className=\"kt-mycart__head kt-head\"\r\n                style={{ backgroundImage: `url(${bgImage})` }}\r\n              >\r\n                <div className=\"kt-mycart__info\">\r\n                  <span className=\"kt-mycart__icon\">\r\n                    <i className=\"flaticon2-shopping-cart-1 kt-font-success\" />\r\n                  </span>\r\n                  <h3 className=\"kt-mycart__title\">My Cart</h3>\r\n                </div>\r\n                <div className=\"kt-mycart__button\">\r\n                  <button type=\"button\" className=\"btn btn-success btn-sm\">\r\n                    2 Items\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <PerfectScrollbar\r\n                options={perfectScrollbarOptions}\r\n                style={{ maxHeight: \"35vh\", position: \"relative\" }}\r\n              >\r\n                <div className=\"kt-mycart__body\">\r\n                  <div className=\"kt-mycart__item\">\r\n                    <div className=\"kt-mycart__container\">\r\n                      <div className=\"kt-mycart__info\">\r\n                        <Link to=\"cart-item\" className=\"kt-mycart__title\">\r\n                          Samsung\r\n                        </Link>\r\n                        <span className=\"kt-mycart__desc\">\r\n                          Profile info, Timeline etc\r\n                        </span>\r\n\r\n                        <div className=\"kt-mycart__action\">\r\n                          <span className=\"kt-mycart__price\">$ 450</span>\r\n                          <span className=\"kt-mycart__text\">for</span>\r\n                          <span className=\"kt-mycart__quantity\">7</span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            −\r\n                          </span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Link to=\"cart-item\" className=\"kt-mycart__pic\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/products/product9.jpg\")}\r\n                          alt=\"product\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"kt-mycart__item\">\r\n                    <div className=\"kt-mycart__container\">\r\n                      <div className=\"kt-mycart__info\">\r\n                        <Link to=\"cart-item\" className=\"kt-mycart__title\">\r\n                          Panasonic\r\n                        </Link>\r\n\r\n                        <span className=\"kt-mycart__desc\">\r\n                          For PHoto &amp; Others\r\n                        </span>\r\n\r\n                        <div className=\"kt-mycart__action\">\r\n                          <span className=\"kt-mycart__price\">$ 329</span>\r\n                          <span className=\"kt-mycart__text\">for</span>\r\n                          <span className=\"kt-mycart__quantity\">1</span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            −\r\n                          </span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Link to=\"cart-item\" className=\"kt-mycart__pic\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/products/product13.jpg\")}\r\n                          alt=\"product\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"kt-mycart__item\">\r\n                    <div className=\"kt-mycart__container\">\r\n                      <div className=\"kt-mycart__info\">\r\n                        <Link to=\"cart-item\" className=\"kt-mycart__title\">\r\n                          Fujifilm\r\n                        </Link>\r\n                        <span className=\"kt-mycart__desc\">\r\n                          Profile info, Timeline etc\r\n                        </span>\r\n\r\n                        <div className=\"kt-mycart__action\">\r\n                          <span className=\"kt-mycart__price\">$ 520</span>\r\n                          <span className=\"kt-mycart__text\">for</span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            −\r\n                          </span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Link to=\"cart-item\" className=\"kt-mycart__pic\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/products/product16.jpg\")}\r\n                          alt=\"product\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"kt-mycart__item\">\r\n                    <div className=\"kt-mycart__container\">\r\n                      <div className=\"kt-mycart__info\">\r\n                        <Link to=\"cart-item\" className=\"kt-mycart__title\">\r\n                          Candy Machine\r\n                        </Link>\r\n\r\n                        <span className=\"kt-mycart__desc\">\r\n                          For PHoto &amp; Others\r\n                        </span>\r\n\r\n                        <div className=\"kt-mycart__action\">\r\n                          <span className=\"kt-mycart__price\">$ 784</span>\r\n                          <span className=\"kt-mycart__text\">for</span>\r\n                          <span className=\"kt-mycart__quantity\">4</span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            −\r\n                          </span>\r\n                          <span className=\"btn btn-label-success btn-icon\">\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Link to=\"cart-item\" className=\"kt-mycart__pic\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/products/product15.jpg\")}\r\n                          title=\"\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </PerfectScrollbar>\r\n\r\n              <div className=\"kt-mycart__footer\">\r\n                <div className=\"kt-mycart__section\">\r\n                  <div className=\"kt-mycart__subtitel\">\r\n                    <span>Sub Total</span>\r\n                    <span>Taxes</span>\r\n                    <span>Total</span>\r\n                  </div>\r\n\r\n                  <div className=\"kt-mycart__prices\">\r\n                    <span>$ 840.00</span>\r\n                    <span>$ 72.00</span>\r\n                    <span className=\"kt-font-brand\">$ 912.00</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"kt-mycart__button kt-align-right\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                    Place Order\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Media / Equalizer\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Media-/-Equalizer\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-62-Copy\",\n  fill: \"#000000\",\n  opacity: 0.3,\n  x: 13,\n  y: 4,\n  width: 3,\n  height: 16,\n  rx: 1.5\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-62-Copy-2\",\n  fill: \"#000000\",\n  x: 8,\n  y: 9,\n  width: 3,\n  height: 11,\n  rx: 1.5\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-62-Copy-4\",\n  fill: \"#000000\",\n  x: 18,\n  y: 11,\n  width: 3,\n  height: 9,\n  rx: 1.5\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-62-Copy-3\",\n  fill: \"#000000\",\n  x: 3,\n  y: 13,\n  width: 3,\n  height: 7,\n  rx: 1.5\n}));\n\nvar SvgEqualizer = function SvgEqualizer(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEqualizer, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Equalizer.8eae8061.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Shopping / Euro\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Shopping-/-Euro\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.3618034,10.2763932 L4.8618034,9.2763932 C4.94649941,9.10700119 5.11963097,9 5.30901699,9 L15.190983,9 C15.4671254,9 15.690983,9.22385763 15.690983,9.5 C15.690983,9.57762255 15.6729105,9.65417908 15.6381966,9.7236068 L15.1381966,10.7236068 C15.0535006,10.8929988 14.880369,11 14.690983,11 L4.80901699,11 C4.53287462,11 4.30901699,10.7761424 4.30901699,10.5 C4.30901699,10.4223775 4.32708954,10.3458209 4.3618034,10.2763932 Z M14.6381966,13.7236068 L14.1381966,14.7236068 C14.0535006,14.8929988 13.880369,15 13.690983,15 L4.80901699,15 C4.53287462,15 4.30901699,14.7761424 4.30901699,14.5 C4.30901699,14.4223775 4.32708954,14.3458209 4.3618034,14.2763932 L4.8618034,13.2763932 C4.94649941,13.1070012 5.11963097,13 5.30901699,13 L14.190983,13 C14.4671254,13 14.690983,13.2238576 14.690983,13.5 C14.690983,13.5776225 14.6729105,13.6541791 14.6381966,13.7236068 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.369,7.618 C16.976998,7.08599734 16.4660031,6.69750122 15.836,6.4525 C15.2059968,6.20749878 14.590003,6.085 13.988,6.085 C13.2179962,6.085 12.5180032,6.2249986 11.888,6.505 C11.2579969,6.7850014 10.7155023,7.16999755 10.2605,7.66 C9.80549773,8.15000245 9.45550123,8.72399671 9.2105,9.382 C8.96549878,10.0400033 8.843,10.7539961 8.843,11.524 C8.843,12.3360041 8.96199881,13.0779966 9.2,13.75 C9.43800119,14.4220034 9.7774978,14.9994976 10.2185,15.4825 C10.6595022,15.9655024 11.1879969,16.3399987 11.804,16.606 C12.4200031,16.8720013 13.1129962,17.005 13.883,17.005 C14.681004,17.005 15.3879969,16.8475016 16.004,16.5325 C16.6200031,16.2174984 17.1169981,15.8010026 17.495,15.283 L19.616,16.774 C18.9579967,17.6000041 18.1530048,18.2404977 17.201,18.6955 C16.2489952,19.1505023 15.1360064,19.378 13.862,19.378 C12.6999942,19.378 11.6325049,19.1855019 10.6595,18.8005 C9.68649514,18.4154981 8.8500035,17.8765035 8.15,17.1835 C7.4499965,16.4904965 6.90400196,15.6645048 6.512,14.7055 C6.11999804,13.7464952 5.924,12.6860058 5.924,11.524 C5.924,10.333994 6.13049794,9.25950479 6.5435,8.3005 C6.95650207,7.34149521 7.5234964,6.52600336 8.2445,5.854 C8.96550361,5.18199664 9.8159951,4.66400182 10.796,4.3 C11.7760049,3.93599818 12.8399943,3.754 13.988,3.754 C14.4640024,3.754 14.9609974,3.79949954 15.479,3.8905 C15.9970026,3.98150045 16.4939976,4.12149906 16.97,4.3105 C17.4460024,4.49950095 17.8939979,4.7339986 18.314,5.014 C18.7340021,5.2940014 19.0909985,5.62999804 19.385,6.022 L17.369,7.618 Z\",\n  id: \"C\",\n  fill: \"#000000\"\n}));\n\nvar SvgEuro = function SvgEuro(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEuro, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Euro.29f878b2.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Communication / Mail-attachment\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Communication-/-Mail-attachment\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.8571499,13 C14.9499122,12.7223297 15,12.4263059 15,12.1190476 L15,6.88095238 C15,5.28984632 13.6568542,4 12,4 L11.7272727,4 C10.2210416,4 9,5.17258756 9,6.61904762 L10.0909091,6.61904762 C10.0909091,5.75117158 10.823534,5.04761905 11.7272727,5.04761905 L12,5.04761905 C13.0543618,5.04761905 13.9090909,5.86843034 13.9090909,6.88095238 L13.9090909,12.1190476 C13.9090909,12.4383379 13.8240964,12.7385644 13.6746497,13 L10.3253503,13 C10.1759036,12.7385644 10.0909091,12.4383379 10.0909091,12.1190476 L10.0909091,9.5 C10.0909091,9.06606198 10.4572216,8.71428571 10.9090909,8.71428571 C11.3609602,8.71428571 11.7272727,9.06606198 11.7272727,9.5 L11.7272727,11.3333333 L12.8181818,11.3333333 L12.8181818,9.5 C12.8181818,8.48747796 11.9634527,7.66666667 10.9090909,7.66666667 C9.85472911,7.66666667 9,8.48747796 9,9.5 L9,12.1190476 C9,12.4263059 9.0500878,12.7223297 9.14285008,13 L6,13 C5.44771525,13 5,12.5522847 5,12 L5,3 C5,2.44771525 5.44771525,2 6,2 L18,2 C18.5522847,2 19,2.44771525 19,3 L19,12 C19,12.5522847 18.5522847,13 18,13 L14.8571499,13 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9,10.3333333 L9,12.1190476 C9,13.7101537 10.3431458,15 12,15 C13.6568542,15 15,13.7101537 15,12.1190476 L15,10.3333333 L20.2072547,6.57253826 C20.4311176,6.4108595 20.7436609,6.46126971 20.9053396,6.68513259 C20.9668779,6.77033951 21,6.87277228 21,6.97787787 L21,17 C21,18.1045695 20.1045695,19 19,19 L5,19 C3.8954305,19 3,18.1045695 3,17 L3,6.97787787 C3,6.70173549 3.22385763,6.47787787 3.5,6.47787787 C3.60510559,6.47787787 3.70753836,6.51099993 3.79274528,6.57253826 L9,10.3333333 Z M10.0909091,11.1212121 L12,12.5 L13.9090909,11.1212121 L13.9090909,12.1190476 C13.9090909,13.1315697 13.0543618,13.952381 12,13.952381 C10.9456382,13.952381 10.0909091,13.1315697 10.0909091,12.1190476 L10.0909091,11.1212121 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\"\n}));\n\nvar SvgMailAttachment = function SvgMailAttachment(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMailAttachment, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Mail-attachment.450b3dd3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Shopping / Box2\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Shopping-/-Box2\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4,9.67471899 L10.880262,13.6470401 C10.9543486,13.689814 11.0320333,13.7207107 11.1111111,13.740321 L11.1111111,21.4444444 L4.49070127,17.526473 C4.18655139,17.3464765 4,17.0193034 4,16.6658832 L4,9.67471899 Z M20,9.56911707 L20,16.6658832 C20,17.0193034 19.8134486,17.3464765 19.5092987,17.526473 L12.8888889,21.4444444 L12.8888889,13.6728275 C12.9050191,13.6647696 12.9210067,13.6561758 12.9368301,13.6470401 L20,9.56911707 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.21611835,7.74669402 C4.30015839,7.64056877 4.40623188,7.55087574 4.5299008,7.48500698 L11.5299008,3.75665466 C11.8237589,3.60013944 12.1762411,3.60013944 12.4700992,3.75665466 L19.4700992,7.48500698 C19.5654307,7.53578262 19.6503066,7.60071528 19.7226939,7.67641889 L12.0479413,12.1074394 C11.9974761,12.1365754 11.9509488,12.1699127 11.9085461,12.2067543 C11.8661433,12.1699127 11.819616,12.1365754 11.7691509,12.1074394 L4.21611835,7.74669402 Z\",\n  id: \"Path\",\n  fill: \"#000000\",\n  opacity: 0.3\n}));\n\nvar SvgBoxNum2 = function SvgBoxNum2(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBoxNum2, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/BoxNum2.4f024802.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Communication / Group\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Communication-/-Group\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Shape\",\n  points: \"0 0 24 0 24 24 0 24\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\"\n}));\n\nvar SvgGroup = function SvgGroup(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGroup, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Group.e338db2a.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\nimport { ReactComponent as EqualizerIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Equalizer.svg\";\r\nimport { ReactComponent as EuroIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Euro.svg\";\r\nimport { ReactComponent as MailAttachmentIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Mail-attachment.svg\";\r\nimport { ReactComponent as BoxNum2Icon } from \"../../../_metronic/layout/assets/layout-svg-icons/BoxNum2.svg\";\r\nimport { ReactComponent as GroupIcon } from \"../../../_metronic/layout/assets/layout-svg-icons/Group.svg\";\r\n\r\nexport default class QuickActionsPanel extends React.Component {\r\n  render() {\r\n    const { icon, useSVG, bgImage, iconType, gridNavSkin } = this.props;\r\n    return (\r\n      <Dropdown className=\"kt-header__topbar-item\" drop=\"down\" alignRight>\r\n        <Dropdown.Toggle\r\n          as={HeaderDropdownToggle}\r\n          id=\"dropdown-toggle-quick-actions-panel-toggle\"\r\n        >\r\n          <span\r\n            className={clsx(`kt-header__topbar-icon`, {\r\n              \"kt-header__topbar-icon--warning\": iconType === \"warning\"\r\n            })}\r\n          >\r\n            {!useSVG && <i className={icon} />}\r\n\r\n            {useSVG && (\r\n              <span\r\n                className={clsx(\"kt-svg-icon\", {\r\n                  \"kt-svg-icon--warning\": iconType === \"warning\"\r\n                })}\r\n              >\r\n                <EqualizerIcon className=\"kt-svg-icon kt-svg-icon--primary kt-svg-icon--lg\" />\r\n              </span>\r\n            )}\r\n          </span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl\">\r\n          <form className=\"flex-column p-0\">\r\n            {/* begin: Head */}\r\n            <div\r\n              className={`kt-head kt-head--skin-${{ gridNavSkin }}`}\r\n              style={{ backgroundImage: `url(${bgImage})` }}\r\n            >\r\n              <h3 className=\"kt-head__title text-white\">\r\n                User Quick Actions\r\n                <span className=\"kt-space-15\" />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-sm btn-bold btn-font-md\"\r\n                >\r\n                  23 tasks pending\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            {/* end: Head */}\r\n\r\n            <div className={`kt-grid-nav kt-grid-nav--skin-${gridNavSkin}`}>\r\n              <div className=\"kt-grid-nav__row\">\r\n                <a className=\"kt-grid-nav__item\">\r\n                  <EuroIcon className=\"kt-svg-icon kt-svg-icon--success kt-svg-icon--lg\" />\r\n                  <span className=\"kt-grid-nav__title\">Accounting</span>\r\n                  <span className=\"kt-grid-nav__desc\">eCommerce</span>\r\n                </a>\r\n\r\n                <a className=\"kt-grid-nav__item\">\r\n                  <div className=\"d-flex align-items-center flex-column\">\r\n                    <span className=\"kt-grid-nav__icon\">\r\n                      <MailAttachmentIcon className=\"kt-svg-icon kt-svg-icon--success kt-svg-icon--lg\" />\r\n                    </span>\r\n                    <span className=\"kt-grid-nav__title\">Administration</span>\r\n                    <span className=\"kt-grid-nav__desc\">Console</span>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"kt-grid-nav__row\">\r\n                <a className=\"kt-grid-nav__item\">\r\n                  <div className=\"d-flex align-items-center flex-column\">\r\n                    <span className=\"kt-grid-nav__icon\">\r\n                      <BoxNum2Icon className=\"kt-svg-icon kt-svg-icon--success kt-svg-icon--lg\" />\r\n                    </span>\r\n                    <span className=\"kt-grid-nav__title\">Projects</span>\r\n                    <span className=\"kt-grid-nav__desc\">Pending Tasks</span>\r\n                  </div>\r\n                </a>\r\n\r\n                <a className=\"kt-grid-nav__item\">\r\n                  <div className=\"d-flex align-items-center flex-column\">\r\n                    <span className=\"kt-grid-nav__icon\">\r\n                      <GroupIcon className=\"kt-svg-icon kt-svg-icon--success kt-svg-icon--lg\" />\r\n                    </span>\r\n                    <span className=\"kt-grid-nav__title\">Customers</span>\r\n                    <span className=\"kt-grid-nav__desc\">Latest cases</span>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Layout / Layout-4-blocks\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Layout-/-Layout-4-blocks\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-7\",\n  fill: \"#000000\",\n  x: 4,\n  y: 4,\n  width: 7,\n  height: 7,\n  rx: 1.5\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  opacity: 0.3\n}));\n\nvar SvgLayout4Blocks = function SvgLayout4Blocks(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLayout4Blocks, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Layout-4-blocks.88f64560.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { metronic, toAbsoluteUrl } from \"../../../_metronic\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\n\r\nconst languages = [\r\n  {\r\n    lang: \"en\",\r\n    name: \"English\",\r\n    flag: toAbsoluteUrl(\"/media/flags/260-united-kingdom.svg\")\r\n  },\r\n  {\r\n    lang: \"zh\",\r\n    name: \"Mandarin\",\r\n    flag: toAbsoluteUrl(\"/media/flags/034-china.svg\")\r\n  },\r\n  {\r\n    lang: \"es\",\r\n    name: \"Spanish\",\r\n    flag: toAbsoluteUrl(\"/media/flags/128-spain.svg\")\r\n  },\r\n  {\r\n    lang: \"ja\",\r\n    name: \"Japanese\",\r\n    flag: toAbsoluteUrl(\"/media/flags/063-japan.svg\")\r\n  },\r\n  {\r\n    lang: \"de\",\r\n    name: \"German\",\r\n    flag: toAbsoluteUrl(\"/media/flags/162-germany.svg\")\r\n  },\r\n  {\r\n    lang: \"fr\",\r\n    name: \"French\",\r\n    flag: toAbsoluteUrl(\"/media/flags/195-france.svg\")\r\n  }\r\n];\r\n\r\nclass LanguageSelector extends React.Component {\r\n  render() {\r\n    const { lang, iconType, setLanguage } = this.props;\r\n    const currentLanguage = languages.find(x => x.lang === lang);\r\n    return (\r\n      <Dropdown\r\n        className=\"kt-header__topbar-item kt-header__topbar-item--langs\"\r\n        drop=\"down\" alignRight\r\n      >\r\n        <Dropdown.Toggle as={HeaderDropdownToggle} id=\"dropdown-toggle-my-cart\">\r\n          <span\r\n            className={clsx(\"kt-header__topbar-icon\", {\r\n              \"kt-header__topbar-icon--brand\": iconType === \"brand\"\r\n            })}\r\n          >\r\n            <img src={currentLanguage.flag} alt={currentLanguage.name} />\r\n          </span>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround\">\r\n          <ul className=\"kt-nav kt-margin-t-10 kt-margin-b-10\">\r\n            {languages.map(language => (\r\n              <li\r\n                key={language.lang}\r\n                className={clsx(\"kt-nav__item\", {\r\n                  \"kt-nav__item--active\": language.lang === currentLanguage.lang\r\n                })}\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    setLanguage(language.lang);\r\n                    this.setState({ open: false });\r\n                    setTimeout(()=> window.location.reload(), 400);\r\n                  }}\r\n                  className={clsx(\"kt-nav__link\", {\r\n                    \"kt-nav__link--active\":\r\n                      language.lang === currentLanguage.lang\r\n                  })}\r\n                >\r\n                  <span className=\"kt-nav__link-icon\">\r\n                    <img src={language.flag} alt={language.name} />\r\n                  </span>\r\n                  <span className=\"kt-nav__link-text\">{language.name}</span>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ i18n }) => ({ lang: i18n.lang });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  metronic.i18n.actions\r\n)(LanguageSelector);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { ReactComponent as Layout4BlocksIcon } from \"../assets/layout-svg-icons/Layout-4-blocks.svg\";\r\nimport KTOffcanvas from \"../../_assets/js/offcanvas\";\r\n\r\nexport default class QuickPanelToggler extends React.Component {\r\n  componentDidMount() {\r\n    // eslint-disable-next-line\r\n    const panel = document.getElementById(\"kt_quick_panel\");\r\n\r\n    // eslint-disable-next-line\r\n    const offCanvas = new KTOffcanvas(panel, {\r\n      overlay: true,\r\n      baseClass: \"kt-quick-panel\",\r\n      closeBy: \"kt_quick_panel_close_btn\",\r\n      toggleBy: \"kt_quick_panel_toggler_btn\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={<Tooltip id=\"quick-panel-tooltip\">Quick panel</Tooltip>}\r\n        >\r\n          <div\r\n            className=\"kt-header__topbar-item kt-header__topbar-item--quick-panel\"\r\n            data-toggle=\"kt-tooltip\"\r\n            title=\"Quick panel\"\r\n            data-placement=\"right\"\r\n          >\r\n            <span\r\n              className=\"kt-header__topbar-icon\"\r\n              id=\"kt_quick_panel_toggler_btn\"\r\n            >\r\n              <Layout4BlocksIcon />\r\n            </span>\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { connect } from \"react-redux\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic\";\r\nimport HeaderDropdownToggle from \"../content/CustomDropdowns/HeaderDropdownToggle\";\r\nimport { Avatar, Icon } from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport _ from \"lodash\"\r\n\r\nclass UserProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n\r\n    const { auth, showHi, showAvatar, showBadge } = this.props;\r\n    const avatar = _.get(auth, 'user.avatar')\r\n    const email = _.get(auth, 'user.email')\r\n\r\n    return (\r\n      <Dropdown className=\"kt-header__topbar-item kt-header__topbar-item--user\" drop=\"down\" alignRight>\r\n        <Dropdown.Toggle\r\n          as={HeaderDropdownToggle}\r\n          id=\"dropdown-toggle-user-profile\"\r\n        >\r\n          <span style={{\r\n            color: '#FFF',\r\n            fontSize: 14,\r\n            marginRight: 15\r\n          }}>\r\n            Hi, {email}\r\n          </span>\r\n          <div className=\"kt-header__topbar-user\">\r\n            <img src={avatar} style={{\r\n              marginRight: 5,\r\n              width: 40,\r\n              height: 40,\r\n              maxHeight: 'unset',\r\n              borderRadius: '50%'\r\n            }} />\r\n            <KeyboardArrowDownIcon />\r\n          </div>\r\n          <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround\">\r\n            <div className=\"kt-notification\">\r\n              <div className=\"kt-notification__custom\">\r\n                <Link\r\n                  to=\"/profile\"\r\n                >\r\n                  <SettingsIcon />\r\n                Setting\r\n              </Link>\r\n                <Link\r\n                  to=\"/logout\"\r\n                >\r\n                  <ExitToAppIcon />\r\n                Sign Out\r\n              </Link>\r\n              </div>\r\n            </div>\r\n          </Dropdown.Menu>\r\n        </Dropdown.Toggle>\r\n\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React from \"react\";\r\nimport SearchDropdown from \"../../../app/partials/layout/SearchDropdown\";\r\nimport UserNotifications from \"../../../app/partials/layout/UserNotifications\";\r\nimport MyCart from \"../../../app/partials/layout/MyCart\";\r\nimport QuickActionsPanel from \"../../../app/partials/layout/QuickActionsPanel\";\r\nimport QuickPanelToggler from \"./QuickPanelToggle\";\r\nimport LanguageSelector from \"../../../app/partials/layout/LanguageSelector\";\r\nimport UserProfile from \"../../../app/partials/layout/UserProfile\";\r\nimport { toAbsoluteUrl } from \"../../utils/utils\";\r\n\r\nexport default class Topbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"kt-header__topbar\">\r\n        {/*\r\n          <SearchDropdown useSVG=\"true\" />\r\n\r\n        <UserNotifications\r\n          bgImage={toAbsoluteUrl(\"/media/misc/bg-1.jpg\")}\r\n          pulse=\"true\"\r\n          pulseLight=\"false\"\r\n          skin=\"dark\"\r\n          iconType=\"\"\r\n          type=\"success\"\r\n          useSVG=\"true\"\r\n          dot=\"false\"\r\n        />\r\n\r\n        <QuickActionsPanel\r\n          bgImage={toAbsoluteUrl(\"/media/misc/bg-2.jpg\")}\r\n          skin=\"dark\"\r\n          iconType=\"\"\r\n          useSVG=\"true\"\r\n          gridNavSkin=\"light\"\r\n        />\r\n\r\n        <MyCart\r\n          iconType=\"\"\r\n          useSVG=\"true\"\r\n          bgImage={toAbsoluteUrl(\"/media/misc/bg-1.jpg\")}\r\n        />\r\n\r\n          <QuickPanelToggler />\r\n\r\n\r\n          <LanguageSelector iconType=\"\" />\r\n        */}\r\n\r\n        <UserProfile showAvatar={true} showHi={true} showBadge={false} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class HMenuItemInner extends React.Component {\r\n\r\n  itemCssClassWithBullet(item, parentItem) {\r\n    if (item.bullet) {\r\n      return `kt-menu__link-bullet--${item.bullet}`;\r\n    }\r\n\r\n    if (parentItem && parentItem.bullet) {\r\n      return `kt-menu__link-bullet--${parentItem.bullet}`;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  render() {\r\n    const { item, parentItem} = this.props;\r\n    return (\r\n      <>\r\n        {/* if menu item has icon */}\r\n        {item.icon && (\r\n          <i className={`kt-menu__link-icon ${item.icon}`} />\r\n        )}\r\n\r\n        {/* if menu item using bullet */}\r\n        {(!item.icon && (item.bullet || (parentItem && parentItem.bullet))) && (\r\n         <i className={`kt-menu__link-bullet ${this.itemCssClassWithBullet(item, parentItem)}`}><span /></i>\r\n        )}\r\n\r\n        {!item.badge ? (\r\n          <>\r\n            <span className=\"kt-menu__item-here\"/>\r\n            {/* menu item title text */}\r\n            <span className=\"kt-menu__link-text\">{item.title}</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* menu item with badge */}\r\n            <span className=\"kt-menu__link-text\">{item.title}</span>\r\n            <span className=\"kt-menu__link-badge\">\r\n              <span className={`kt-badge kt-badge--brand kt-badge--inline kt-badge--pill ${item.badge.type} `}>\r\n                {item.badge.value}\r\n              </span>\r\n            </span>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport HMenuItem from \"./HMenuItem\";\r\n\r\nexport default class HMenuColumn extends React.Component {\r\n  render() {\r\n    const { item, currentUrl } = this.props;\r\n    return (\r\n      <li className=\"kt-menu__item\">\r\n        {item.heading && (\r\n          <h3 className=\"kt-menu__heading kt-menu__toggle\">\r\n            <span className=\"kt-menu__link-text\">{item.heading.title}</span>\r\n            <i className=\"kt-menu__ver-arrow la la-angle-right\" />\r\n          </h3>\r\n        )}\r\n        {item.items && item.items.length && (\r\n          <ul className=\"kt-menu__inner\">\r\n            {item.items.map((child, index) => {\r\n              return (\r\n                <React.Fragment key={`hmenuColumnInnerColumn${index}`}>\r\n                  <HMenuItem\r\n                    item={child}\r\n                    parentItem={item}\r\n                    currentUrl={currentUrl}\r\n                  />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport clsx from \"clsx\";\r\nimport MenuItemInner from \"./HMenuItemInner\";\r\nimport HMenuColumn from \"./HMenuColumn\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class HMenuItem extends React.Component {\r\n  /**\r\n   * Returns Attribute SubMenu Toggle\r\n   * @param item: any\r\n   */\r\n  getItemAttrSubmenuToggle = item => {\r\n    const toggleEvent = objectPath.get(item, \"toggle\");\r\n    if (toggleEvent === \"click\") {\r\n      return \"click\";\r\n    }\r\n\r\n    if (objectPath.get(item, \"submenu.type\") === \"tabs\") {\r\n      return \"tabs\";\r\n    }\r\n\r\n    return \"hover\";\r\n  };\r\n\r\n  /**\r\n   * Check Menu is active\r\n   * @param item: any\r\n   */\r\n  isMenuItemIsActive = item => {\r\n    if (item.submenu) {\r\n      return this.isMenuRootItemIsActive(item);\r\n    }\r\n\r\n    if (!item.page) {\r\n      return false;\r\n    }\r\n\r\n    return this.props.currentUrl.indexOf(item.page) !== -1;\r\n  };\r\n\r\n  /**\r\n   * Check Menu Root Item is active\r\n   * @param item: any\r\n   */\r\n  isMenuRootItemIsActive = item => {\r\n    if (item.submenu && !item.submenu.type) {\r\n      for (const _subItem of item.submenu) {\r\n        const isActive = this.isMenuItemIsActive(_subItem);\r\n        if (isActive) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (item.submenu && item.submenu.columns) {\r\n      for (const _column of item.submenu.columns) {\r\n        for (const _subItem of _column.items)\r\n        {\r\n          const isActive = this.isMenuItemIsActive(_subItem);\r\n          if (isActive) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Return Css Class Name\r\n   * @param item: any\r\n   */\r\n  getItemCssClasses = item => {\r\n    let classes = \"kt-menu__item\";\r\n\r\n    if (objectPath.get(item, \"submenu\")) {\r\n      classes += \" kt-menu__item--submenu\";\r\n    }\r\n\r\n    const isActive = this.isMenuItemIsActive(item);\r\n    if (!item.submenu && isActive) {\r\n      classes += \" kt-menu__item--active kt-menu__item--here\";\r\n    }\r\n\r\n    if (item.submenu && isActive) {\r\n      classes += \" kt-menu__item--open kt-menu__item--here\";\r\n    }\r\n\r\n    if (objectPath.get(item, \"resizer\")) {\r\n      classes += \" kt-menu__item--resize\";\r\n    }\r\n\r\n    const menuType = objectPath.get(item, \"submenu.type\") || \"classic\";\r\n    if (\r\n      (objectPath.get(item, \"root\") && menuType === \"classic\") ||\r\n      parseInt(objectPath.get(item, \"submenu.width\"), 10) > 0\r\n    ) {\r\n      classes += \" kt-menu__item--rel\";\r\n    }\r\n\r\n    const customClass = objectPath.get(item, \"custom-class\");\r\n    if (customClass) {\r\n      classes += \" \" + customClass;\r\n    }\r\n\r\n    if (objectPath.get(item, \"icon-only\")) {\r\n      classes += \" kt-menu__item--icon-only\";\r\n    }\r\n\r\n    return classes;\r\n  };\r\n\r\n  /**\r\n   * Returns Submenu CSS Class Name\r\n   * @param item: any\r\n   */\r\n  getItemMenuSubmenuClass = item => {\r\n    let classes = \"\";\r\n\r\n    const alignment = objectPath.get(item, \"alignment\") || \"right\";\r\n\r\n    if (alignment) {\r\n      classes += \" kt-menu__submenu--\" + alignment;\r\n    }\r\n\r\n    const type = objectPath.get(item, \"type\") || \"classic\";\r\n    if (type === \"classic\") {\r\n      classes += \" kt-menu__submenu--classic\";\r\n    }\r\n    if (type === \"tabs\") {\r\n      classes += \" kt-menu__submenu--tabs\";\r\n    }\r\n    if (type === \"mega\") {\r\n      if (objectPath.get(item, \"width\")) {\r\n        classes += \" kt-menu__submenu--fixed\";\r\n      }\r\n    }\r\n\r\n    if (objectPath.get(item, \"pull\")) {\r\n      classes += \" kt-menu__submenu--pull\";\r\n    }\r\n\r\n    return classes;\r\n  };\r\n\r\n  render() {\r\n    const { item, parentItem, currentUrl, rootArrowEnabled } = this.props;\r\n    return (\r\n      <li\r\n        className={this.getItemCssClasses(item)}\r\n        aria-haspopup=\"true\"\r\n        data-ktmenu-submenu-toggle={this.getItemAttrSubmenuToggle(item)}\r\n        data-ktmenu-submenu-mode={item.mode}\r\n        data-ktmenu-dropdown-toggle-class={item[\"dropdown-toggle-class\"]}\r\n      >\r\n        {/* if item has submenu */}\r\n        {item.submenu && (\r\n          <a\r\n            className={`kt-menu__link ${clsx({\r\n              \"kt-menu__toggle\": item.root || item.submenu\r\n            })}`}\r\n          >\r\n            <MenuItemInner\r\n              item={item}\r\n              parentItem={parentItem}\r\n              currentUrl={currentUrl}\r\n            />\r\n            {rootArrowEnabled && (\r\n              <>\r\n                {item.submenu && item.root && (\r\n                  <>\r\n                    <i className=\"kt-menu__hor-arrow la la-angle-down\" />\r\n                    <i className=\"kt-menu__ver-arrow la la-angle-right\" />\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {item.submenu && !item.root && (\r\n              <>\r\n                <i className=\"kt-menu__hor-arrow la la-angle-right\" />\r\n                <i className=\"kt-menu__ver-arrow la la-angle-right\" />\r\n              </>\r\n            )}\r\n          </a>\r\n        )}\r\n\r\n        {/* if item hasn't submenu */}\r\n        {!item.submenu && (\r\n          <Link to={`/${item.page || \"\"}`} className=\"kt-menu__link\">\r\n            <MenuItemInner\r\n              item={item}\r\n              parentItem={parentItem}\r\n              currentUrl={currentUrl}\r\n            />\r\n          </Link>\r\n        )}\r\n\r\n        {/* if menu item has submenu child then recursively call new menu item component */}\r\n        {item.submenu && (\r\n          <div\r\n            className={`kt-menu__submenu ${this.getItemMenuSubmenuClass(item)}`}\r\n            style={{ width: item.submenu.width }}\r\n          >\r\n            <span\r\n              className={`kt-menu__arrow ${clsx({\r\n                \"kt-menu__arrow--adjust\": item.root\r\n              })}`}\r\n            />\r\n\r\n            {item.submenu && item.submenu.length && (\r\n              <ul className=\"kt-menu__subnav\">\r\n                {item.submenu.map((child, index) => {\r\n                  return (\r\n                    <React.Fragment key={`hmenuListInner${index}`}>\r\n                      <HMenuItem\r\n                        item={child}\r\n                        parentItem={item}\r\n                        currentUrl={currentUrl}\r\n                      />\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n\r\n            {item.submenu.items && item.submenu.items.length && (\r\n              <ul className=\"kt-menu__subnav\">\r\n                {item.submenu.items.map((child, index) => {\r\n                  return (\r\n                    <React.Fragment key={`hmenuListInner2${index}`}>\r\n                      <HMenuItem\r\n                        item={child}\r\n                        parentItem={item}\r\n                        currentUrl={currentUrl}\r\n                      />\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n\r\n            {item.submenu.type === \"mega\" &&\r\n              (item.submenu.columns && item.submenu.columns.length) && (\r\n                <div className=\"kt-menu__subnav\">\r\n                  <ul className=\"kt-menu__content\">\r\n                    {item.submenu.columns.map((child, index) => {\r\n                      return (\r\n                        <React.Fragment key={`hmenuColumnInner${index}`}>\r\n                          <HMenuColumn\r\n                            item={child}\r\n                            parentItem={item}\r\n                            currentUrl={currentUrl}\r\n                          />\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport objectPath from \"object-path\";\r\nimport HMenuItem from \"./HMenuItem\";\r\nimport * as builder from \"../../../ducks/builder\";\r\nimport { toAbsoluteUrl } from \"../../..\";\r\nimport KTMenu from \"../../../_assets/js/menu\";\r\nimport KTOffcanvas from \"../../../_assets/js/offcanvas\";\r\n\r\nconst offcanvasOptions = {\r\n  overlay: true,\r\n  baseClass: \"kt-header-menu-wrapper\",\r\n  closeBy: \"kt_header_menu_mobile_close_btn\",\r\n  toggleBy: {\r\n    target: \"kt_header_mobile_toggler\",\r\n    state: \"kt-header-mobile__toolbar-toggler--active\"\r\n  }\r\n};\r\n\r\nclass HMenu extends React.Component {\r\n  offCanvasCommonRef = React.createRef();\r\n  ktMenuCommonRef = React.createRef();\r\n\r\n  getHeaderLogo() {\r\n    let result = \"logo-light.png\";\r\n    console.log(\"this.props.headerSelfSkin\", this.props.headerSelfSkin);\r\n    if (this.props.headerSelfSkin && this.props.headerSelfSkin !== \"dark\") {\r\n      result = \"logo-dark.png\";\r\n    }\r\n    return toAbsoluteUrl(`/media/logos/${result}`);\r\n  }\r\n\r\n  get currentUrl() {\r\n    return this.props.location.pathname.split(/[?#]/)[0];\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Canvas\r\n    this.initOffCanvas();\r\n    // Menu\r\n    this.initKTMenu();\r\n  }\r\n\r\n  initOffCanvas = () => {\r\n    // eslint-disable-next-line no-undef\r\n    new KTOffcanvas(this.offCanvasCommonRef.current, offcanvasOptions);\r\n  };\r\n\r\n  initKTMenu = () => {\r\n    let menuOptions = {\r\n      submenu: {\r\n        desktop: \"dropdown\",\r\n        tablet: \"accordion\",\r\n        mobile: \"accordion\"\r\n      },\r\n      accordion: {\r\n        slideSpeed: 200, // accordion toggle slide speed in milliseconds\r\n        expandAll: false // allow having multiple expanded accordions in the menu\r\n      },\r\n      dropdown: {\r\n        timeout: 50\r\n      }\r\n    };\r\n\r\n    let menuDesktopMode = \"accordion\";\r\n    if (\r\n      this.ktMenuCommonRef.current.getAttribute(\"data-ktmenu-dropdown\") === \"1\"\r\n    ) {\r\n      menuDesktopMode = \"dropdown\";\r\n    }\r\n\r\n    if (typeof objectPath.get(menuOptions, \"submenu.desktop\") === \"object\") {\r\n      menuOptions.submenu.desktop = {\r\n        default: menuDesktopMode\r\n      };\r\n    }\r\n\r\n    // eslint-disable-next-line no-undef\r\n    new KTMenu(this.ktMenuCommonRef.current, menuOptions);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      disabledAsideSelfDisplay,\r\n      ktMenuClasses,\r\n      ulClasses,\r\n      rootArrowEnabled\r\n    } = this.props;\r\n    const items = this.props.menuConfig.header.items;\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"kt-header-menu-wrapper-close\"\r\n          id=\"kt_header_menu_mobile_close_btn\"\r\n        >\r\n          <i className=\"la la-close\" />\r\n        </button>\r\n        <div\r\n          className=\"kt-header-menu-wrapper\"\r\n          id=\"kt_header_menu_wrapper\"\r\n          ref={this.offCanvasCommonRef}\r\n        >\r\n          {disabledAsideSelfDisplay && (\r\n            <div className=\"kt-header-logo\">\r\n              <Link to=\"/\">\r\n                <img alt=\"logo\" src={this.getHeaderLogo()} />\r\n              </Link>\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            id=\"kt_header_menu\"\r\n            className={`kt-header-menu kt-header-menu-mobile ${ktMenuClasses}`}\r\n            ref={this.ktMenuCommonRef}\r\n          >\r\n            <ul className={`kt-menu__nav ${ulClasses}`}>\r\n              {items.map((item, index) => {\r\n                return (\r\n                  <React.Fragment key={`hmenuList${index}`}>\r\n                    {item.title && (\r\n                      <HMenuItem\r\n                        item={item}\r\n                        currentUrl={this.currentUrl}\r\n                        rootArrowEnabled={rootArrowEnabled}\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  config: store.builder.layoutConfig,\r\n  menuConfig: store.builder.menuConfig,\r\n  ktMenuClasses: builder.selectors.getClasses(store, {\r\n    path: \"header_menu\",\r\n    toString: true\r\n  }),\r\n  rootArrowEnabled: builder.selectors.getConfig(\r\n    store,\r\n    \"header.menu.self.root-arrow\"\r\n  ),\r\n  headerSelfSkin: builder.selectors.getConfig(store, \"header.self.skin\"),\r\n  ulClasses: builder.selectors.getClasses(store, {\r\n    path: \"header_menu_nav\",\r\n    toString: true\r\n  }),\r\n  disabledAsideSelfDisplay:\r\n    objectPath.get(store.builder.layoutConfig, \"aside.self.display\") === false\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(HMenu));\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Progress } from \"reactstrap\";\r\n\r\nclass AnimateLoading extends React.Component {\r\n  animateTimeout;\r\n  stopAnimateTimeout;\r\n  state = {\r\n    width: 0,\r\n    routeChanged: false\r\n  };\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      this.animate();\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    this.animateTimeout = setTimeout(() => {\r\n      if (this.state.width <= 100) {\r\n        this.setState({ width: this.state.width + 10 });\r\n        this.animate();\r\n      } else {\r\n        this.stopAnimate();\r\n      }\r\n    }, 30);\r\n  }\r\n  stopAnimate() {\r\n    clearTimeout(this.animateInterval);\r\n    this.stopAnimateTimeout = setTimeout(() => {\r\n      this.setState({ width: 0 });\r\n    }, 300);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.stopAnimateTimeout) {\r\n      clearTimeout(this.stopAnimateTimeout);\r\n    }\r\n    if (this.animateTimeout) {\r\n      clearTimeout(this.animateTimeout);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"header-progress-bar\"\r\n        style={{ height: \"3px\", width: \"100%\" }}\r\n      >\r\n        {this.state.width > 0 && (\r\n          <Progress value={this.state.width} style={{ height: \"3px\" }} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AnimateLoading);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport Topbar from \"./Topbar\";\r\nimport HMenu from \"./HMenu/HMenu\";\r\nimport AnimateLoading from \"../../../app/partials/layout/AnimateLoading\";\r\nimport KTHeader from \"../../_assets/js/header\";\r\nimport * as builder from \"../../ducks/builder\";\r\n\r\nclass Header extends React.Component {\r\n  headerCommonRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    let options = {};\r\n    if (\r\n      this.headerCommonRef.current.getAttribute(\"data-ktheader-minimize\") ===\r\n      \"1\"\r\n    ) {\r\n      options[\"minimize.desktop.on\"] = \"kt-header--minimize\";\r\n      options[\"offset.desktop\"] = 130;\r\n    }\r\n\r\n    // eslint-disable-next-line no-undef\r\n    new KTHeader(this.headerCommonRef.current, options);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      menuHeaderDisplay,\r\n      headerAttributes,\r\n      headerClasses\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className={`kt-header kt-grid__item ${headerClasses}`}\r\n        id=\"kt_header\"\r\n        ref={this.headerCommonRef}\r\n        {...headerAttributes}\r\n      >\r\n        <AnimateLoading />\r\n        {/* <!-- begin: Header Menu --> */}\r\n        {menuHeaderDisplay && <HMenu />}\r\n        {/* <!-- end: Header Menu --> */}\r\n        {/* <!-- begin:: Header Topbar --> */}\r\n        {/* <!-- empty div to fix topbar to stay on the right when menu-horizontal is hidden --> */}\r\n        {!menuHeaderDisplay && <div />}\r\n        <Topbar />\r\n        {/* <!-- end:: Header Topbar --> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  headerClasses: builder.selectors.getClasses(store, {\r\n    path: \"header\",\r\n    toString: true\r\n  }),\r\n  headerAttributes: builder.selectors.getAttributes(store, { path: \"header\" }),\r\n  menuHeaderDisplay: objectPath.get(\r\n    store.builder.layoutConfig,\r\n    \"header.menu.self.display\"\r\n  ),\r\n  fluid:\r\n    objectPath.get(store.builder.layoutConfig, \"header.self.width\") === \"fluid\"\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Files / File-plus\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Files-/-File-plus\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Shape\",\n  points: \"0 0 24 0 24 24 0 24\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.85714286,2 L13.7364114,2 C14.0910962,2 14.4343066,2.12568431 14.7051108,2.35473959 L19.4686994,6.3839416 C19.8056532,6.66894833 20,7.08787823 20,7.52920201 L20,20.0833333 C20,21.8738751 19.9795521,22 18.1428571,22 L5.85714286,22 C4.02044787,22 4,21.8738751 4,20.0833333 L4,3.91666667 C4,2.12612489 4.02044787,2 5.85714286,2 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  fillRule: \"nonzero\",\n  opacity: 0.3\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,14 L9,14 C8.44771525,14 8,13.5522847 8,13 C8,12.4477153 8.44771525,12 9,12 L11,12 L11,10 C11,9.44771525 11.4477153,9 12,9 C12.5522847,9 13,9.44771525 13,10 L13,12 L15,12 C15.5522847,12 16,12.4477153 16,13 C16,13.5522847 15.5522847,14 15,14 L13,14 L13,16 C13,16.5522847 12.5522847,17 12,17 C11.4477153,17 11,16.5522847 11,16 L11,14 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\"\n}));\n\nvar SvgFilePlus = function SvgFilePlus(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFilePlus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/File-plus.7a98d07d.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { ReactComponent as FilePlusIcon } from \"../../assets/layout-svg-icons/File-plus.svg\";\r\n\r\nconst QuickActionsDropdownToggle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      href=\"#\"\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        props.onClick(e);\r\n      }}\r\n      id=\"kt_dashboard_daterangepicker\"\r\n      className=\"btn btn-icon\"\r\n    >\r\n      {\" \"}\r\n      <FilePlusIcon className=\"kt-svg-icon kt-svg-icon--success kt-svg-icon--md\" />\r\n    </a>\r\n  );\r\n});\r\n\r\nexport class QuickActions extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <OverlayTrigger\r\n          placement=\"left\"\r\n          overlay={<Tooltip id=\"quick-actions-tooltip\">Quick actions</Tooltip>}\r\n        >\r\n          <Dropdown className=\"dropdown-inline\" drop=\"down\" alignRight>\r\n            <Dropdown.Toggle\r\n              as={QuickActionsDropdownToggle}\r\n              id=\"dropdown-toggle-quick-actions-subheader\"\r\n            />\r\n\r\n            <Dropdown.Menu className=\"dropdown-menu-fit dropdown-menu-md dropdown-menu-right\">\r\n              <ul className=\"kt-nav\">\r\n                <li className=\"kt-nav__head\">\r\n                  Add anything or jump to:\r\n                  <i\r\n                    className=\"flaticon2-information\"\r\n                    data-toggle=\"kt-tooltip\"\r\n                    data-placement=\"right\"\r\n                    title=\"\"\r\n                    data-original-title=\"Click to learn more...\"\r\n                  />\r\n                </li>\r\n                <li className=\"kt-nav__separator\" />\r\n                <li className=\"kt-nav__item\">\r\n                  <a href=\"#\" className=\"kt-nav__link\">\r\n                    <i className=\"kt-nav__link-icon flaticon2-drop\" />\r\n                    <span className=\"kt-nav__link-text\">Order</span>\r\n                  </a>\r\n                </li>\r\n                <li className=\"kt-nav__item\">\r\n                  <a href=\"#\" className=\"kt-nav__link\">\r\n                    <i className=\"kt-nav__link-icon flaticon2-calendar-8\" />\r\n                    <span className=\"kt-nav__link-text\">Ticket</span>\r\n                  </a>\r\n                </li>\r\n                <li className=\"kt-nav__item\">\r\n                  <a href=\"#\" className=\"kt-nav__link\">\r\n                    <i className=\"kt-nav__link-icon flaticon2-telegram-logo\" />\r\n                    <span className=\"kt-nav__link-text\">Goal</span>\r\n                  </a>\r\n                </li>\r\n                <li className=\"kt-nav__item\">\r\n                  <a href=\"#\" className=\"kt-nav__link\">\r\n                    <i className=\"kt-nav__link-icon flaticon2-new-email\" />\r\n                    <span className=\"kt-nav__link-text\">Support Case</span>\r\n                    <span className=\"kt-nav__link-badge\">\r\n                      <span className=\"kt-badge kt-badge--brand kt-badge--rounded\">\r\n                        5\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </li>\r\n                <li className=\"kt-nav__separator\" />\r\n                <li className=\"kt-nav__foot\">\r\n                  <a className=\"btn btn-label-brand btn-bold btn-sm\" href=\"#\">\r\n                    Upgrade plan\r\n                  </a>\r\n                  <a\r\n                    className=\"btn btn-clean btn-bold btn-sm kt-hidden\"\r\n                    href=\"#\"\r\n                    data-toggle=\"kt-tooltip\"\r\n                    data-placement=\"right\"\r\n                    title=\"\"\r\n                    data-original-title=\"Click to learn more...\"\r\n                  >\r\n                    Learn more\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Stockholm-icons / Shopping / Sort1\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Stockholm-icons-/-Shopping-/-Sort1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bound\",\n  x: 0,\n  y: 0,\n  width: 24,\n  height: 24\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-8\",\n  fill: \"#000000\",\n  x: 4,\n  y: 5,\n  width: 16,\n  height: 3,\n  rx: 1.5\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.5,11 L16.5,11 C17.3284271,11 18,11.6715729 18,12.5 C18,13.3284271 17.3284271,14 16.5,14 L7.5,14 C6.67157288,14 6,13.3284271 6,12.5 C6,11.6715729 6.67157288,11 7.5,11 Z M10.5,17 L13.5,17 C14.3284271,17 15,17.6715729 15,18.5 C15,19.3284271 14.3284271,20 13.5,20 L10.5,20 C9.67157288,20 9,19.3284271 9,18.5 C9,17.6715729 9.67157288,17 10.5,17 Z\",\n  id: \"Combined-Shape\",\n  fill: \"#000000\",\n  opacity: 0.3\n}));\n\nvar SvgSortNum1 = function SvgSortNum1(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSortNum1, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/SortNum1.2e2495e0.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { QuickActions } from \"./components/QuickActions\";\r\nimport { LayoutContextConsumer } from \"../LayoutContext\";\r\nimport { ReactComponent as SortNum1Icon } from \"../../../_metronic/layout/assets/layout-svg-icons/SortNum1.svg\";\r\nimport * as builder from \"../../ducks/builder\";\r\nimport { ButtonGroup, Button, TextField } from \"@material-ui/core\";\r\n// import BreadCrumbs from \"./components/BreadCrumbs\";\r\n\r\nclass SubHeader extends React.Component {\r\n  render() {\r\n    const {\r\n      subheaderCssClasses,\r\n      subheaderContainerCssClasses,\r\n      subheaderMobileToggle\r\n    } = this.props;\r\n    return (\r\n      <LayoutContextConsumer>\r\n        {/*{({ subheader: { title, breadcrumb } }) => (*/}\r\n\r\n        {({ subheader: { title } }) => (\r\n          title && title !== 'Board' &&\r\n          <>\r\n            <div\r\n              id=\"kt_subheader\"\r\n              className={`kt-subheader ${subheaderCssClasses} kt-grid__item`}\r\n            >\r\n              <div className={`kt-container ${subheaderContainerCssClasses}`}>\r\n                <div className=\"kt-subheader__main\">\r\n                  {subheaderMobileToggle && (\r\n                    <button\r\n                      className=\"kt-subheader__mobile-toggle kt-subheader__mobile-toggle--left\"\r\n                      id=\"kt_subheader_mobile_toggle\"\r\n                    >\r\n                      <span />\r\n                    </button>\r\n                  )}\r\n\r\n                  <h3 className=\"kt-subheader__title\">{title}</h3>\r\n                  {/*<BreadCrumbs items={breadcrumb} />*/}\r\n\r\n                  {/* <span className=\"kt-subheader__separator kt-subheader__separator--v\" />\r\n            <span className=\"kt-subheader__desc\">#XRS-45670</span>\r\n            <a\r\n              href=\"#\"\r\n              className=\"btn btn-label-warning btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n            >\r\n              Add New\r\n            </a> */}\r\n                </div>\r\n\r\n                {/*\r\n          <div className=\"kt-subheader__toolbar\">\r\n            <div className=\"kt-subheader__wrapper\">\r\n              <button type=\"button\" className=\"btn kt-subheader__btn-primary\">\r\n                Actions &nbsp;\r\n                <SortNum1Icon className=\"kt-svg-icon kt-svg-icon--sm\" />\r\n              </button>\r\n              <QuickActions />\r\n            </div>\r\n          </div>\r\n          */}\r\n              </div>\r\n            </div>\r\n          </>\r\n\r\n        )}\r\n\r\n\r\n      </LayoutContextConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  config: store.builder.layoutConfig,\r\n  menuConfig: store.builder.menuConfig,\r\n  subheaderMobileToggle: objectPath.get(\r\n    store.builder.layoutConfig,\r\n    \"subheader.mobile-toggle\"\r\n  ),\r\n  subheaderCssClasses: builder.selectors.getClasses(store, {\r\n    path: \"subheader\",\r\n    toString: true\r\n  }),\r\n  subheaderContainerCssClasses: builder.selectors.getClasses(store, {\r\n    path: \"subheader_container\",\r\n    toString: true\r\n  })\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(SubHeader));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport * as builder from \"../../ducks/builder\";\r\nimport KTToggle from \"../../_assets/js/toggle\";\r\n\r\nclass HeaderMobile extends React.Component {\r\n  toggleButtonRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    new KTToggle(this.toggleButtonRef.current, this.props.toggleOptions);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      headerLogo,\r\n      asideDisplay,\r\n      headerMenuSelfDisplay,\r\n      headerMobileCssClasses,\r\n      headerMobileAttributes\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        id=\"kt_header_mobile\"\r\n        className={`kt-header-mobile ${headerMobileCssClasses}`}\r\n        {...headerMobileAttributes}\r\n      >\r\n        <div className=\"kt-header-mobile__logo\">\r\n          <Link to=\"/\">\r\n            <img alt=\"logo\" src={headerLogo} />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"kt-header-mobile__toolbar\">\r\n          {asideDisplay && (\r\n            <button\r\n              className=\"kt-header-mobile__toggler kt-header-mobile__toggler--left\"\r\n              id=\"kt_aside_mobile_toggler\"\r\n            >\r\n              <span />\r\n            </button>\r\n          )}\r\n\r\n          {headerMenuSelfDisplay && (\r\n            <button\r\n              className=\"kt-header-mobile__toggler\"\r\n              id=\"kt_header_mobile_toggler\"\r\n            >\r\n              <span />\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            ref={this.toggleButtonRef}\r\n            className=\"kt-header-mobile__topbar-toggler\"\r\n            id=\"kt_header_mobile_topbar_toggler\"\r\n          >\r\n            <i className=\"flaticon-more\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  headerLogo: builder.selectors.getStickyLogo(store),\r\n  asideDisplay: objectPath.get(\r\n    store.builder.layoutConfig,\r\n    \"aside.self.display\"\r\n  ),\r\n  headerMenuSelfDisplay:\r\n    objectPath.get(store.builder.layoutConfig, \"header.menu.self.display\") ===\r\n    true,\r\n  toggleOptions: {\r\n    target: \"body\",\r\n    targetState: \"kt-header__topbar--mobile-on\",\r\n    togglerState: \"kt-header-mobile__toolbar-topbar-toggler--active\"\r\n  },\r\n  headerMobileCssClasses: builder.selectors.getClasses(store, {\r\n    path: \"header_mobile\",\r\n    toString: true\r\n  }),\r\n  headerMobileAttributes: builder.selectors.getAttributes(store, {\r\n    path: \"aside_menu\"\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeaderMobile);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport KTToggle from \"../../_assets/js/toggle\";\r\nimport * as builder from \"../../ducks/builder\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\n\r\nclass Brand extends React.Component {\r\n  ktToggleRef = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // eslint-disable-next-line no-undef\r\n    new KTToggle(this.ktToggleRef.current, this.props.toggleOptions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`kt-aside__brand kt-grid__item ${this.props.brandClasses}`}\r\n        id=\"kt_aside_brand\"\r\n      >\r\n        <div className=\"kt-aside__brand-logo\">\r\n          <Link to=\"/dashboard/revenue\">\r\n            <img alt=\"logo\" src={toAbsoluteUrl(\"/media/logos/ece-logo.svg\")} />\r\n          </Link>\r\n        </div>\r\n\r\n        {this.props.asideSelfMinimizeToggle && (\r\n          <div className=\"kt-aside__brand-tools\">\r\n            <button\r\n              ref={this.ktToggleRef}\r\n              className=\"kt-aside__brand-aside-toggler\"\r\n              id=\"kt_aside_toggler\"\r\n            >\r\n              <Icon>menu</Icon>\r\n              <Icon>menu</Icon>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    brandClasses: builder.selectors.getClasses(store, {\r\n      path: \"brand\",\r\n      toString: true\r\n    }),\r\n    asideSelfMinimizeToggle: objectPath.get(\r\n      store.builder.layoutConfig,\r\n      \"aside.self.minimize.toggle\"\r\n    ),\r\n    headerLogo: builder.selectors.getLogo(store),\r\n    headerStickyLogo: builder.selectors.getStickyLogo(store),\r\n    toggleOptions: {\r\n      target: \"body\",\r\n      targetState: \"kt-aside--minimize\",\r\n      togglerState: \"kt-aside__brand-aside-toggler--active\"\r\n    },\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Brand);\r\n","import React from \"react\";\r\n\r\nexport default class MenuSection extends React.Component {\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <li className=\"kt-menu__section\">\r\n        <h4 className=\"kt-menu__section-text\">{item.section}</h4>\r\n        <i className=\"kt-menu__section-icon flaticon-more-v2\" />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class MenuItemSeparator extends React.Component {\r\n  render() {\r\n    return (\r\n      <li className=\"kt-menu__separator\">\r\n        <span />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nexport default class MenuItemText extends React.Component {\r\n  render() {\r\n    const { item, parentItem } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {item.icon && <i className={`kt-menu__link-icon ${item.icon}`} />}\r\n\r\n        {parentItem && parentItem.bullet === \"dot\" && (\r\n          <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\">\r\n            <span />\r\n          </i>\r\n        )}\r\n\r\n        {parentItem && parentItem.bullet === \"line\" && (\r\n          <i className=\"kt-menu__link-bullet kt-menu__link-bullet--line\">\r\n            <span />\r\n          </i>\r\n        )}\r\n\r\n        <span className=\"kt-menu__link-text\" style={{ whiteSpace: \"nowrap\" }}>\r\n          {!item.translate ? (\r\n            item.title\r\n          ) : (\r\n            <FormattedMessage id={item.translate} defaultMessage={item.title} />\r\n          )}\r\n        </span>\r\n\r\n        {item.badge && (\r\n          <span className=\"kt-menu__link-badge\">\r\n            <span className={`kt-badge ${item.badge.type}`}>\r\n              {item.badge.value}\r\n            </span>\r\n          </span>\r\n        )}\r\n\r\n        {item.submenu && <i className=\"kt-menu__ver-arrow la la-angle-right\" />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport MenuSection from \"./MenuSection\";\r\nimport MenuItemSeparator from \"./MenuItemSeparator\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\"\r\nimport { ROLES, ROLE_DETAIL } from \"../../../app/constant/role\"\r\nimport { isAuthenticated } from \"../../../app/helpers/helper\"\r\n\r\nclass MenuSubmenu extends React.Component {\r\n  render() {\r\n    const { item, currentUrl, layoutConfig } = this.props;\r\n    return (\r\n      <ul className=\"kt-menu__subnav\">\r\n        {item.submenu.map((child, index) => {\r\n          const isShow = isAuthenticated(_.get(this.props, 'auth.user.permissions'), _.get(child, 'permissions'))\r\n          return (\r\n            isShow &&\r\n            <React.Fragment key={index}>\r\n              {child.section && (\r\n                <MenuSection\r\n                  item={child}\r\n                  parentItem={item}\r\n                  currentUrl={currentUrl}\r\n                />\r\n              )}\r\n\r\n              {child.separator && (\r\n                <MenuItemSeparator\r\n                  item={child}\r\n                  parentItem={item}\r\n                  currentUrl={currentUrl}\r\n                />\r\n              )}\r\n\r\n              {child.title && (\r\n                <MenuItem\r\n                  item={child}\r\n                  parentItem={item}\r\n                  currentUrl={currentUrl}\r\n                  layoutConfig={layoutConfig}\r\n                />\r\n              )}\r\n            </React.Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  auth: store.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(MenuSubmenu) \r\n","import React from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuItemText from \"./MenuItemText\";\r\nimport MenuSubmenu from \"./MenuSubmenu\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default class MenuItem extends React.Component {\r\n  asideLeftLIRef = React.createRef();\r\n  isDropdown =  document.body.classList.contains(\"kt-aside-menu--dropdown\");\r\n\r\n  submenuToggle =\r\n    this.props.item.toggle === \"click\"\r\n      ? \"click\"\r\n      : objectPath.get(this.props.item, \"submenu.type\") === \"tabs\"\r\n      ? \"tabs\"\r\n      : \"hover\";\r\n\r\n  /**\r\n   * Use for fixed left aside menu, to show menu on mouseenter event.\r\n   * @param event Event\r\n   */\r\n  mouseEnter = event => {\r\n    if (!this.isDropdown) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.item.submenu) {\r\n      this.asideLeftLIRef.current.classList.add(\"kt-menu__item--hover\");\r\n      this.asideLeftLIRef.current.setAttribute(\r\n        \"data-ktmenu-submenu-toggle\",\r\n        this.submenuToggle\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse Leave event\r\n   * @param event: MouseEvent\r\n   */\r\n  mouseLeave = event => {\r\n    if (!this.isDropdown) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.item.submenu && this.submenuToggle === \"hover\") {\r\n      this.asideLeftLIRef.current.classList.remove(\"kt-menu__item--hover\");\r\n      this.asideLeftLIRef.current.removeAttribute(\"data-ktmenu-submenu-toggle\");\r\n    }\r\n  };\r\n\r\n  isMenuItemIsActive = item => {\r\n    if (item.submenu) {\r\n      return this.isMenuRootItemIsActive(item);\r\n    }\r\n\r\n    if (!item.page) {\r\n      return false;\r\n    }\r\n\r\n    return this.props.currentUrl.indexOf(item.page) !== -1;\r\n  };\r\n\r\n  isMenuRootItemIsActive = item => {\r\n    for (const subItem of item.submenu) {\r\n      if (this.isMenuItemIsActive(subItem)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const { item, currentUrl, parentItem, layoutConfig } = this.props;\r\n    const isActive = this.isMenuItemIsActive(item);\r\n\r\n    return (\r\n      <li\r\n        ref={this.asideLeftLIRef}\r\n        aria-haspopup=\"true\"\r\n        data-placement=\"right\"\r\n        data-ktmenu-submenu-mode={item.mode}\r\n        onMouseEnter={this.mouseEnter}\r\n        onMouseLeave={this.mouseLeave}\r\n        className={clsx(\r\n          \"kt-menu__item\",\r\n          {\r\n            \"kt-menu__item--submenu\": item.submenu,\r\n            \"kt-menu__item--open kt-menu__item--here\": isActive && item.submenu,\r\n            \"kt-menu__item--active kt-menu__item--here\":\r\n              isActive && !item.submenu,\r\n            \"kt-menu__item--icon-only\": item[\"icon-only\"]\r\n          },\r\n          item[\"custom-class\"]\r\n        )}\r\n        data-ktmenu-dropdown-toggle-class={item[\"dropdown-toggle-class\"]}\r\n      >\r\n        {!item.submenu && (\r\n          <Link to={`/${item.page}`} className=\"kt-menu__link kt-menu__toggle\">\r\n            <MenuItemText item={item} parentItem={parentItem} />\r\n          </Link>\r\n        )}\r\n\r\n        {item.submenu && (\r\n          // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n          <a className=\"kt-menu__link kt-menu__toggle\">\r\n            <MenuItemText item={item} parentItem={parentItem} />\r\n          </a>\r\n        )}\r\n\r\n        {item.submenu && (\r\n          <div className=\"kt-menu__submenu\">\r\n            <span className=\"kt-menu__arrow\" />\r\n\r\n            {item[\"custom-class\"] === \"kt-menu__item--submenu-fullheight\" && (\r\n              <div className=\"kt-menu__wrapper\">\r\n                <MenuSubmenu\r\n                  item={item}\r\n                  parentItem={item}\r\n                  currentUrl={currentUrl}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {item[\"custom-class\"] !== \"kt-menu__item--submenu-fullheight\" && (\r\n              <MenuSubmenu\r\n                item={item}\r\n                parentItem={item}\r\n                currentUrl={currentUrl}\r\n                layoutConfig={layoutConfig}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport MenuSection from \"./MenuSection\";\r\nimport MenuItemSeparator from \"./MenuItemSeparator\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\"\r\nimport { PERMISSIONS } from \"../../../app/constant/role\"\r\nimport { isAuthenticated } from \"../../../app/helpers/helper\"\r\n\r\nclass MenuList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUrl, menuConfig, layoutConfig } = this.props;\r\n\r\n    return menuConfig.aside.items.map((child, index) => {\r\n      const userRole = _.get(this.props, 'auth.user.permissions')\r\n      if (isAuthenticated(userRole, _.get(child, 'permissions'))) {\r\n        return (\r\n          <React.Fragment key={`menuList${index}`}>\r\n            {child.section && <MenuSection item={child} />}\r\n            {child.separator && <MenuItemSeparator item={child} />}\r\n            {child.title && (\r\n              <MenuItem\r\n                item={child}\r\n                currentUrl={currentUrl}\r\n                layoutConfig={layoutConfig}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  auth: store.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(MenuList) \r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { removeCSSClass } from \"../../utils/utils\";\r\nimport * as builder from \"../../ducks/builder\";\r\nimport MenuList from \"./MenuList\";\r\nimport KTMenu from \"../../_assets/js/menu\";\r\nimport KTUtil from \"../../_assets/js/util\";\r\n\r\nclass AsideLeft extends React.Component {\r\n  asideMenuRef = React.createRef();\r\n\r\n  insideTm;\r\n  outsideTm;\r\n\r\n  componentDidMount() {\r\n    this.initMenu(); // By ID\r\n\r\n    const options = this.setupMenuOptions();\r\n    const ktMenu = new KTMenu(this.asideMenuRef.current, options); // eslint-disable-line\r\n  }\r\n\r\n  initMenu() {\r\n    const { config } = this.props;\r\n    if (\r\n      objectPath.get(config, \"aside.menu.dropdown\") !== \"true\" &&\r\n      objectPath.get(config, \"aside.self.fixed\")\r\n    ) {\r\n      this.asideMenuRef.current.setAttribute(\"data-ktmenu-scroll\", \"1\");\r\n    }\r\n\r\n    if (objectPath.get(config, \"aside.menu.dropdown\") === \"true\") {\r\n      this.asideMenuRef.current.setAttribute(\"data-ktmenu-dropdown\", \"1\");\r\n      this.asideMenuRef.current.setAttribute(\r\n        \"data-ktmenu-dropdown-timeout\",\r\n        objectPath.get(config, \"aside.menu.submenu.dropdown.hover-timeout\")\r\n      );\r\n    }\r\n  }\r\n\r\n  setupMenuOptions() {\r\n    let menuOptions = {\r\n      // vertical scroll\r\n      scroll: null,\r\n      // submenu setup\r\n      submenu: {\r\n        desktop: {\r\n          // by default the menu mode set to accordion in desktop mode\r\n          default: \"dropdown\"\r\n        },\r\n        tablet: \"accordion\", // menu set to accordion in tablet mode\r\n        mobile: \"accordion\" // menu set to accordion in mobile mode\r\n      },\r\n      // accordion setup\r\n      accordion: {\r\n        expandAll: false // allow having multiple expanded accordions in the menu\r\n      }\r\n    };\r\n\r\n    // init aside menu\r\n    let menuDesktopMode = \"accordion\";\r\n    const dataKtmenuDropdown = this.asideMenuRef.current.getAttribute(\r\n      \"data-ktmenu-dropdown\"\r\n    );\r\n    if (dataKtmenuDropdown === \"1\") {\r\n      menuDesktopMode = \"dropdown\";\r\n    }\r\n\r\n    if (typeof objectPath.get(menuOptions, \"submenu.desktop\") === \"object\") {\r\n      menuOptions.submenu.desktop.default = menuDesktopMode;\r\n    }\r\n\r\n    return menuOptions;\r\n  }\r\n\r\n  get currentUrl() {\r\n    return this.props.location.pathname.split(/[?#]/)[0];\r\n  }\r\n\r\n  /**\r\n   * Use for fixed left aside menu, to show menu on mouseenter event.\r\n   * @param e Event\r\n   */\r\n  mouseEnter = e => {\r\n    // check if the left aside menu is fixed\r\n    if (document.body.classList.contains(\"kt-aside--fixed\")) {\r\n      if (this.outsideTm) {\r\n        clearTimeout(this.outsideTm);\r\n        this.outsideTm = null;\r\n      }\r\n\r\n      this.insideTm = setTimeout(() => {\r\n        // if the left aside menu is minimized\r\n        if (\r\n          document.body.classList.contains(\"kt-aside--minimize\") &&\r\n          // eslint-disable-next-line no-undef\r\n          KTUtil.isInResponsiveRange(\"desktop\")\r\n        ) {\r\n          removeCSSClass(document.body, \"kt-aside--minimize\");\r\n          document.body.classList.add(\"kt-aside--minimize-hover\");\r\n        }\r\n      }, 50);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Use for fixed left aside menu, to show menu on mouseenter event.\r\n   * @param e Event\r\n   */\r\n  mouseLeave = e => {\r\n    if (document.body.classList.contains(\"kt-aside--fixed\")) {\r\n      if (this.insideTm) {\r\n        clearTimeout(this.insideTm);\r\n        this.insideTm = null;\r\n      }\r\n\r\n      this.outsideTm = setTimeout(() => {\r\n        // if the left aside menu is expand\r\n        /* eslint-disable-next-line  */\r\n        const kUtilIsResponsiveRange = KTUtil.isInResponsiveRange(\"desktop\");\r\n        const hasMinimizeHover = document.body.classList.contains(\r\n          \"kt-aside--minimize-hover\"\r\n        );\r\n        if (\r\n          hasMinimizeHover &&\r\n          // eslint-disable-next-line no-undef\r\n          kUtilIsResponsiveRange\r\n        ) {\r\n          // hide back the left aside menu\r\n          removeCSSClass(document.body, \"kt-aside--minimize-hover\");\r\n          document.body.classList.add(\"kt-aside--minimize\");\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      ulClasses,\r\n      menuConfig,\r\n      layoutConfig,\r\n      asideMenuAttr,\r\n      asideClassesFromConfig,\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          id=\"kt_aside_menu\"\r\n          ref={this.asideMenuRef}\r\n          style={{ maxHeight: \"90vh\", position: \"relative\" }}\r\n          onMouseEnter={this.mouseEnter}\r\n          onMouseLeave={this.mouseLeave}\r\n          data-ktmenu-vertical=\"1\"\r\n          className={clsx(\"kt-aside-menu\", asideClassesFromConfig)}\r\n          {...asideMenuAttr}\r\n        >\r\n          {this.props.disableAsideSelfDisplay && (\r\n            <div className=\"kt-header-logo\">\r\n              <Link to=\"\">\r\n                <img alt=\"logo\" src={this.props.headerLogo} />\r\n              </Link>\r\n            </div>\r\n          )}\r\n          <ul className={clsx(\"kt-menu__nav\", ulClasses)}>\r\n            <MenuList\r\n              currentUrl={pathname}\r\n              menuConfig={menuConfig}\r\n              layoutConfig={layoutConfig}\r\n            />\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  menuConfig: store.builder.menuConfig,\r\n  layoutConfig: store.builder.layoutConfig,\r\n  headerLogo: builder.selectors.getLogo(store),\r\n  asideMenuAttr: builder.selectors.getAttributes(store, { path: \"aside_menu\" }),\r\n  disableAsideSelfDisplay:\r\n    builder.selectors.getConfig(store, \"aside.self.display\") === false,\r\n\r\n  ulClasses: builder.selectors.getClasses(store, {\r\n    path: \"aside_menu_nav\",\r\n    toString: true\r\n  }),\r\n\r\n  asideClassesFromConfig: builder.selectors.getClasses(store, {\r\n    path: \"aside_menu\",\r\n    toString: true\r\n  })\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(AsideLeft));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as builder from \"../../ducks/builder\";\r\nimport Brand from \"../brand/Brand\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Menu from \"./Menu\";\r\nimport KTOffcanvas from \"../../_assets/js/offcanvas\";\r\nimport { Select, FormControl, MenuItem, Button } from \"@material-ui/core\";\r\nimport { getBrandList } from \"../../../app/crud/brand.crud\"\r\nimport { actionTypes } from \"../../../app/store/ducks/brand.duck\"\r\nimport { actionTypes as authAction } from \"../../../app/store/ducks/auth.duck\"\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\"\r\nimport { PERMISSIONS } from \"../../../app/constant/role\"\r\nimport { isAuthenticated } from \"../../../app/helpers/helper\"\r\n\r\nconst CREATE_BRAND_PERMISSONS = [PERMISSIONS.CREATE_BRAND]\r\nconst VIEW_BRAND_PERMISSONS = [PERMISSIONS.READ_ALL_BRAND, PERMISSIONS.READ_ADMIN_BRAND, PERMISSIONS.READ_OWNER_BRAND]\r\n\r\nclass AsideLeft extends React.Component {\r\n  asideOffCanvasRef = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  componentDidMount() {\r\n    // eslint-disable-next-line\r\n    const ktoffConvas = new KTOffcanvas(\r\n      this.asideOffCanvasRef.current,\r\n      this.props.menuCanvasOptions\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const brandList = _.get(this, 'props.brand.brandList')\r\n    const userPermissions = _.get(this, 'props.auth.user.permissions')\r\n    return (\r\n      <>\r\n\r\n        <button className=\"kt-aside-close\" id=\"kt_aside_close_btn\">\r\n          <i className=\"la la-close\" />\r\n        </button>\r\n        <div\r\n          id=\"kt_aside\"\r\n          ref={this.asideOffCanvasRef}\r\n          className={`kt-aside ${this.props.asideClassesFromConfig} kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop`}\r\n        >\r\n          <Brand />\r\n          <div\r\n            id=\"kt_aside_menu_wrapper\"\r\n            className=\"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\"\r\n          >\r\n            {this.props.disableScroll && (\r\n              <Menu htmlClassService={this.props.htmlClassService} />\r\n            )}\r\n            {!this.props.disableScroll && (\r\n              <PerfectScrollbar\r\n                options={{ wheelSpeed: 2, wheelPropagation: false }}\r\n              >\r\n                <Menu htmlClassService={this.props.htmlClassService} />\r\n              </PerfectScrollbar>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  disableAsideSelfDisplay:\r\n    builder.selectors.getConfig(store, \"aside.self.display\") === false,\r\n  disableScroll:\r\n    builder.selectors.getConfig(store, \"aside.menu.dropdown\") === \"true\" ||\r\n    false,\r\n  asideClassesFromConfig: builder.selectors.getClasses(store, {\r\n    path: \"aside\",\r\n    toString: true\r\n  }),\r\n  menuCanvasOptions: {\r\n    baseClass: \"kt-aside\",\r\n    overlay: true,\r\n    closeBy: \"kt_aside_close_btn\",\r\n    toggleBy: {\r\n      target: \"kt_aside_mobile_toggler\",\r\n      state: \"kt-header-mobile__toolbar-toggler--active\"\r\n    }\r\n  },\r\n  brand: store.brand,\r\n  auth: store.auth\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(AsideLeft));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport * as builder from \"../../ducks/builder\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    const today = new Date().getFullYear();\r\n    return (\r\n      <div\r\n        className={`kt-footer ${this.props.footerClasses} kt-grid__item kt-grid kt-grid--desktop kt-grid--ver-desktop`}\r\n        id=\"kt_footer\"\r\n      >\r\n        <div className={`kt-container ${this.props.footerContainerClasses}`}>\r\n          <div className=\"kt-footer__copyright\">\r\n            {today.toString()}&nbsp;&copy;&nbsp;\r\n            <a\r\n              href=\"http://keenthemes.com/metronic\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"kt-link\"\r\n            >\r\n              Keenthemes\r\n            </a>\r\n          </div>\r\n          <div className=\"kt-footer__menu\">\r\n            <a\r\n              href=\"http://keenthemes.com/metronic\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"kt-footer__menu-link kt-link\"\r\n            >\r\n              About\r\n            </a>\r\n            <a\r\n              href=\"http://keenthemes.com/metronic\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"kt-footer__menu-link kt-link\"\r\n            >\r\n              Team\r\n            </a>\r\n            <a\r\n              href=\"http://keenthemes.com/metronic\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"kt-footer__menu-link kt-link\"\r\n            >\r\n              Contact\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  fluid:\r\n    objectPath.get(store.builder.layoutConfig, \"footer.self.width\") === \"fluid\",\r\n  footerClasses: builder.selectors.getClasses(store, {\r\n    path: \"footer\",\r\n    toString: true\r\n  }),\r\n  footerContainerClasses: builder.selectors.getClasses(store, {\r\n    path: \"footer_container\",\r\n    toString: true\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import objectPath from \"object-path\";\r\n\r\nexport default class HtmlClassService {\r\n  // Public properties\r\n  config;\r\n  classes;\r\n  attributes;\r\n\r\n  /**\r\n   * Build html element classes from layout config\r\n   * @param layoutConfig\r\n   */\r\n  setConfig(layoutConfig) {\r\n    this.config = layoutConfig;\r\n\r\n    // scope list of classes\r\n    this.classes = {\r\n      header: [],\r\n      header_container: [],\r\n      header_mobile: [],\r\n      header_menu: [],\r\n      aside: [],\r\n      aside_menu: [],\r\n      subheader: [],\r\n      subheader_container: [],\r\n      content: [],\r\n      content_container: [],\r\n      footer_container: []\r\n    };\r\n\r\n    this.attributes = {\r\n      aside_menu: {},\r\n      header_mobile: {},\r\n      header_menu: {}\r\n    };\r\n\r\n    // init base layout\r\n    this.initLayout();\r\n    this.initLoader();\r\n\r\n    // not yet implemented\r\n    // this.initAsideSecondary();\r\n\r\n    // init header and subheader menu\r\n    this.initHeader();\r\n    this.initSubheader();\r\n\r\n    this.initContent();\r\n    // init aside and aside menu\r\n    this.initAside();\r\n\r\n    // init footer\r\n    this.initFooter();\r\n\r\n    this.initSkin();\r\n  }\r\n\r\n  /**\r\n   * Returns Classes\r\n   *\r\n   * @param path: string\r\n   * @param toString boolean\r\n   */\r\n  getClasses(path, toString) {\r\n    if (path) {\r\n      const classes = objectPath.get(this.classes, path) || \"\";\r\n      if (toString && Array.isArray(classes)) {\r\n        return classes.join(\" \");\r\n      }\r\n      return classes.toString();\r\n    }\r\n    return this.classes;\r\n  }\r\n\r\n  getAttributes(path) {\r\n    if (path) {\r\n      const attributes = objectPath.get(this.attributes, path) || [];\r\n      return attributes;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Init Layout\r\n   */\r\n  initLayout() {\r\n    if (objectPath.has(this.config, \"self.body.background-image\")) {\r\n      document.body.style.backgroundImage =\r\n        'url(\"' +\r\n        objectPath.get(this.config, \"self.body.background-image\") +\r\n        '\")';\r\n    }\r\n\r\n    const _selfBodyClass = objectPath.get(this.config, \"self.body.class\");\r\n    if (_selfBodyClass) {\r\n      if (_selfBodyClass) {\r\n        const bodyClasses = _selfBodyClass.toString().split(\" \");\r\n        bodyClasses.forEach(cssClass => document.body.classList.add(cssClass));\r\n      }\r\n    }\r\n\r\n    // Offcanvas directions\r\n    document.body.classList.add(\"kt-quick-panel--right\");\r\n    document.body.classList.add(\"kt-demo-panel--right\");\r\n    document.body.classList.add(\"kt-offcanvas-panel--right\");\r\n  }\r\n\r\n  /**\r\n   * Init Loader\r\n   */\r\n  initLoader() {}\r\n\r\n  /**\r\n   * Init Header\r\n   */\r\n  initHeader() {\r\n    // Fixed header\r\n    if (objectPath.get(this.config, \"header.self.fixed.desktop\")) {\r\n      document.body.classList.add(\"kt-header--fixed\");\r\n      objectPath.push(this.classes, \"header\", \"kt-header--fixed\");\r\n    } else {\r\n      document.body.classList.add(\"kt-header--static\");\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"header.self.fixed.mobile\")) {\r\n      document.body.classList.add(\"kt-header-mobile--fixed\");\r\n      objectPath.push(this.classes, \"header_mobile\", \"kt-header-mobile--fixed\");\r\n    }\r\n\r\n    const additionalHeaderCssClass = objectPath.get(\r\n      this.config,\r\n      \"header.menu.self.layout\"\r\n    );\r\n    if (additionalHeaderCssClass) {\r\n      objectPath.push(\r\n        this.classes,\r\n        \"header_menu\",\r\n        \"kt-header-menu--layout-\" + additionalHeaderCssClass\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"header.self.width\") === \"fluid\") {\r\n      objectPath.push(this.classes, \"header_container\", \"kt-container--fluid\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init Subheader\r\n   */\r\n  initSubheader() {\r\n    if (objectPath.get(this.config, \"subheader.display\")) {\r\n      document.body.classList.add(\"kt-subheader--enabled\");\r\n    }\r\n\r\n    // Fixed content head\r\n    if (\r\n      objectPath.get(this.config, \"subheader.fixed\") &&\r\n      objectPath.get(this.config, \"header.self.fixed.desktop\")\r\n    ) {\r\n      document.body.classList.add(\"kt-subheader--fixed\");\r\n    }\r\n\r\n    if (objectPath.has(this.config, \"subheader.style\")) {\r\n      document.body.classList.add(\r\n        \"kt-subheader--\" + objectPath.get(this.config, \"subheader.style\")\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"subheader.width\") === \"fluid\") {\r\n      objectPath.push(\r\n        this.classes,\r\n        \"subheader_container\",\r\n        \"kt-container--fluid\"\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"subheader.clear\")) {\r\n      objectPath.push(this.classes, \"subheader\", \"kt-subheader--clear\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init Content\r\n   */\r\n  initContent() {\r\n    if (objectPath.get(this.config, \"content.fit-top\")) {\r\n      objectPath.push(this.classes, \"content\", \"kt-content--fit-top\");\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"content.fit-bottom\")) {\r\n      objectPath.push(this.classes, \"content\", \"kt-content--fit-bottom\");\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"content.width\") === \"fluid\") {\r\n      objectPath.push(this.classes, \"content_container\", \"kt-container--fluid\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init Aside\r\n   */\r\n  initAside() {\r\n    if (objectPath.get(this.config, \"aside.self.display\") !== true) {\r\n      return;\r\n    }\r\n\r\n    document.body.classList.add(\"kt-aside--enabled\");\r\n\r\n    // Fixed Aside\r\n    if (objectPath.get(this.config, \"aside.self.fixed\")) {\r\n      document.body.classList.add(\"kt-aside--fixed\");\r\n      objectPath.push(this.classes, \"aside\", \"kt-aside--fixed\");\r\n    } else {\r\n      document.body.classList.add(\"kt-aside--static\");\r\n    }\r\n\r\n    // Default fixed\r\n    if (objectPath.get(this.config, \"aside.self.minimize.default\")) {\r\n      document.body.classList.add(\"kt-aside--minimize\");\r\n    }\r\n\r\n    // Menu\r\n    // Dropdown Submenu\r\n    if (objectPath.get(this.config, \"aside.menu.dropdown\") === \"true\") {\r\n      objectPath.push(this.classes, \"aside_menu\", \"kt-aside-menu--dropdown\");\r\n      document.body.classList.add(\"kt-aside-menu--dropdown\");\r\n      this.attributes.aside_menu[\"data-ktmenu-dropdown\"] = \"1\";\r\n      this.attributes.aside_menu[\"data-ktmenu-scroll\"] = \"0\";\r\n    } else {\r\n      this.attributes.aside_menu[\"data-ktmenu-scroll\"] = \"1\";\r\n    }\r\n\r\n    const asideSubmenuDHoverTimeout = objectPath.get(\r\n      this.config,\r\n      \"aside.menu.submenu.dropdown.hover-timeout\"\r\n    );\r\n    if (asideSubmenuDHoverTimeout) {\r\n      this.attributes.aside_menu[\r\n        \"data-ktmenu-dropdown-timeout\"\r\n      ] = asideSubmenuDHoverTimeout;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init Footer\r\n   */\r\n  initFooter() {\r\n    // Fixed header\r\n    if (objectPath.get(this.config, \"footer.self.fixed\")) {\r\n      document.body.classList.add(\"kt-footer--fixed\");\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"footer.self.width\") === \"fluid\") {\r\n      objectPath.push(this.classes, \"footer_container\", \"kt-container--fluid\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *   Set the body class name based on page skin options\r\n   */\r\n  initSkin() {\r\n    if (objectPath.get(this.config, \"header.self.skin\")) {\r\n      document.body.classList.add(\r\n        \"kt-header-base-\" + objectPath.get(this.config, \"header.self.skin\")\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"header.menu.desktop.submenu.skin\")) {\r\n      document.body.classList.add(\r\n        \"kt-header-menu-\" +\r\n          objectPath.get(this.config, \"header.menu.desktop.submenu.skin\")\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"aside.self.display\") === false) {\r\n      document.body.classList.add(\r\n        \"kt-header-base-\" + objectPath.get(this.config, \"header.self.skin\")\r\n      );\r\n    } else {\r\n      document.body.classList.add(\r\n        \"kt-brand-\" + objectPath.get(this.config, \"brand.self.skin\")\r\n      );\r\n    }\r\n\r\n    if (objectPath.get(this.config, \"aside.self.skin\")) {\r\n      document.body.classList.add(\r\n        \"kt-aside-\" + objectPath.get(this.config, \"aside.self.skin\")\r\n      );\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-undef */\r\nimport React from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst perfectScrollbarOptions = {\r\n  wheelSpeed: 2,\r\n  wheelPropagation: false\r\n};\r\n\r\nexport default class QuickPanel extends React.Component {\r\n  state = { selectedTab: \"Notifications\" };\r\n  setTab = _tabName => {\r\n    this.setState({ selectedTab: _tabName });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"kt_quick_panel\" className=\"kt-quick-panel\">\r\n        <a\r\n          href=\"#\"\r\n          className=\"kt-quick-panel__close\"\r\n          id=\"kt_quick_panel_close_btn\"\r\n        >\r\n          <i className=\"flaticon2-delete\" />\r\n        </a>\r\n        <Tab.Container defaultActiveKey={this.state.selectedTab}>\r\n          <div className=\"kt-quick-panel__nav\">\r\n            <Nav\r\n              onSelect={this.setTab}\r\n              className=\"nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-brand kt-notification-item-padding-x\"\r\n            >\r\n              <Nav.Item className=\"nav-item\">\r\n                <Nav.Link eventKey=\"Notifications\" className=\"nav-link show\">\r\n                  Notifications\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"AuditLogs\" className=\"nav-link show\">\r\n                  Audit Logs\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"Settings\" className=\"nav-link show\">\r\n                  Settings\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </div>\r\n          <div className=\"kt-quick-panel__content\">\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"Notifications\">\r\n                <PerfectScrollbar\r\n                  options={perfectScrollbarOptions}\r\n                  style={{\r\n                    maxHeight: \"calc(100vh - 100px)\",\r\n                    position: \"relative\"\r\n                  }}\r\n                >\r\n                  <div className=\"kt-notification\">\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-line-chart kt-font-success\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New order has been received\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          2 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-box-1 kt-font-brand\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New customer is registered\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          3 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-chart2 kt-font-danger\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          Application has been approved\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          3 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-image-file kt-font-warning\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New file has been uploaded\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          5 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-drop kt-font-info\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New user feedback received\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          8 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-pie-chart-2 kt-font-success\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          System reboot has been successfully completed\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          12 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-favourite kt-font-danger\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New order has been placed\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          15 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"kt-notification__item kt-notification__item--read\"\r\n                    >\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-safe kt-font-primary\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          Company meeting canceled\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          19 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-psd kt-font-success\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New report has been received\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          23 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon-download-1 kt-font-danger\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          Finance report has been generated\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          25 hrs ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon-security kt-font-warning\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New customer comment recieved\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          2 days ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification__item\">\r\n                      <div className=\"kt-notification__item-icon\">\r\n                        <i className=\"flaticon2-pie-chart kt-font-warning\" />\r\n                      </div>\r\n                      <div className=\"kt-notification__item-details\">\r\n                        <div className=\"kt-notification__item-title\">\r\n                          New customer is registered\r\n                        </div>\r\n                        <div className=\"kt-notification__item-time\">\r\n                          3 days ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </PerfectScrollbar>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"AuditLogs\">\r\n                <PerfectScrollbar\r\n                  options={perfectScrollbarOptions}\r\n                  style={{\r\n                    maxHeight: \"calc(100vh - 100px)\",\r\n                    position: \"relative\"\r\n                  }}\r\n                >\r\n                  <div className=\"kt-notification-v2\">\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon-bell kt-font-brand\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          5 new user generated report\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Reports based on sales\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon2-box kt-font-danger\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          2 new items submited\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          by Grog John\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon-psd kt-font-brand\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          79 PSD files generated\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Reports based on sales\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon2-supermarket kt-font-warning\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          $2900 worth products sold\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Total 234 items\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon-paper-plane-1 kt-font-success\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          4.5h-avarage response time\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Fostest is Barry\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon2-information kt-font-danger\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          Database server is down\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          10 mins ago\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon2-mail-1 kt-font-brand\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          System report has been generated\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Fostest is Barry\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" className=\"kt-notification-v2__item\">\r\n                      <div className=\"kt-notification-v2__item-icon\">\r\n                        <i className=\"flaticon2-hangouts-logo kt-font-warning\" />\r\n                      </div>\r\n                      <div className=\"kt-notification-v2__itek-wrapper\">\r\n                        <div className=\"kt-notification-v2__item-title\">\r\n                          4.5h-avarage response time\r\n                        </div>\r\n                        <div className=\"kt-notification-v2__item-desc\">\r\n                          Fostest is Barry\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </PerfectScrollbar>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Settings\">\r\n                <PerfectScrollbar\r\n                  options={perfectScrollbarOptions}\r\n                  style={{\r\n                    maxHeight: \"calc(100vh - 100px)\",\r\n                    position: \"relative\"\r\n                  }}\r\n                >\r\n                  <div className=\"kt-quick-panel__content-padding-x\">\r\n                    <form className=\"kt-form\">\r\n                      <div className=\"kt-heading kt-heading--sm kt-heading--space-sm\">\r\n                        Customer Care\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Enable Notifications:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--success kt-switch--sm\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_1\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Enable Case Tracking:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--success kt-switch--sm\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_2\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-last form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Support Portal:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--success kt-switch--sm\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_2\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"kt-separator kt-separator--space-md kt-separator--border-dashed\" />\r\n                      <div className=\"kt-heading kt-heading--sm kt-heading--space-sm\">\r\n                        Reports\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Generate Reports:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--danger\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_3\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Enable Report Export:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--danger\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_3\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-last form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Allow Data Collection:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--danger\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_4\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"kt-separator kt-separator--space-md kt-separator--border-dashed\" />\r\n                      <div className=\"kt-heading kt-heading--sm kt-heading--space-sm\">\r\n                        Members\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Enable Member singup:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--brand\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_5\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Allow User Feedbacks:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--brand\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_5\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group form-group-last form-group-xs row\">\r\n                        <label className=\"col-8 col-form-label\">\r\n                          Enable Customer Portal:\r\n                        </label>\r\n                        <div className=\"col-4 kt-align-right\">\r\n                          <span className=\"kt-switch kt-switch--sm kt-switch--brand\">\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name=\"quick_panel_notifications_6\"\r\n                              />\r\n                              <span />\r\n                            </label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </PerfectScrollbar>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </div>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport * as builder from \"../ducks/builder\";\r\n\r\nfunction KtContent({ children, contentContainerClasses }) {\r\n  const match = useRouteMatch() || {};\r\n  const animationEndClass = \"kt-grid--animateContent-finished\";\r\n  const [cssClassesState, setCssClassesState] = useState([\r\n    \"kt-grid--animateContent\",\r\n    \"kt-container\",\r\n    contentContainerClasses.split(\" \"),\r\n    \"kt-grid__item kt-grid__item--fluid\",\r\n    animationEndClass\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // for animation start should toggle 'kt-grid--animateContent-finished' css class\r\n    // TODO: change useMemo\r\n    const fullClasses = [...cssClassesState];\r\n    const startAnimation = fullClasses.filter(el => el !== animationEndClass);\r\n    setCssClassesState(startAnimation);\r\n    const timeOutId = setTimeout(() => {\r\n      setCssClassesState(fullClasses);\r\n    }, 200);\r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [match.url]);\r\n\r\n  return <div className={cssClassesState.join(\" \")}>{children}</div>;\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contentContainerClasses: builder.selectors.getClasses(store, {\r\n    path: \"content_container\",\r\n    toString: true\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps)(KtContent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport objectPath from \"object-path\";\r\nimport Header from \"./header/Header\";\r\nimport SubHeader from \"./sub-header/SubHeader\";\r\nimport HeaderMobile from \"./header/HeaderMobile\";\r\nimport AsideLeft from \"./aside/AsideLeft\";\r\nimport Footer from \"./footer/Footer\";\r\n// import StickyToolbar from \"../../app/partials/layout/StickyToolbar\";\r\nimport HTMLClassService from \"./HTMLClassService\";\r\nimport LayoutConfig from \"./LayoutConfig\";\r\nimport MenuConfig from \"./MenuConfig\";\r\nimport LayoutInitializer from \"./LayoutInitializer\";\r\nimport QuickPanel from \"../../app/partials/layout/QuickPanel\";\r\nimport KtContent from \"./KtContent\";\r\nimport \"./assets/Base.scss\";\r\n\r\nconst htmlClassService = new HTMLClassService();\r\n\r\nfunction Layout({\r\n  children,\r\n  asideDisplay,\r\n  subheaderDisplay,\r\n  selfLayout,\r\n  layoutConfig,\r\n  contentContainerClasses\r\n}) {\r\n  htmlClassService.setConfig(layoutConfig);\r\n  // scroll to top after location changes\r\n  // window.scrollTo(0, 0);\r\n\r\n  const contentCssClasses = htmlClassService.classes.content.join(\" \");\r\n\r\n  return selfLayout !== \"blank\" ? (\r\n    <LayoutInitializer\r\n      menuConfig={MenuConfig}\r\n      layoutConfig={LayoutConfig}\r\n      htmlClassService={htmlClassService}\r\n    >\r\n      {/* <!-- begin:: Header Mobile --> */}\r\n      <HeaderMobile />\r\n      {/* <!-- end:: Header Mobile --> */}\r\n\r\n      <div className=\"kt-grid kt-grid--hor kt-grid--root\">\r\n        {/* <!-- begin::Body --> */}\r\n        <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver kt-page\">\r\n          {/* <!-- begin:: Aside Left --> */}\r\n          {asideDisplay && (\r\n            <>\r\n              <AsideLeft />\r\n            </>\r\n          )}\r\n          {/* <!-- end:: Aside Left --> */}\r\n          <div\r\n            className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-wrapper\"\r\n            id=\"kt_wrapper\"\r\n          >\r\n            {/* <!-- begin:: Header READY --> */}\r\n\r\n            <Header />\r\n            {/* <!-- end:: Header --> */}\r\n\r\n            {/* <!-- begin:: Content --> */}\r\n            <div\r\n              id=\"kt_content\"\r\n              className={`kt-content ${contentCssClasses} kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor`}\r\n            >\r\n              {/* <!-- begin:: Content Head --> */}\r\n              {/* {subheaderDisplay && (\r\n                <SubHeader />\r\n              )} */}\r\n              {/* <!-- end:: Content Head --> */}\r\n\r\n              {/* <!-- begin:: Content Body --> */}\r\n              {/* TODO: add class to animate  kt-grid--animateContent-finished */}\r\n              <KtContent>\r\n                {children}\r\n              </KtContent>\r\n              {/*<!-- end:: Content Body -->*/}\r\n            </div>\r\n            {/* <!-- end:: Content --> */}\r\n          </div>\r\n        </div>\r\n        {/* <!-- end:: Body --> */}\r\n      </div>\r\n      <QuickPanel />\r\n      {/*<StickyToolbar />*/}\r\n    </LayoutInitializer>\r\n  ) : (\r\n      // BLANK LAYOUT\r\n      <div className=\"kt-grid kt-grid--ver kt-grid--root\">\r\n        <KtContent>\r\n          {children}\r\n        </KtContent>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ builder: { layoutConfig } }) => ({\r\n  layoutConfig,\r\n  selfLayout: objectPath.get(layoutConfig, \"self.layout\"),\r\n  asideDisplay: objectPath.get(layoutConfig, \"aside.self.display\"),\r\n  subheaderDisplay: objectPath.get(layoutConfig, \"subheader.display\"),\r\n  desktopHeaderDisplay: objectPath.get(\r\n    layoutConfig,\r\n    \"header.self.fixed.desktop\"\r\n  ),\r\n  contentContainerClasses: \"\"\r\n  // contentContainerClasses: builder.selectors.getClasses(store, {\r\n  //   path: \"content_container\",\r\n  //   toString: true\r\n  // })\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { TextField, Tab, Tabs, AppBar, Box, Typography, FormControlLabel, Checkbox, Button, Grid, InputLabel, FormGroup, IconButton } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { isValidEmail } from '../../helpers/helper'\r\nimport { register, login } from \"../../crud/auth.crud\";\r\nimport { ROLES } from \"../../constant/role\"\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport _ from \"lodash\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box style={{\r\n          marginTop: '30px'\r\n        }}>\r\n          <Typography component={'div'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 0,\r\n    '& .MuiAppBar-positionStatic': {\r\n      transform: 'unset !important'\r\n    },\r\n    '& .react-swipeable-view-container': {\r\n      willChange: 'unset !important'\r\n    },\r\n    '& .kt-spinner--right:before': {\r\n      right: 15\r\n    },\r\n    '& .MuiTabs-indicator': {\r\n      backgroundColor: '#014B68',\r\n      height: '4px'\r\n    }\r\n  },\r\n  tab: {\r\n    '& .MuiButtonBase-root': {\r\n      fontSize: '20px',\r\n      color: '#6B6C6F',\r\n      borderBottom: '1px solid #C4C4C4'\r\n    },\r\n    '& .Mui-selected': {\r\n      color: '#014B68',\r\n    }\r\n  }\r\n})\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles()\r\n  const [tab, setTab] = useState(1)\r\n\r\n\r\n  const { intl } = props;\r\n  const [loginLoading, setLoginLoading] = useState(false);\r\n  const [registerLoading, setRegisterLoading] = useState(false);\r\n  const [pwConfig, setPWConfig] = useState({\r\n    loginPW: false,\r\n    registerPW: false,\r\n    registerCPW: false\r\n  })\r\n\r\n  const handleTabChange = (event, tab) => {\r\n    setTab(tab);\r\n    setPWConfig({\r\n      loginPW: false,\r\n      registerPW: false,\r\n      registerCPW: false\r\n    })\r\n  };\r\n\r\n  const handleTabChangeIndex = (index) => {\r\n    setTab(index - 1);\r\n  };\r\n\r\n  const handleRegistrationSubmit = (values, { setStatus, setSubmitting }) => {\r\n    setRegisterLoading(true)\r\n    setTimeout(() => {\r\n      register(\r\n        values.email,\r\n        values.password,\r\n        ROLES.ADMIN\r\n      )\r\n        .then(res => {\r\n          setRegisterLoading(false)\r\n          setSubmitting(false);\r\n          if (res.data.errMsg) {\r\n            setStatus(res.data.errMsg)\r\n          }\r\n          else {\r\n            const token = _.get(res, 'data.result.role.token')\r\n            const user = {\r\n              role: _.get(res, 'data.result.role.name'),\r\n              email: _.get(res, 'data.result.email'),\r\n              permissions: _.get(res, 'data.result.role.permissions')\r\n            }\r\n            props.login({ token, user });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setRegisterLoading(false)\r\n          setSubmitting(false);\r\n          setStatus(\r\n            intl.formatMessage({\r\n              id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n            })\r\n          );\r\n        });\r\n    }, 1000)\r\n  }\r\n\r\n  const handleLoginSubmit = (values, { setStatus, setSubmitting }) => {\r\n\r\n    setLoginLoading(true)\r\n    setTimeout(() => {\r\n      login(\r\n        values.email,\r\n        values.password\r\n      )\r\n        .then(res => {\r\n          setLoginLoading(false)\r\n          setSubmitting(false);\r\n          if (res.data.errMsg) {\r\n            setStatus(res.data.errMsg)\r\n          }\r\n          else {\r\n            const token = _.get(res, 'data.result.role.token')\r\n            const user = {\r\n              role: _.get(res, 'data.result.role.name'),\r\n              email: _.get(res, 'data.result.email'),\r\n              avatar: _.get(res, 'data.result.avatar.Location'),\r\n              permissions: _.get(res, 'data.result.role.permissions')\r\n            }\r\n            props.login({ token, user });\r\n          }\r\n\r\n        })\r\n        .catch(() => {\r\n          setLoginLoading(false)\r\n          setSubmitting(false);\r\n          setStatus(\r\n            intl.formatMessage({\r\n              id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n            })\r\n          );\r\n        });\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        variant=\"fullWidth\"\r\n        value={tab}\r\n        onChange={handleTabChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n        className={classes.tab}\r\n      >\r\n        <Tab label=\"Sign up\" {...a11yProps(0)} />\r\n        <Tab label=\"Sign in\" {...a11yProps(1)} />\r\n      </Tabs>\r\n      <SwipeableViews\r\n        index={tab}\r\n        onChangeIndex={handleTabChangeIndex}\r\n      >\r\n        <TabPanel value={tab} index={0}>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n              fullName: '',\r\n              phone: '',\r\n              company: ''\r\n            }}\r\n            validate={values => {\r\n              const errors = {};\r\n\r\n              if (!values.confirmPassword) {\r\n                errors.confirmPassword = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n              else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword =\r\n                  \"Password and Confirm Password didn't match.\";\r\n              }\r\n\r\n              if (!values.email) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n              else if (\r\n                !isValidEmail(values.email)\r\n              ) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                });\r\n              }\r\n\r\n              if (!values.password) {\r\n                errors.password = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n\r\n              if (!values.fullName) {\r\n                errors.fullName = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={handleRegistrationSubmit}\r\n          >\r\n            {({\r\n              values,\r\n              status,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n            }) => (\r\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                  {status && <div role=\"alert\" className=\"alert alert-danger\">\r\n                    <div className=\"alert-text\">{status}</div>\r\n                  </div>}\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      placeholder=\"Your email\"\r\n                      name=\"email\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(touched.email && errors.email)}\r\n                      InputProps={{\r\n                        startAdornment: <MailOutlineIcon />\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      type={pwConfig.registerPW ? 'text' : 'password'}\r\n                      placeholder=\"Your password\"\r\n                      name=\"password\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.password}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(touched.password && errors.password)}\r\n                      InputProps={{\r\n                        startAdornment: <VpnKeyIcon />,\r\n                        endAdornment: <IconButton\r\n                          onClick={() => {\r\n                            setPWConfig({\r\n                              ...pwConfig,\r\n                              registerPW: !pwConfig.registerPW\r\n                            })\r\n                          }}> {pwConfig.registerPW ? <VisibilityOff /> : <Visibility />}</IconButton>\r\n                      }}\r\n                    /></FormGroup>\r\n\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      type={pwConfig.registerCPW ? 'text' : 'password'}\r\n                      name=\"confirmPassword\"\r\n                      placeholder=\"Confirm password\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.confirmPassword}\r\n                      helperText={touched.confirmPassword && errors.confirmPassword}\r\n                      error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                      InputProps={{\r\n                        startAdornment: <VpnKeyIcon />,\r\n                        endAdornment: <IconButton\r\n                          onClick={() => {\r\n                            setPWConfig({\r\n                              ...pwConfig,\r\n                              registerCPW: !pwConfig.registerCPW\r\n                            })\r\n                          }}> {pwConfig.registerCPW ? <VisibilityOff /> : <Visibility />}</IconButton>\r\n                      }}\r\n                    /></FormGroup>\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      placeholder=\"Your full name\"\r\n                      name=\"fullName\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.fullName}\r\n                      helperText={touched.fullName && errors.fullName}\r\n                      error={Boolean(touched.fullName && errors.fullName)}\r\n                      InputProps={{\r\n                        startAdornment: <PersonIcon />\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      placeholder=\"Your phone\"\r\n                      name=\"phone\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.phone}\r\n                      helperText={touched.phone && errors.phone}\r\n                      error={Boolean(touched.phone && errors.phone)}\r\n                      InputProps={{\r\n                        startAdornment: <PhoneIcon />\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      placeholder=\"Your company\"\r\n                      name=\"company\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.company}\r\n                      helperText={touched.company && errors.company}\r\n                      error={Boolean(touched.company && errors.company)}\r\n                      InputProps={{\r\n                        startAdornment: <BusinessIcon />\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"btn-base btn-base--success btn-base--lg\"\r\n                    style={{\r\n                      margin: '15px 0'\r\n                    }}\r\n                    disabled={isSubmitting}\r\n                    className={`btn-base btn-base--success btn-base--lg ${clsx(\r\n                      {\r\n                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": registerLoading\r\n                      }\r\n                    )}`}\r\n                  >\r\n                    Sign up\r\n          </Button>\r\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Box textAlign=\"center\">\r\n                      <Link to=\"/auth/forgot-password\" href=\"#\" variant=\"body2\" style={{\r\n                        fontSize: '12px',\r\n                        color: '#6b6c6f'\r\n                      }}>\r\n                        Forgot password?\r\n              </Link>\r\n                    </Box>\r\n                  </Box>\r\n                </form>\r\n              )}\r\n          </Formik>\r\n        </TabPanel>\r\n        <TabPanel value={tab} index={1}>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validate={values => {\r\n              const errors = {};\r\n\r\n              if (!values.email) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n              else if (\r\n                !isValidEmail(values.email)\r\n              ) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                });\r\n              }\r\n\r\n              if (!values.password) {\r\n                errors.password = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={handleLoginSubmit}\r\n          >\r\n            {({\r\n              values,\r\n              status,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n            }) => (\r\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                  {status && <div role=\"alert\" className=\"alert alert-danger\">\r\n                    <div className=\"alert-text\">{status}</div>\r\n                  </div>}\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"email\"\r\n                      placeholder=\"Your email\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(touched.email && errors.email)}\r\n                      InputProps={{\r\n                        startAdornment: <MailOutlineIcon />\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className=\"input-base input-base--hasIcon\">\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      type={pwConfig.loginPW ? 'text' : 'password'}\r\n                      name=\"password\"\r\n                      placeholder=\"Your password\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.password}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(touched.password && errors.password)}\r\n                      InputProps={{\r\n                        startAdornment: <VpnKeyIcon />,\r\n                        endAdornment: <IconButton\r\n                          onClick={() => {\r\n                            setPWConfig({\r\n                              ...pwConfig,\r\n                              loginPW: !pwConfig.loginPW\r\n                            })\r\n                          }}> {pwConfig.loginPW ? <VisibilityOff /> : <Visibility />}</IconButton>\r\n                      }}\r\n                    /></FormGroup>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      margin: '15px 0'\r\n                    }}\r\n                    disabled={isSubmitting}\r\n                    className={`btn-base btn-base--success btn-base--lg ${clsx(\r\n                      {\r\n                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loginLoading\r\n                      }\r\n                    )}`}\r\n                  >\r\n                    Sign in\r\n          </Button>\r\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" style={{}}>\r\n                    <Box textAlign=\"center\">\r\n                      <Link to=\"/auth/forgot-password\" href=\"#\" variant=\"body2\" style={{\r\n                        fontSize: '12px',\r\n                        color: '#6b6c6f'\r\n                      }}>\r\n                        Forgot password?\r\n              </Link>\r\n                    </Box>\r\n                  </Box>\r\n                </form>\r\n              )}\r\n          </Formik>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    auth.actions,\r\n  )(Login)\r\n);\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { register } from \"../../crud/auth.crud\";\r\n\r\nfunction Registration(props) {\r\n  const { intl } = props;\r\n\r\n  return (\r\n    <div className=\"kt-login__body\">\r\n      <div className=\"kt-login__form\">\r\n        <div className=\"kt-login__title\">\r\n          <h3>\r\n            <FormattedMessage id=\"AUTH.REGISTER.TITLE\" />\r\n          </h3>\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n          }}\r\n          validate={values => {\r\n            const errors = {};\r\n\r\n            if (!values.email) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.password) {\r\n              errors.password = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n              errors.confirmPassword = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (values.password !== values.confirmPassword) {\r\n              errors.confirmPassword =\r\n                \"Password and Confirm Password didn't match.\";\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setStatus, setSubmitting }) => {\r\n            register(\r\n              values.email,\r\n              values.password\r\n            )\r\n              .then(({ data: { accessToken } }) => {\r\n                props.register(accessToken);\r\n              })\r\n              .catch(() => {\r\n                setSubmitting(false);\r\n                setStatus(\r\n                  intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n                  })\r\n                );\r\n              });\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            status,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n              <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                {status && (\r\n                  <div role=\"alert\" className=\"alert alert-danger\">\r\n                    <div className=\"alert-text\">{status}</div>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group mb-0\">\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    label=\"Username\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"username\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.username}\r\n                    helperText={touched.username && errors.username}\r\n                    error={Boolean(touched.username && errors.username)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mb-0\">\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    margin=\"normal\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    helperText={touched.email && errors.email}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mb-0\">\r\n                  <TextField\r\n                    type=\"password\"\r\n                    margin=\"normal\"\r\n                    label=\"Password\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"password\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    helperText={touched.password && errors.password}\r\n                    error={Boolean(touched.password && errors.password)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <TextField\r\n                    type=\"password\"\r\n                    margin=\"normal\"\r\n                    label=\"Confirm Password\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"confirmPassword\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.confirmPassword}\r\n                    helperText={touched.confirmPassword && errors.confirmPassword}\r\n                    error={Boolean(\r\n                      touched.confirmPassword && errors.confirmPassword\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"kt-login__actions\">\r\n                  <Link\r\n                    to=\"/auth/forgot-password\"\r\n                    className=\"kt-link kt-login__link-forgot\"\r\n                  >\r\n                    <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\" />\r\n                  </Link>\r\n\r\n                  <Link to=\"/auth\">\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-elevate kt-login__btn-secondary\">\r\n                      Back\r\n                  </button>\r\n                  </Link>\r\n\r\n                  <button\r\n                    disabled={isSubmitting}\r\n                    className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                  >\r\n                    Submit\r\n                </button>\r\n                </div>\r\n              </form>\r\n            )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    auth.actions\r\n  )(Registration)\r\n);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { TextField, Button, FormGroup, Icon } from '@material-ui/core';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { isValidEmail } from '../../helpers/helper'\r\nimport { requestPassword } from '../../crud/auth.crud'\r\nimport clsx from \"clsx\";\r\n\r\nForgotPassword.propTypes = {\r\n\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: '#6B6C6F',\r\n    '& .MuiIcon-fontSizeLarge': {\r\n      fontSize: '72px'\r\n    },\r\n    '& .kt-spinner--right:before': {\r\n      right: 15\r\n    },\r\n  },\r\n  route: {\r\n    fontSize: 12,\r\n    color: '#6B6C6F',\r\n    textAlign: 'center',\r\n    display: 'block'\r\n  },\r\n  formBanner: {\r\n    textAlign: 'center',\r\n  },\r\n  formLegend: {\r\n    color: '#014B68',\r\n    fontSize: 20,\r\n    marginBottom: 15\r\n  }\r\n})\r\n\r\nfunction ForgotPassword(props) {\r\n\r\n  const classes = useStyles()\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  let history = useHistory()\r\n\r\n\r\n  const handleSubmit = (values, { setStatus, setSubmitting }) => {\r\n    setSubmitting(true)\r\n    setTimeout(() => {\r\n      setLoading(true)\r\n      requestPassword(values.email)\r\n        .then(res => {\r\n          setLoading(false)\r\n          setSubmitting(false)\r\n          if (res.data.errMsg) {\r\n            setStatus(res.data.errMsg)\r\n          }\r\n          else {\r\n            history.replace('/login')\r\n          }\r\n        })\r\n        .catch(res => {\r\n          setLoading(false)\r\n          setSubmitting(false)\r\n        })\r\n    }, 500)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.formBanner}>\r\n        <div className={classes.formLegend}>\r\n          <Icon fontSize=\"large\">lock</Icon>\r\n          <p>Reset your password</p>\r\n        </div>\r\n        <div className={classes.formTitle}>\r\n          <p>Enter your email address and we will send you\r\nfurther instructions on how to reset the password</p>\r\n        </div>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          email: ''\r\n        }}\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.email) {\r\n            errors.email = intl.formatMessage({\r\n              id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n            });\r\n          }\r\n          else if (\r\n            !isValidEmail(values.email)\r\n          ) {\r\n            errors.email = intl.formatMessage({\r\n              id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n            });\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          status,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n            <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n              {status && <div role=\"alert\" className=\"alert alert-danger\">\r\n                <div className=\"alert-text\">{status}</div>\r\n              </div>}\r\n              <FormGroup className=\"input-base input-base--hasIcon\" >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  autoFocus\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                  helperText={touched.email && errors.email}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  InputProps={{\r\n                    startAdornment: <MailOutlineIcon />\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                  margin: '15px 0'\r\n                }}\r\n                disabled={isSubmitting}\r\n                className={`btn-base btn-base--success btn-base--lg ${clsx(\r\n                  {\r\n                    \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\r\n                  }\r\n                )}`}\r\n              >\r\n                Submit\r\n          </Button>\r\n              <Link className={classes.route} to=\"auth/login\">Return to Signin</Link>\r\n            </form>\r\n          )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default injectIntl(ForgotPassword)","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Visibility } from \"@material-ui/icons\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/styles';\nimport { IconButton, TextField, Button, FormGroup, Icon } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport clsx from \"clsx\";\nimport { setPassword } from \"../../crud/auth.crud\"\nimport { useHistory } from \"react-router-dom\";\n\n\nSetPassword.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        color: '#6B6C6F',\n        '& .MuiIcon-fontSizeLarge': {\n            fontSize: '72px'\n        },\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n    },\n    route: {\n        fontSize: 12,\n        color: '#6B6C6F',\n        textAlign: 'center',\n        display: 'block',\n    },\n    formBanner: {\n        textAlign: 'center',\n    },\n    formLegend: {\n        color: '#014B68',\n        fontSize: 20,\n        marginBottom: 15\n    }\n})\n\nfunction SetPassword(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const [loading, setLoading] = useState(false);\n    const search = useLocation().search\n    const queryString = search.split('token=')\n    const token = queryString[1] || ''\n    let history = useHistory()\n\n    const [pwConfig, setPWConfig] = useState({\n        password: false,\n        confirmPassword: false,\n    })\n\n    const handleSubmit = (values, { setStatus, setSubmitting }) => {\n\n        if (token) {\n            setLoading(true)\n            setSubmitting(true)\n            setTimeout(() => {\n                setPassword(values.password, token)\n                    .then(res => {\n                        setLoading(false)\n                        setSubmitting(false)\n                        if (res.data.errMsg) {\n                            setStatus(res.data.errMsg)\n                        }\n                        else {\n                            history.replace('/login')\n                        }\n                    })\n                    .catch(err => {\n                        setLoading(false)\n                        setSubmitting(false)\n                    })\n            }, 500)\n        }\n        else {\n            setStatus('Token is required')\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.formBanner}>\n                <div className={classes.formLegend}>\n                    <Icon fontSize=\"large\">lock</Icon>\n                    <p>Reset your password</p>\n                </div>\n            </div>\n            <Formik\n                initialValues={{\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validate={values => {\n                    const errors = {};\n\n                    if (!values.confirmPassword) {\n                        errors.confirmPassword = intl.formatMessage({\n                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                        });\n                    }\n                    else if (values.password !== values.confirmPassword) {\n                        errors.confirmPassword =\n                            \"Password and Confirm Password didn't match.\";\n                    }\n\n                    if (!values.password) {\n                        errors.password = intl.formatMessage({\n                            id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                        });\n                    }\n\n                    return errors;\n                }}\n                onSubmit={handleSubmit}\n            >\n                {({\n                    values,\n                    status,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                }) => (\n                        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                            {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                <div className=\"alert-text\">{status}</div>\n                            </div>}\n                            <FormGroup className=\"input-base input-base--hasIcon\">\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    type={pwConfig.password ? 'text' : 'password'}\n                                    placeholder=\"Your password\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.password}\n                                    helperText={touched.password && errors.password}\n                                    error={Boolean(touched.password && errors.password)}\n                                    InputProps={{\n                                        startAdornment: <VpnKeyIcon />,\n                                        endAdornment: <IconButton\n                                            onClick={() => {\n                                                setPWConfig({\n                                                    ...pwConfig,\n                                                    password: !pwConfig.password\n                                                })\n                                            }}> {pwConfig.password ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                    }}\n                                /></FormGroup>\n\n                            <FormGroup className=\"input-base input-base--hasIcon\">\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    type={pwConfig.confirmPassword ? 'text' : 'password'}\n                                    name=\"confirmPassword\"\n                                    placeholder=\"Confirm password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.confirmPassword}\n                                    helperText={touched.confirmPassword && errors.confirmPassword}\n                                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                                    InputProps={{\n                                        startAdornment: <VpnKeyIcon />,\n                                        endAdornment: <IconButton\n                                            onClick={() => {\n                                                setPWConfig({\n                                                    ...pwConfig,\n                                                    confirmPassword: !pwConfig.confirmPassword\n                                                })\n                                            }}> {pwConfig.confirmPassword ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                    }}\n                                /></FormGroup>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={isSubmitting}\n                                className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                    {\n                                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n                                    }\n                                )}`}\n                                style={{\n                                    margin: '15px 0'\n                                }}\n                            >\n                                Submit\n                            </Button>\n                            <Link className={classes.route} to=\"auth/login\">Cancel</Link>\n                        </form>\n                    )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default injectIntl(SetPassword);","import React from \"react\";\r\nimport { Link, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Registration from \"./Registration\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport SetPassword from \"./SetPassword\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Paper, Box, Avatar } from \"@material-ui/core\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#FFF',\r\n  },\r\n  paper: {\r\n    backgroundColor: '#FFF'\r\n  },\r\n  rightSideBanner: {\r\n    minHeight: '100vh',\r\n    backgroundImage: `url(${toAbsoluteUrl('/media/banners/auth-banner.png')})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    '&:after': {\r\n      content: '\"\"',\r\n      background: '#1B2733',\r\n      opacity: 0.53,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: 999,\r\n      left: 0,\r\n      top: 0,\r\n      display: 'block'\r\n    }\r\n  },\r\n  bannerTitle: {\r\n    color: '#FFF',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    textAlign: 'center',\r\n    fontWeight: 800,\r\n    zIndex: 1000\r\n  },\r\n  formContainer: {\r\n    height: '100vh',\r\n    overflowY: 'auto',\r\n    position: 'relative',\r\n  },\r\n  formHeader: {\r\n    zIndex: 999,\r\n    width: '100%',\r\n    backgroundColor: '#FFF'\r\n  },\r\n  formContent: {\r\n    maxWidth: '100%',\r\n    padding: '0 15px',\r\n    width: '380px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0 auto',\r\n    minHeight: 'calc(100% - 127px)'\r\n  },\r\n  formFooter: {\r\n    backgroundColor: '#FFF',\r\n    fontSize: '16px',\r\n    color: '#6B6C6F',\r\n    '& p': {\r\n      margin: 0\r\n    }\r\n  },\r\n  '@media screen and (max-width: 959px)': {\r\n    rightSideBanner: {\r\n      display: 'none'\r\n    }\r\n  }\r\n})\r\n\r\nexport default function AuthPage() {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <div className={classes.formContainer}>\r\n            <div className={classes.formHeader}>\r\n              <Box style={{\r\n                padding: '15px 30px'\r\n              }} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Box>\r\n                  <img src={toAbsoluteUrl('/media/logos/ece-logo.svg')} />\r\n                </Box>\r\n                {/* <Box>\r\n                  <Link href=\"#\">Home</Link>\r\n                </Box> */}\r\n              </Box>\r\n            </div>\r\n            <div className={classes.formContent}>\r\n              <Switch>\r\n                <Route path=\"/auth/login\" component={Login} />\r\n                <Route path=\"/auth/registration\" component={Registration} />\r\n                <Route\r\n                  path=\"/auth/forgot-password\"\r\n                  component={ForgotPassword}\r\n                />\r\n                <Route\r\n                  path=\"/auth/set-password\"\r\n                  component={SetPassword}\r\n                />\r\n                <Redirect from=\"/auth\" exact={true} to=\"/auth/login\" />\r\n                <Redirect to=\"/auth/login\" />\r\n              </Switch>\r\n            </div>\r\n            <div className={classes.formFooter}>\r\n              <Box p={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Box>\r\n                  <Link to=\"/privacy-policies\">Privacy policy</Link>\r\n                </Box>\r\n                <Box>\r\n                  <Link to=\"/terms-conditions\">Terms and conditions</Link>\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <div className={classes.rightSideBanner}>\r\n            <div className={classes.bannerTitle}>\r\n              <p style={{\r\n                fontSize: '20px'\r\n              }}>WELCOME TO</p>\r\n              <p style={{\r\n                fontSize: '40px'\r\n              }}>ECOMEASY</p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Formik } from \"formik\";\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\";\nimport { makeStyles } from '@material-ui/styles';\nimport { useDispatch } from 'react-redux';\nimport { connect } from \"react-redux\";\nimport Header from \"../../../_metronic/layout/header/Header\";\nimport { Grid, FormControl, InputLabel, Select, MenuItem, Button, TextField } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { createBrand } from '../../crud/brand.crud';\nimport { actionTypes } from \"../../store/ducks/brand.duck\"\nimport { actionTypes as authAction } from \"../../../app/store/ducks/auth.duck\"\nimport clsx from 'clsx';\nimport _ from \"lodash\"\n\nCreateBrand.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        height: '100vh',\n        backgroundImage: `url(${toAbsoluteUrl('/media/bg/brand-bg.png')})`,\n        backgroundSize: 'cover',\n        backgroundPosition: '50% 0',\n        position: 'relative',\n        backgroundRepeat: 'no-repeat',\n        '& .kt-header': {\n            backgroundColor: 'transparent !important',\n            border: 'none',\n            position: 'relative',\n            left: '0 !important'\n        },\n        '& .kt-spinner--right:before': {\n            right: 15\n        },\n        '& .MuiFormControl-root': {\n            marginBottom: '10px'\n        },\n        '& .MuiSelect-root': {\n            padding: '14px 20px',\n        },\n        '& .MuiInputBase-root': {\n            fontSize: '14px',\n            color: '#6b6c6f',\n            borderRadius: '20px',\n            boxShadow: '0 0 3px 0 rgba(0, 0, 0, 0.05)'\n        },\n        '& .MuiInputBase-multiline': {\n            padding: '14px 20px',\n        },\n        '& .kt-header__topbar-wrapper': {\n            '& span': {\n                color: 'rgb(1, 75, 104) !important'\n            },\n            '& .kt-header__topbar-user': {\n                color: 'rgb(1, 75, 104) !important'\n            }\n        }\n    },\n    mainLogo: {\n        position: 'absolute',\n        top: 15,\n        left: 30,\n        zIndex: 99\n    },\n    formContainer: {\n        zIndex: 10,\n        backgroundColor: 'white',\n        borderRadius: '25px',\n        boxShadow: '0 0 10px rgba(192, 192, 192, 0.3)',\n        padding: '50px 30px',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 600,\n        maxWidth: '100%'\n    },\n    formWrapper: {\n        maxWidth: '350px',\n        margin: '0 auto'\n    },\n    formLogo: {\n        marginBottom: '15px',\n        textAlign: 'center',\n        '& img': {\n            maxWidth: '100%'\n        }\n    },\n    formTitle: {\n        textAlign: 'center',\n        marginBottom: '15px',\n        '& p': {\n            margin: 0\n        },\n    },\n    formContent: {\n\n    },\n    createBtn: {\n\n    }\n})\n\nfunction CreateBrand(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles()\n    let history = useHistory()\n    const { intl } = props\n    const [loading, setLoading] = useState(false);\n    const [loadingButtonStyle, setLoadingButtonStyle] = useState({\n        paddingRight: \"2.5rem\"\n    });\n\n    const enableLoading = () => {\n        setLoading(true);\n        setLoadingButtonStyle({ paddingRight: \"3.5rem\" });\n    };\n\n    const disableLoading = () => {\n        setLoading(false);\n        setLoadingButtonStyle({ paddingRight: \"2.5rem\" });\n    };\n\n    const handleSubmit = (values, { setStatus, setSubmitting }) => {\n        enableLoading();\n        createBrand(values.brand)\n            .then((res) => {\n                disableLoading()\n                const errMgs = _.get(res, 'data.errMgs')\n                if (errMgs) {\n                    setStatus(errMgs)\n                }\n                else {\n                    const data = _.get(res, 'data.result')\n                    dispatch({\n                        type: actionTypes.AddBrand,\n                        payload: data\n                    })\n                    const defaultPage = _.get(props, 'auth.defaultPage')\n                    defaultPage === '/create-brand' && dispatch({\n                        type: authAction.SetPage,\n                        payload: `/connect-market/${data._id}`\n                    })\n                    history.push('/brand')\n                }\n\n            })\n            .catch(() => {\n                setSubmitting(false)\n                disableLoading()\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <Header />\n            <Link className={classes.mainLogo} to=\"/dashboard/revenue\">\n                <img src={toAbsoluteUrl('/media/logos/ece-logo.svg')} />\n            </Link>\n            <div className={classes.formContainer}>\n                <div className={classes.formWrapper}>\n\n                    <div className={classes.formHeader}>\n                        <div className={classes.formLogo}>\n                            <img src={toAbsoluteUrl('/media/logos/create-brand-form-logo.svg')} />\n                        </div>\n                    </div>\n                    <Formik\n                        initialValues={{\n                            brand: ''\n                        }}\n                        validate={values => {\n                            const errors = {};\n\n                            if (!values.brand) {\n                                errors.brand = intl.formatMessage({\n                                    id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                });\n                            }\n\n                            return errors;\n                        }}\n                        onSubmit={handleSubmit}\n                    >\n                        {({\n                            values,\n                            status,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            isSubmitting\n                        }) => (\n                                <form autoComplete=\"off\" noValidate={true} onSubmit={handleSubmit}>\n                                    {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                        <div className=\"alert-text\">{status}</div>\n                                    </div>}\n                                    <div className={`${classes.formContent} create-brand`}>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={12}>\n                                                <FormControl className=\"input-base\" fullWidth variant=\"outlined\">\n                                                    <TextField\n                                                        id=\"brand\"\n                                                        name=\"brand\"\n                                                        helperText=\"This field is required\"\n                                                        placeholder=\"Tên brand\"\n                                                        value={values.brand}\n                                                        helperText={touched.brand && errors.brand}\n                                                        error={Boolean(touched.brand && errors.brand)}\n                                                        variant=\"outlined\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange} />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container>\n                                            <Grid item xs={12}>\n                                                <Button\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    type=\"submit\"\n                                                    disabled={isSubmitting}\n                                                    className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                        {\n                                                            \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n                                                        }\n                                                    )}`}\n                                                    style={loadingButtonStyle}>\n                                                    + ADD BRAND\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                </form>\n                            )}\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = store => ({\n    brand: store.brand,\n    auth: store.auth\n});\n\nexport default injectIntl(connect(mapStateToProps)(CreateBrand));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { viewInvitation, acceptInvitation, register } from '../../crud/auth.crud'\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Avatar, Dialog, DialogContent, Icon, FormGroup, TextField, IconButton, Link, CircularProgress } from '@material-ui/core';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { toAbsoluteUrl } from '../../../_metronic/utils/utils'\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Formik } from \"formik\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport _ from \"lodash\"\nimport clsx from \"clsx\";\nimport { ROLES } from \"../../constant/role\"\n\nConfirmInvitation.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n        padding: 50,\n        textAlign: 'center',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    invitationTitle: {\n        fontSize: 32,\n    },\n    invitationAction: {\n        marginTop: 30\n    },\n    resetPasswordForm: {\n        padding: '30px',\n        width: 600,\n        textAlign: 'center',\n        '& .kt-spinner--right:before': {\n            right: 15\n        }\n    },\n    resetPasswordFormContainer: {\n        width: 350,\n        margin: '0 auto'\n    },\n    formLegend: {\n        color: '#014B68',\n        fontSize: 20,\n        marginBottom: 15,\n        '& .material-icons': {\n            fontSize: 68\n        },\n    },\n})\n\nfunction ConfirmInvitation(props) {\n    const classes = useStyles()\n    const { intl } = props;\n    const search = useLocation().search\n    const queryString = search.split('token=')\n    const token = queryString[1] || ''\n    const [brand, setBrand] = useState('')\n    const [brandId, setBrandId] = useState('')\n    const [email, setEmail] = useState('')\n    const [recipient, setRecipient] = useState('')\n    const [err, setErr] = useState('')\n    const [registerDialog, setRegisterDialog] = useState(false)\n    const [registerLoading, setRegisterLoading] = useState(false);\n    const [loading, setLoading] = useState(token ? true : false);\n    const [submitLoading, setSubmitLoading] = useState(false);\n    const [isMember, setIsMember] = useState(false);\n    const [role, setRole] = useState();\n    const [pwConfig, setPWConfig] = useState({\n        password: false,\n        cPassowrd: false,\n    })\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        if (token) {\n            viewInvitation(token)\n                .then(res => {\n                    const errMsg = _.get(res, 'data.result.errMsg')\n                    setLoading(false)\n                    if (errMsg) {\n                        setErr('This invitation is no longer existed')\n                    }\n                    else {\n                        setBrandId(_.get(res, 'data.result.brand._id'))\n                        setBrand(_.get(res, 'data.result.brand.name'))\n                        setEmail(_.get(res, 'data.result.brand.admins')[0].email)\n                        setRecipient(_.get(res, 'data.result.email'))\n                        setRole(_.get(res, 'data.result.role'))\n                        setIsMember(_.isObject(_.get(res, 'data.result.user')))\n                    }\n                })\n                .catch(err => {\n                    setLoading(false)\n                    setErr('err')\n                })\n        }\n        else {\n            setErr('Your token is wrong. Please check again')\n        }\n\n    }, [])\n\n    const handleSubmit = (action) => {\n        setSubmitLoading(true)\n        setTimeout(() => {\n            acceptInvitation(brandId, token, action)\n                .then(res => {\n                    setSubmitLoading(false)\n                    history.push('/')\n                })\n                .catch(err => {\n                    setSubmitLoading(false)\n                })\n        }, 500)\n\n    }\n\n    const handleRegistrationSubmit = (values, { setStatus, setSubmitting }) => {\n        setRegisterLoading(true)\n        setTimeout(() => {\n            register(\n                recipient,\n                values.password,\n                role\n            )\n                .then(res => {\n                    setRegisterLoading(false)\n                    setSubmitting(false);\n                    const errMsg = _.get(res, 'data.errMsg')\n                    if (errMsg) {\n                        setStatus(errMsg)\n                    }\n                    else {\n                        handleSubmit('accept')\n                    }\n                })\n                .catch(() => {\n                    setRegisterLoading(false)\n                    setSubmitting(false);\n                    setStatus(\n                        intl.formatMessage({\n                            id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n                        })\n                    );\n                });\n        }, 1000)\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.invitationContainer}>\n                <img style={{\n                    marginBottom: 15,\n                    width: 100\n                }} src={toAbsoluteUrl('/media/logos/ece-logo.svg')} />\n                {\n                    loading ? <CircularProgress style={{\n                        display: 'block',\n                        margin: '0 auto'\n                    }} /> :\n\n                        err ? <div className={classes.errorSection}>\n                            <p className={classes.invitationTitle}>{err}</p>\n                            <div className={classes.invitationAction}>\n                                <Button className=\"btn-base btn-base--cancel\"\n                                    onClick={() => {\n                                        window.open(\"about:blank\", \"_self\");\n                                        window.close();\n                                    }}>Cancel</Button>\n                            </div>\n                        </div>\n                            :\n                            <div className={classes.invitation}>\n                                <p className={classes.invitationTitle}>You have a invitation to manage brand <span style={{\n                                    fontWeight: 700,\n                                    textDecoration: 'underline'\n                                }}>{brand}</span></p>\n                                {!submitLoading ? <div className={classes.invitationAction}>\n                                    <Button style={{\n                                        marginRight: 5\n                                    }}\n                                        onClick={e => handleSubmit('reject')} className=\"btn-base btn-base--danger\">Decline</Button>\n                                    <Button style={{\n                                        marginLeft: 5\n                                    }}\n                                        onClick={e => isMember ? handleSubmit('accept') : setRegisterDialog(true)} className=\"btn-base btn-base--success\">Accept</Button>\n                                </div>\n                                    : <CircularProgress style={{\n                                        display: 'block',\n                                        margin: '0 auto'\n                                    }} />\n                                }\n                            </div>\n\n                }\n            </div>\n            <Dialog\n                open={registerDialog}\n                keepMounted\n                maxWidth=\"md\"\n                onClose={e => setRegisterDialog(false)}\n            >\n                <DialogContent>\n                    <div className={classes.resetPasswordForm}>\n                        <div className={classes.formLegend}>\n                            <Icon fontSize=\"large\">lock</Icon>\n                            <p>Create your password</p>\n                        </div>\n                        <Formik\n                            initialValues={{\n                                password: \"\",\n                                confirmPassword: \"\"\n                            }}\n                            validate={values => {\n                                const errors = {};\n\n                                if (!values.password) {\n                                    errors.password = intl.formatMessage({\n                                        id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                    });\n                                }\n\n                                if (!values.confirmPassword) {\n                                    errors.confirmPassword = intl.formatMessage({\n                                        id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n                                    });\n                                } else if (values.password !== values.confirmPassword) {\n                                    errors.confirmPassword =\n                                        \"Password and Confirm Password didn't match.\";\n                                }\n\n                                return errors;\n                            }}\n                            onSubmit={handleRegistrationSubmit}\n                        >\n                            {({\n                                values,\n                                status,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting\n                            }) => (\n\n                                    <form onSubmit={handleSubmit} className={classes.resetPasswordFormContainer}>\n                                        {status && <div role=\"alert\" className=\"alert alert-danger\">\n                                            <div className=\"alert-text\">{status}</div>\n                                        </div>}\n                                        <FormGroup className=\"input-base input-base--hasIcon\">\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                type=\"email\"\n                                                name=\"password\"\n                                                placeholder=\"Email\"\n                                                value={recipient}\n                                                InputProps={{\n                                                    startAdornment: <MailOutlineIcon />,\n                                                    readOnly: true\n                                                }}\n                                            /></FormGroup>\n                                        <FormGroup className=\"input-base input-base--hasIcon\">\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                type={pwConfig.password ? 'text' : 'password'}\n                                                name=\"password\"\n                                                placeholder=\"New Password\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={values.password}\n                                                helperText={touched.password && errors.password}\n                                                error={Boolean(touched.password && errors.password)}\n                                                InputProps={{\n                                                    startAdornment: <VpnKeyIcon />,\n                                                    endAdornment: <IconButton\n                                                        onClick={() => {\n                                                            setPWConfig({\n                                                                ...pwConfig,\n                                                                password: !pwConfig.password\n                                                            })\n                                                        }}> {pwConfig.password ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                                }}\n                                            /></FormGroup>\n                                        <FormGroup className=\"input-base input-base--hasIcon\">\n                                            <TextField\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                fullWidth\n                                                type={pwConfig.cPassword ? 'text' : 'password'}\n                                                name=\"confirmPassword\"\n                                                placeholder=\"Confirm New Password\"\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                                value={values.confirmPassword}\n                                                helperText={touched.confirmPassword && errors.confirmPassword}\n                                                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                                                InputProps={{\n                                                    startAdornment: <VpnKeyIcon />,\n                                                    endAdornment: <IconButton\n                                                        onClick={() => {\n                                                            setPWConfig({\n                                                                ...pwConfig,\n                                                                cPassword: !pwConfig.cPassword\n                                                            })\n                                                        }}> {pwConfig.cPassword ? <VisibilityOff /> : <Visibility />}</IconButton>\n                                                }}\n                                            /></FormGroup>\n                                        <Button\n                                            type=\"submit\"\n                                            style={{\n                                                width: '100%',\n                                                marginTop: 15\n                                            }} className={`btn-base btn-base--success btn-base--lg ${clsx(\n                                                {\n                                                    \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": registerLoading\n                                                }\n                                            )}`}>Create Password</Button>\n                                        <Link\n                                            onClick={e => setRegisterDialog(false)}\n                                            style={{\n                                                color: '#6B6C6F',\n                                                marginTop: 15,\n                                                display: 'inline-block'\n                                            }}>Cancel</Link>\n                                    </form>\n                                )}\n                        </Formik>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default injectIntl(\n    connect()(ConfirmInvitation)\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button, Icon, Table, TableHead, TableRow, TableCell, TextField, FormGroup,\n  CircularProgress, TableBody, MenuItem, Select, FormControl, Dialog, DialogActions, DialogContent\n} from '@material-ui/core';\nimport { getJob, getData } from \"../../crud/data.crud\"\nimport _ from \"lodash\"\nimport { parseLocaleString } from \"../../helpers/helper\"\nimport XLSX from \"xlsx\"\nimport { saveAs } from 'file-saver';\nimport { Formik } from \"formik\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nCrawlData.propTypes = {\n\n};\n\nexport const TRICKS = ['price', 'price_max', 'price_min', 'price_before_discount']\n\nexport const CELL_FORMAT = {\n  IMAGE: 'image',\n  NUMBER: 'number',\n  STRING: 'string'\n}\n\nexport const MARKET = {\n  shopee: {\n    label: 'SHOPEE',\n    value: 'shopee',\n    fields: {\n      image: 'image',\n      name: 'name',\n      price: 'price',\n      price_before_discount: 'price_before_discount',\n      discount: 'discount',\n      historical_sold: 'historical_sold',\n      sold: 'sold',\n      stock: 'stock',\n      view_count: 'view_count',\n      liked_count: 'liked_count',\n      cmt_count: 'cmt_count',\n      rating_star: 'rating_star',\n      ratings_count: 'ratings_count',\n      shop_location: 'shop_location'\n    }\n  },\n  lazada: {\n    label: 'LAZADA',\n    value: 'lazada',\n    fields: {\n      name: 'name',\n      price: 'price',\n      discount: 'discount',\n      rating_star: 'ratingScore',\n    }\n  }\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 30,\n    '& tr': {\n      '&:nth-child(even)': {\n        background: 'rgba(140, 160, 179, 0.1)'\n      }\n    },\n  },\n  filterSection: {\n    marginBottom: '30px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  searchBlock: {\n    marginRight: '15px'\n  },\n  datatable: {\n    border: '1px solid #e0e0e0'\n  },\n})\n\nfunction CrawlData(props) {\n  const classes = useStyles()\n  const [products, setProducts] = useState([])\n  const [keyword, setKeyword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [timer, setTimer] = useState()\n  const [shops, setShops] = useState([])\n  const [market, setMarket] = useState(MARKET.shopee.value)\n  const [marketList, setMarketList] = useState([MARKET.shopee])\n  const [searchBy, setSearchBy] = useState('keyword')\n  const [errPopup, setErrPopup] = useState(false)\n  const [errMessage, setErrMessage] = useState('')\n\n  const { intl } = props;\n\n  const columns = {\n    image: {\n      label: 'Hình sản phẩm',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.IMAGE,\n      defaultValue: ''\n    },\n    name: {\n      label: 'Tên sản phẩm',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.STRING,\n      defaultValue: ''\n    },\n    price: {\n      label: 'Giá',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    discount: {\n      label: 'Giảm giá',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.STRING,\n      defaultValue: 0\n    },\n    price_before_discount: {\n      label: 'Giá chưa giảm',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    historical_sold: {\n      label: 'Đã bán',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    sold: {\n      label: 'Lượt bán trong 30 ngày',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    stock: {\n      label: 'Tồn kho',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    view_count: {\n      label: 'Lượt xem',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    liked_count: {\n      label: 'Lượt thích',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    cmt_count: {\n      label: 'Lượt comment',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    rating_star: {\n      label: 'Đánh giá',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    ratings_count: {\n      label: 'Lượt đánh giá',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.NUMBER,\n      defaultValue: 0\n    },\n    shop_location: {\n      label: 'Địa chỉ shop',\n      horizontalAlign: 'left',\n      cellFormat: CELL_FORMAT.STRING,\n      defaultValue: ''\n    }\n  }\n\n  // useEffect(() => {\n  //   search()\n  // }, [market])\n\n  const getCellFormatTemplate = (format, content, key, link) => {\n    switch (format) {\n      case CELL_FORMAT.NUMBER:\n        return `${parseLocaleString(TRICKS.includes(key) ? Number(content) / 100000 : content)}`\n        break;\n      case CELL_FORMAT.STRING:\n        if (key === 'name')\n          return <React.Fragment><a href={link} target=\"_blank\">{content}</a></React.Fragment>\n        return content\n        break;\n      case CELL_FORMAT.IMAGE:\n        return <React.Fragment><img style={{\n          width: 55\n        }} src={content} /></React.Fragment>\n        break;\n    }\n  }\n\n  const exportExcel = () => {\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"Shopee\",\n      Subject: \"Shopee\",\n      Author: \"user\",\n      CreatedDate: new Date(2017, 12, 19)\n    };\n    wb.SheetNames.push(\"Shopee\");\n    var col = []\n    Object.keys(columns).forEach(c => {\n      col.push(columns[c].label)\n    })\n    var ws_data = [];\n    ws_data.push(col)\n    products && products.length > 0 && products.forEach(p => {\n      var row = []\n      Object.keys(columns).map(c => {\n        row.push(TRICKS.includes(c) ? Number(p[MARKET[market].fields[c]]) / 100000 : p[MARKET[market].fields[c]])\n\n      })\n      ws_data.push(row)\n    })\n    var ws = XLSX.utils.aoa_to_sheet(ws_data);\n    wb.Sheets[\"Shopee\"] = ws;\n    var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n    function s2ab(s) {\n      var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\n      var view = new Uint8Array(buf);  //create uint8array as viewer\n      for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet\n      return buf;\n    }\n    saveAs(new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }), `shopee-${new Date().getTime()}.xlsx`);\n\n  }\n\n  const search = (values, { setStatus, setSubmitting }) => {\n    setLoading(true)\n    setProducts([])\n    setShops([])\n    setErrMessage('')\n    if (timer) {\n      clearInterval(timer);\n      setTimer()\n    }\n    getJob(searchBy === 'link' ? getShopId(values.keyword) : values.keyword, market, searchBy === 'link')\n      .then(res => {\n        const job = _.get(res, 'data.result.job')\n        let errMsg = _.get(res, 'data.errMsg')\n        if (errMsg) {\n          setErrMessage(errMsg)\n          setErrPopup(true)\n          setLoading(false)\n        }\n        else {\n          if (job) {\n            let localTimer = setInterval(() => {\n              getData(job)\n                .then(res => {\n                  const status = _.get(res, 'data.result.status')\n                  errMsg = _.get(res, 'data.errMsg')\n                  if (errMsg) {\n                    setErrMessage(errMsg)\n                    setErrPopup(true)\n                  }\n                  else {\n                    if (status !== 'processing') {\n                      const shop = _.get(res, 'data.result.shops')\n                      let products = _.get(res, 'data.result.products')\n                      products.forEach(item => {\n                        if (market === MARKET.shopee.value) {\n                          item['rating_star'] = _.get(item, 'item_rating.rating_star')\n                          item['image'] = _.get(item, 'images[0]')\n                          item['ratings_count'] = _.sum(_.get(item, 'item_rating.rating_count'));\n                        }\n                      })\n                      setShops(shop)\n                      setProducts(products)\n                      setLoading(false)\n                      clearInterval(localTimer)\n                    }\n                  }\n                })\n                .catch(err => {\n                  setLoading(false)\n                  clearInterval(localTimer)\n                })\n            }, 5000)\n            setTimer(localTimer)\n          }\n\n          else {\n            setLoading(false)\n          }\n        }\n      })\n      .catch(err => setLoading(false))\n  }\n\n  const handleSearchByChange = e => {\n    setSearchBy(e.target.value)\n  }\n\n  const getShopId = txt => {\n    let link = ''\n    try {\n      link = txt.split('shop/')[1].split('/')[0]\n    }\n    catch (err) {\n      link = ''\n    }\n    return link\n  }\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        initialValues={{\n          keyword\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.keyword) {\n            errors.keyword = intl.formatMessage({\n              id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n            });\n          }\n          else if (searchBy === 'link' && !getShopId(values.keyword)) {\n            errors.keyword = 'Invalid link. Ex: https://shopee.vn/shop/xxxxxxxx'\n          }\n\n          return errors;\n        }}\n        onSubmit={search}\n      >\n        {({\n          values,\n          status,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          resetForm\n        }) => (\n            <form\n              style={{\n                display: 'flex',\n                alignItems: 'flex-start'\n              }}\n              onSubmit={handleSubmit}\n              className={classes.filterSection}>\n              <FormControl variant=\"outlined\" className=\"dropdown\" style={{\n                marginRight: 15\n              }}>\n                <Select\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\"\n                    },\n                    transformOrigin: {\n                      vertical: \"top\",\n                      horizontal: \"left\"\n                    },\n                    getContentAnchorEl: null\n                  }}\n                  className=\"btn-base btn-base--success\"\n                  id=\"searchBy\"\n                  label=\"Search By\"\n                  value={searchBy}\n                  onChange={handleSearchByChange}\n                >\n                  <MenuItem value=\"keyword\">Keyword</MenuItem>\n                  <MenuItem value=\"link\">Link</MenuItem>\n                </Select>\n              </FormControl>\n              <div className={`${classes.searchBlock} search`}>\n                <FormGroup className=\"input-base input-base--sm\">\n                  <TextField\n                    value={values.keyword}\n                    name=\"keyword\"\n                    id=\"keyword\"\n                    variant=\"outlined\"\n                    helperText={touched.keyword && errors.keyword}\n                    error={Boolean(touched.keyword && errors.keyword)}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    placeholder={searchBy === 'keyword' ? 'Type keyword' : 'Input link'} />\n                </FormGroup>\n              </div>\n              <Button\n                style={{\n                  marginRight: 15\n                }}\n                disabled={loading}\n                type=\"submit\"\n                className=\"btn-base btn-base--success\" >Search</Button>\n              <Button\n                disabled={products && products.length === 0}\n                onClick={exportExcel}\n              ><Icon>get_app</Icon></Button>\n            </form>\n          )}\n      </Formik>\n\n      <FormControl variant=\"outlined\" className=\"dropdown\" style={{\n        marginBottom: 30\n      }}>\n        <Select\n          MenuProps={{\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\"\n            },\n            getContentAnchorEl: null\n          }}\n          className=\"btn-base btn-base--success\"\n          labelId=\"market\"\n          id=\"market\"\n          label=\"Market\"\n          value={market}\n          onChange={e => setMarket(e.target.value)}\n        >\n          {marketList.map(item => (\n            <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div className={classes.datatable}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {Object.keys(columns).map((col, index) => (\n                <TableCell className={`${classes.tableHeader} ${classes.tableCell}`}\n                  align=\"left\" key={index}>{columns[col].label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products && products.map((row, index) => (\n              <TableRow key={index}>\n                {\n                  Object.keys(columns).map(col => {\n                    const isNoDiscount = col === 'price_before_discount' && row[MARKET[market].fields['price_before_discount']] === 0\n                    return (isNoDiscount ? <TableCell>{getCellFormatTemplate(columns[col].cellFormat, row[MARKET[market].fields['price']], col, row.link)}</TableCell> :\n                      <TableCell>{getCellFormatTemplate(columns[col].cellFormat, row[MARKET[market].fields[col]], col, row.link)}</TableCell>\n                    )\n                  })\n                }\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n      {\n        loading && <div className=\"spinner-container\">\n          <CircularProgress />\n        </div>\n      }\n      <Dialog\n        open={errPopup}\n        keepMounted\n        maxWidth=\"sm\"\n        onClose={() => setErrPopup(false)}\n      >\n        <DialogContent>\n          <div className=\"popup-message\">\n            <Icon>warning</Icon>\n            <p>{errMessage}</p>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => setErrPopup(false)}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div >\n  );\n}\n\nexport default injectIntl(CrawlData);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from '@material-ui/core';\nimport { toAbsoluteUrl } from \"../../../_metronic/utils/utils\"\nimport { Link } from \"react-router-dom\";\n\nTermsAndConditions.propTypes = {\n\n};\n\nfunction TermsAndConditions(props) {\n    return (\n        <div>\n            <div className=\"sticky-header\">\n                <Container maxWidth=\"lg\">\n                    <Link to=\"/\"><img src={toAbsoluteUrl('/media/logos/ece-logo.svg')} /></Link>\n                </Container>\n            </div>\n            <Container maxWidth=\"lg\">\n                <div className=\"information\">\n                    <p className=\"information__legend\">Terms and conditions</p>\n                    <p className=\"information__title\">QUY TRÌNH GIẢI QUYẾT TRANH CHẤP, KHIẾU NẠI</p>\n                    <ul className=\"information__level1\">\n                        <li><span>Đối tác và ECOMEASY có trách nhiệm tiếp nhận khiếu nại và hỗ trợ\nKhách hàng liên quan đến giao dịch tại ECOMEASY.</span></li>\n                        <li><span>Khi phát sinh tranh chấp, ECOMEASY đề cao giải pháp thương\n                        lượng, hòa giải giữa các bên nhằm duy trì sự tin cậy của Thành viên\n                        vào chất lượng dịch vụ của ECOMEASY và thực hiện theo các bước\nsau:</span>\n                            <ul className=\"information__level3\">\n                                <li><span>Bước 1: Khách hàng khiếu nại về hàng hóa của Đối tác qua\n                                email: loi@ecomeasy.asia hoặc gọi đến số điện thoại 0928625037 hoặc\n                                gửi đến địa chỉ Công ty TNHH ECOMEASY E-COMMERCE, địa chỉ:\nTầng 3, 208-210 Khánh Hội, Phường 6, Quận 4, Tp HCM</span></li>\n                                <li><span>Bước 2: Bộ phận chăm sóc Thành viên của ECOMEASY sẽ tiếp nhận\n                                các khiếu nại của Khách hàng, tùy theo tính chất và mức độ của khiếu\n                                nại thì ECOMEASY sẽ có những biện pháp cụ thể hỗ trợ Khách hàng để\ngiải quyết tranh chấp đó;</span></li>\n                                <li><span>Bước 3: ECOMEASY yêu cầu Khách hàng và Đối tác phải cung cấp đủ\nthông tin liên quan đến giao dịch, hàng hóa.</span></li>\n                                <li><span>Bước 4: ECOMEASY đứng ra làm bên thứ 3 hòa giải cho Khách hàng\n                                và Đối tác hoặc tiến hành thương lượng với Khách hàng/ Đối tác nếu\n                                tranh chấp với ECOMEASY. Trong trường hợp tranh chấp, khiếu nại\n                                nằm ngoài khả năng và thẩm quyền của ECOMEASY thì ban quản trị sẽ\n                                yêu cầu Khách hàng đưa vụ việc này ra cơ quan nhà nước có thẩm\nquyền giải quyết theo pháp luật.</span>\n                                    <ul>\n                                        <li><span>Thời gian tiếp nhận và xử lý phản ánh là 03 (ba) ngày làm việc kể từ\nthời điểm công ty nhận được phản ánh từ Khách hàng.</span></li>\n                                        <li><span>ECOMEASY tôn trọng và nghiêm túc thực hiện các quy định pháp\n                                        luật về bảo vệ quyền lợi người tiêu dùng. ECOMEASY sẽ cung cấp\n                                        những thông tin lên quan đến Khách hàng và Đối tác nếu được\nKhách hàng hoặc Đối tác (liên quan đến tranh chấp) yêu cầu.</span></li>\n                                        <li><span>Khách hàng và Đối tác có trách nhiệm trong việc tích cực giải quyết\n                                        vấn đề. Đối tác hàng có trách nhiệm cung cấp văn bản liên quan đến\nsự việc khiến Thành viên khiếu nại.</span></li>\n                                        <li><span>Khách hàng và Đối tác sau khi giải quyết xong tranh chấp phải báo\n                                        lại cho ban quản trị ECOMEASY. Trong trường hợp lỗi thuộc về Đối\n                                        tác, ECOMEASY sẽ có biện pháp cảnh cáo, khóa tài khoản hoặc\n                                        chuyển cho cơ quan pháp luật có thẩm quyền tùy theo mức độ sai\n                                        phạm. ECOMEASY sẽ chấm dứt và gỡ bỏ toàn bộ bài viết, bài live-\n                                        stream về sản phẩm của Đối tác đó trên ECOMEASY đồng thời yêu\ncầu Đối tác đó bồi thường trên cơ sở thỏa thuận với Khách hàng.</span></li>\n                                        <li><span>Nếu thương lượng hòa giải không thành thì Đối tác hoặc Khách\n                                        hàng đều có quyền nhờ đến cơ quan pháp luật có thẩm quyền can\n                                        thiệp nhằm bảo đảm lợi ích hợp pháp của các bên nhất là cho Thành\nviên.</span></li>\n                                    </ul></li>\n                            </ul></li>\n                    </ul>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default TermsAndConditions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nBackdropLoading.propTypes = {\n\n};\n\nconst useStyles = makeStyles({\n    root: {\n\n    }\n})\n\nfunction BackdropLoading(props) {\n    return (\n        <div style={{\n            background: 'rgba(0, 0, 0, 0.4)',\n            width: '100vw',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            zIndex: 99999\n        }}>\n            <div className=\"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n}\n\nexport default BackdropLoading;","/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/pages/auth/AuthPage`, `src/pages/home/HomePage`).\r\n */\r\n\r\nimport React, { Suspense, lazy } from \"react\";\r\nimport { Redirect, Route, Switch, withRouter, useLocation } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport HomePage from \"../pages/home/HomePage\";\r\nimport ErrorsPage from \"../pages/errors/ErrorsPage\";\r\nimport LogoutPage from \"../pages/auth/Logout\";\r\nimport { LayoutContextProvider } from \"../../_metronic\";\r\nimport { LayoutSplashScreen } from '../../_metronic'\r\nimport Layout from \"../../_metronic/layout/Layout\";\r\nimport * as routerHelpers from \"../router/RouterHelpers\";\r\nimport AuthPage from \"../pages/auth/AuthPage\";\r\nimport CreateBrand from '../pages/home/CreateBrand';\r\nimport ConfirmInvitation from \"../pages/common/ConfirmInvitation\";\r\nimport CrawlData from '../pages/crawl/CrawlData'\r\nimport Privacy from \"../pages/common/Privacy\"\r\nimport TermsAndConditions from \"../pages/common/TermsAndConditions\"\r\nimport { CircularProgress, Backdrop } from '@material-ui/core';\r\nimport BackdropLoading from '../partials/layout/BackdropLoading'\r\n\r\n\r\nexport const Routes = withRouter(({ history }) => {\r\n  const lastLocation = useLastLocation();\r\n  routerHelpers.saveLastLocation(lastLocation);\r\n  const { isAuthorized, isShowBackdropLoading, menuConfig, userLastLocation, defaultPage } = useSelector(\r\n    ({ auth, common, urls, builder: { menuConfig } }) => ({\r\n      menuConfig,\r\n      isAuthorized: auth.authToken,\r\n      defaultPage: auth.defaultPage,\r\n      userLastLocation: routerHelpers.getLastLocation(),\r\n      isShowBackdropLoading: common.isShowBackdropLoading\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const Privacy = lazy(() =>\r\n    import('../pages/common/Privacy')\r\n  )\r\n\r\n  return (\r\n    /* Create `LayoutContext` from current `history` and `menuConfig`. */\r\n    <LayoutContextProvider history={history} menuConfig={menuConfig}>\r\n      <Suspense fallback={<LayoutSplashScreen />}>\r\n        <Switch>\r\n          <Route path=\"/invite-manage-brand\" component={ConfirmInvitation} />\r\n          <Route path=\"/crawl-data\" component={CrawlData} />\r\n          <Route path=\"/privacy-policies\" component={Privacy} />\r\n          <Route path=\"/terms-conditions\" component={TermsAndConditions} />\r\n          {!isAuthorized ? (\r\n            /* Render auth page when user at `/auth` and not authorized. */\r\n            <AuthPage />\r\n          ) : (\r\n              /* Otherwise redirect to root page (`/`) */\r\n              <Redirect from=\"/auth\" to=\"/\" />\r\n            )}\r\n          <Route path=\"/error\" component={ErrorsPage} />\r\n          <Route path=\"/logout\" component={LogoutPage} />\r\n          <Route path=\"/create-brand\" component={CreateBrand} />\r\n          {!isAuthorized ? (\r\n            /* Redirect to `/auth` when user is not authorized */\r\n            <Redirect to=\"/auth/login\" />\r\n          ) : (\r\n              defaultPage === '/create-brand' ? <Redirect to=\"/create-brand\" /> :\r\n                <Layout>\r\n                  <HomePage userLastLocation={userLastLocation} />\r\n                </Layout>\r\n            )}\r\n        </Switch>\r\n      </Suspense>\r\n      {isShowBackdropLoading && <BackdropLoading></BackdropLoading>}\r\n    </LayoutContextProvider>\r\n  );\r\n});\r\n","/**\r\n * Entry application component used to compose providers and render Routes.\r\n * */\r\n\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport { Routes } from \"./app/router/Routes\";\r\nimport { I18nProvider, LayoutSplashScreen, ThemeProvider } from \"./_metronic\";\r\n\r\nexport default function App({ store, persistor, basename }) {\r\n  return (\r\n    /* Provide Redux store */\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor} loading={<LayoutSplashScreen />}>\r\n        {/* Add high level `Suspense` in case if was not handled inside the React tree. */}\r\n        <React.Suspense fallback={<LayoutSplashScreen />}>\r\n          {/* Override `basename` (e.g: `homepage` in `package.json`) */}\r\n          <BrowserRouter basename={basename}>\r\n            {/*This library only returns the location that has been active before the recent location change in the current window lifetime.*/}\r\n            <LastLocationProvider>\r\n              {/* Provide Metronic theme overrides. */}\r\n              <ThemeProvider>\r\n                {/* Provide `react-intl` context synchronized with Redux state.  */}\r\n                <I18nProvider>\r\n                  {/* Render routes with provided `Layout`. */}\r\n                  <Routes />\r\n                </I18nProvider>\r\n              </ThemeProvider>\r\n            </LastLocationProvider>\r\n          </BrowserRouter>\r\n        </React.Suspense>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n","/**\r\n * Create React App entry point. This and `public/index.html` files can not be\r\n * changed or moved.\r\n */\r\nimport \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n// import { mockAxios, setupAxios } from \"./_metronic\";\r\nimport { setupAxios } from \"./_metronic\";\r\nimport store, { persistor } from \"./app/store/store\";\r\nimport App from \"./app\";\r\nimport \"./index.scss\"; // Standard version\r\n// import \"./sass/style.react.rtl.css\"; // RTL version\r\nimport \"socicon/css/socicon.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\r\nimport \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\r\nimport \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst { PUBLIC_URL } = process.env;\r\n\r\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\r\n/* const mock = mockAxios(axios);*/\r\n\r\n/**\r\n * Inject metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\r\nsetupAxios(axios, store);\r\n\r\nReactDOM.render(\r\n  <App\r\n    store={store}\r\n    persistor={persistor}\r\n    basename={PUBLIC_URL}\r\n  />,\r\n  document.getElementById(\"root\")\r\n);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\nvar KTOffcanvas = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {};\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('offcanvas')) {\r\n                the = KTUtil.data(element).get('offcanvas');\r\n            } else {\r\n                // reset offcanvas\r\n                Plugin.init(options);\r\n\r\n                // build offcanvas\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('offcanvas', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n            the.overlay;\r\n\r\n            the.classBase = the.options.baseClass;\r\n            the.classShown = the.classBase + '--on';\r\n            the.classOverlay = the.classBase + '-overlay';\r\n\r\n            the.state = KTUtil.hasClass(element, the.classShown) ? 'shown' : 'hidden';\r\n        },\r\n\r\n        build: function() {\r\n            // offcanvas toggle\r\n            if (the.options.toggleBy) {\r\n                if (typeof the.options.toggleBy === 'string') {\r\n                    KTUtil.addEvent( the.options.toggleBy, 'click', function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.toggle();\r\n                    });\r\n                } else if (the.options.toggleBy && the.options.toggleBy[0]) {\r\n                    if (the.options.toggleBy[0].target) {\r\n                        for (var i in the.options.toggleBy) {\r\n                            KTUtil.addEvent( the.options.toggleBy[i].target, 'click', function(e) {\r\n                                e.preventDefault();\r\n                                Plugin.toggle();\r\n                            });\r\n                        }\r\n                    } else {\r\n                        for (var i in the.options.toggleBy) {\r\n                            KTUtil.addEvent( the.options.toggleBy[i], 'click', function(e) {\r\n                                e.preventDefault();\r\n                                Plugin.toggle();\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                    KTUtil.addEvent( the.options.toggleBy.target, 'click', function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.toggle();\r\n                    });\r\n                }\r\n            }\r\n\r\n            // offcanvas close\r\n            var closeBy = KTUtil.get(the.options.closeBy);\r\n            if (closeBy) {\r\n                KTUtil.addEvent(closeBy, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.hide();\r\n                });\r\n            }\r\n\r\n            // Window resize\r\n            /*\r\n            KTUtil.addResizeHandler(function() {\r\n                if (parseInt(KTUtil.css(element, 'left')) >= 0 || parseInt(KTUtil.css(element, 'right') >= 0) || KTUtil.css(element, 'position') != 'fixed') {\r\n                    KTUtil.css(element, 'opacity', '1');\r\n                }\r\n            });\r\n            */\r\n        },\r\n\r\n        isShown: function(target) {\r\n            return (the.state == 'shown' ? true : false);\r\n        },\r\n\r\n        toggle: function() {;\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            if (the.state == 'shown') {\r\n                Plugin.hide(this);\r\n            } else {\r\n                Plugin.show(this);\r\n            }\r\n        },\r\n\r\n        show: function(target) {\r\n            if (the.state == 'shown') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeShow');\r\n\r\n            Plugin.togglerClass(target, 'show');\r\n\r\n            // Offcanvas panel\r\n            KTUtil.addClass(body, the.classShown);\r\n            KTUtil.addClass(element, the.classShown);\r\n            //KTUtil.css(element, 'opacity', '1');\r\n\r\n            the.state = 'shown';\r\n\r\n            if (the.options.overlay) {\r\n                the.overlay = KTUtil.insertAfter(document.createElement('DIV') , element );\r\n                KTUtil.addClass(the.overlay, the.classOverlay);\r\n                KTUtil.addEvent(the.overlay, 'click', function(e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    Plugin.hide(target);\r\n                });\r\n            }\r\n\r\n            Plugin.eventTrigger('afterShow');\r\n        },\r\n\r\n        hide: function(target) {\r\n            if (the.state == 'hidden') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeHide');\r\n\r\n            Plugin.togglerClass(target, 'hide');\r\n\r\n            KTUtil.removeClass(body, the.classShown);\r\n            KTUtil.removeClass(element, the.classShown);\r\n\r\n            the.state = 'hidden';\r\n\r\n            if (the.options.overlay && the.overlay) {\r\n                KTUtil.remove(the.overlay);\r\n            }\r\n\r\n            /*\r\n            KTUtil.transitionEnd(element, function() {\r\n                KTUtil.css(element, 'opacity', '0');\r\n            });\r\n            */\r\n\r\n            Plugin.eventTrigger('afterHide');\r\n        },\r\n\r\n        togglerClass: function(target, mode) {\r\n            // Toggler\r\n            var id = KTUtil.attr(target, 'id');\r\n            var toggleBy;\r\n\r\n            if (the.options.toggleBy && the.options.toggleBy[0] && the.options.toggleBy[0].target) {\r\n                for (var i in the.options.toggleBy) {\r\n                    if (the.options.toggleBy[i].target === id) {\r\n                        toggleBy = the.options.toggleBy[i];\r\n                    }\r\n                }\r\n            } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                toggleBy = the.options.toggleBy;\r\n            }\r\n\r\n            if (toggleBy) {\r\n                var el = KTUtil.get(toggleBy.target);\r\n\r\n                if (mode === 'show') {\r\n                    KTUtil.addClass(el, toggleBy.state);\r\n                }\r\n\r\n                if (mode === 'hide') {\r\n                    KTUtil.removeClass(el, toggleBy.state);\r\n                }\r\n            }\r\n        },\r\n\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    the.isShown = function() {\r\n        return Plugin.isShown();\r\n    };\r\n\r\n    the.hide = function() {\r\n        return Plugin.hide();\r\n    };\r\n\r\n    the.show = function() {\r\n        return Plugin.show();\r\n    };\r\n\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    // Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    // Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTOffcanvas;\r\n}\r\n\r\nexport  default  KTOffcanvas;\r\n","export function removeCSSClass(ele, cls) {\r\n  const reg = new RegExp(\"(\\\\s|^)\" + cls + \"(\\\\s|$)\");\r\n  ele.className = ele.className.replace(reg, \" \");\r\n}\r\n\r\nexport function addCSSClass(ele, cls) {\r\n  ele.classList.add(cls);\r\n}\r\n\r\nexport const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\r\n\r\nexport function setupAxios(axios, store) {\r\n  axios.interceptors.request.use(\r\n    config => {\r\n      const {\r\n        auth: { authToken }\r\n      } = store.getState();\r\n\r\n      if (authToken) {\r\n        config.headers.Authorization = `Bearer ${authToken}`;\r\n      }\r\n\r\n      return config;\r\n    },\r\n    err => Promise.reject(err)\r\n  );\r\n}\r\n\r\n/*  removeStorage: removes a key from localStorage and its sibling expiracy key\r\n    params:\r\n        key <string>     : localStorage key to remove\r\n    returns:\r\n        <boolean> : telling if operation succeeded\r\n */\r\nexport function removeStorage(key) {\r\n  try {\r\n    localStorage.setItem(key, \"\");\r\n    localStorage.setItem(key + \"_expiresIn\", \"\");\r\n  } catch (e) {\r\n    console.log(\r\n      \"removeStorage: Error removing key [\" +\r\n        key +\r\n        \"] from localStorage: \" +\r\n        JSON.stringify(e)\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/*  getStorage: retrieves a key from localStorage previously set with setStorage().\r\n    params:\r\n        key <string> : localStorage key\r\n    returns:\r\n        <string> : value of localStorage key\r\n        null : in case of expired key or failure\r\n */\r\nexport function getStorage(key) {\r\n  const now = Date.now(); //epoch time, lets deal only with integer\r\n  // set expiration for storage\r\n  let expiresIn = localStorage.getItem(key + \"_expiresIn\");\r\n  if (expiresIn === undefined || expiresIn === null) {\r\n    expiresIn = 0;\r\n  }\r\n\r\n  expiresIn = Math.abs(expiresIn);\r\n  if (expiresIn < now) {\r\n    // Expired\r\n    removeStorage(key);\r\n    return null;\r\n  } else {\r\n    try {\r\n      const value = localStorage.getItem(key);\r\n      return value;\r\n    } catch (e) {\r\n      console.log(\r\n        \"getStorage: Error reading key [\" +\r\n          key +\r\n          \"] from localStorage: \" +\r\n          JSON.stringify(e)\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n}\r\n/*  setStorage: writes a key into localStorage setting a expire time\r\n    params:\r\n        key <string>     : localStorage key\r\n        value <string>   : localStorage value\r\n        expires <number> : number of seconds from now to expire the key\r\n    returns:\r\n        <boolean> : telling if operation succeeded\r\n */\r\nexport function setStorage(key, value, expires) {\r\n  if (expires === undefined || expires === null) {\r\n    expires = 24 * 60 * 60; // default: seconds for 1 day\r\n  }\r\n\r\n  const now = Date.now(); //millisecs since epoch time, lets deal only with integer\r\n  const schedule = now + expires * 1000;\r\n  try {\r\n    localStorage.setItem(key, value);\r\n    localStorage.setItem(key + \"_expiresIn\", schedule);\r\n  } catch (e) {\r\n    console.log(\r\n      \"setStorage: Error setting key [\" +\r\n        key +\r\n        \"] in localStorage: \" +\r\n        JSON.stringify(e)\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\nvar KTMenu = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        // scrollable area with Perfect Scroll\r\n        scroll: {\r\n            rememberPosition: false\r\n        },\r\n\r\n        // accordion submenu mode\r\n        accordion: {\r\n            slideSpeed: 200, // accordion toggle slide speed in milliseconds\r\n            autoScroll: false, // enable auto scrolling(focus) to the clicked menu item\r\n            autoScrollSpeed: 1200,\r\n            expandAll: true // allow having multiple expanded accordions in the menu\r\n        },\r\n\r\n        // dropdown submenu mode\r\n        dropdown: {\r\n            timeout: 500 // timeout in milliseconds to show and hide the hoverable submenu dropdown\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {KTMenu}\r\n         */\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('menu')) {\r\n                the = KTUtil.data(element).get('menu');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // reset menu\r\n                Plugin.reset();\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('menu', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles submenu click toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            the.eventHandlers = {};\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            // pause menu\r\n            the.pauseDropdownHoverTime = 0;\r\n\r\n            the.uid = KTUtil.getUniqueID();\r\n        },\r\n\r\n        update: function(options) {\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            // pause menu\r\n            the.pauseDropdownHoverTime = 0;\r\n\r\n             // reset menu\r\n            Plugin.reset();\r\n\r\n            the.eventHandlers = {};\r\n\r\n            // build menu\r\n            Plugin.build();\r\n\r\n            KTUtil.data(element).set('menu', the);\r\n        },\r\n\r\n        reload: function() {\r\n             // reset menu\r\n            Plugin.reset();\r\n\r\n            // build menu\r\n            Plugin.build();\r\n\r\n            // reset submenu props\r\n            Plugin.resetSubmenuProps();\r\n        },\r\n\r\n        /**\r\n         * Reset menu\r\n         * @returns {KTMenu}\r\n         */\r\n        build: function() {\r\n            // General accordion submenu toggle\r\n            the.eventHandlers['event_1'] = KTUtil.on( element, '.kt-menu__toggle', 'click', Plugin.handleSubmenuAccordion);\r\n\r\n            // Dropdown mode(hoverable)\r\n            if (Plugin.getSubmenuMode() === 'dropdown' || Plugin.isConditionalSubmenuDropdown()) {\r\n                // dropdown submenu - hover toggle\r\n                the.eventHandlers['event_2'] = KTUtil.on( element, '[data-ktmenu-submenu-toggle=\"hover\"]', 'mouseover', Plugin.handleSubmenuDrodownHoverEnter);\r\n                the.eventHandlers['event_3'] = KTUtil.on( element, '[data-ktmenu-submenu-toggle=\"hover\"]', 'mouseout', Plugin.handleSubmenuDrodownHoverExit);\r\n\r\n                // dropdown submenu - click toggle\r\n                the.eventHandlers['event_4'] = KTUtil.on( element, '[data-ktmenu-submenu-toggle=\"click\"] > .kt-menu__toggle, [data-ktmenu-submenu-toggle=\"click\"] > .kt-menu__link .kt-menu__toggle', 'click', Plugin.handleSubmenuDropdownClick);\r\n                the.eventHandlers['event_5'] = KTUtil.on( element, '[data-ktmenu-submenu-toggle=\"tab\"] > .kt-menu__toggle, [data-ktmenu-submenu-toggle=\"tab\"] > .kt-menu__link .kt-menu__toggle', 'click', Plugin.handleSubmenuDropdownTabClick);\r\n            }\r\n\r\n            // handle link click\r\n            the.eventHandlers['event_6'] = KTUtil.on(element, '.kt-menu__item > .kt-menu__link:not(.kt-menu__toggle):not(.kt-menu__link--toggle-skip)', 'click', Plugin.handleLinkClick);\r\n\r\n            // Init scrollable menu\r\n            if (the.options.scroll && the.options.scroll.height) {\r\n                Plugin.scrollInit();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset menu\r\n         * @returns {KTMenu}\r\n         */\r\n        reset: function() {\r\n            KTUtil.off( element, 'click', the.eventHandlers['event_1']);\r\n\r\n            // dropdown submenu - hover toggle\r\n            KTUtil.off( element, 'mouseover', the.eventHandlers['event_2']);\r\n            KTUtil.off( element, 'mouseout', the.eventHandlers['event_3']);\r\n\r\n            // dropdown submenu - click toggle\r\n            KTUtil.off( element, 'click', the.eventHandlers['event_4']);\r\n            KTUtil.off( element, 'click', the.eventHandlers['event_5']);\r\n\r\n            // handle link click\r\n            KTUtil.off(element, 'click', the.eventHandlers['event_6']);\r\n        },\r\n\r\n        /**\r\n         * Init scroll menu\r\n         *\r\n        */\r\n        scrollInit: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                KTUtil.scrollDestroy(element);\r\n                KTUtil.scrollInit(element, {mobileNativeScroll: true, windowScroll: false, resetHeightOnDestroy: true, handleWindowResize: true, height: the.options.scroll.height, rememberPosition: the.options.scroll.rememberPosition});\r\n            } else {\r\n                KTUtil.scrollDestroy(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update scroll menu\r\n        */\r\n        scrollUpdate: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                KTUtil.scrollUpdate(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Scroll top\r\n        */\r\n        scrollTop: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                KTUtil.scrollTop(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get submenu mode for current breakpoint and menu state\r\n         * @returns {KTMenu}\r\n         */\r\n        getSubmenuMode: function(el) {\r\n            if ( KTUtil.isInResponsiveRange('desktop') ) {\r\n                if (el && KTUtil.hasAttr(el, 'data-ktmenu-submenu-toggle') && KTUtil.attr(el, 'data-ktmenu-submenu-toggle') == 'hover') {\r\n                    return 'dropdown';\r\n                }\r\n\r\n                if ( KTUtil.isset(the.options.submenu, 'desktop.state.body') ) {\r\n                    if ( KTUtil.hasClasses(body, the.options.submenu.desktop.state.body) ) {\r\n                        return the.options.submenu.desktop.state.mode;\r\n                    } else {\r\n                        return the.options.submenu.desktop.default;\r\n                    }\r\n                } else if ( KTUtil.isset(the.options.submenu, 'desktop') ) {\r\n                    return the.options.submenu.desktop;\r\n                }\r\n            } else if ( KTUtil.isInResponsiveRange('tablet') && KTUtil.isset(the.options.submenu, 'tablet') ) {\r\n                return the.options.submenu.tablet;\r\n            } else if ( KTUtil.isInResponsiveRange('mobile') && KTUtil.isset(the.options.submenu, 'mobile') ) {\r\n                return the.options.submenu.mobile;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get submenu mode for current breakpoint and menu state\r\n         * @returns {KTMenu}\r\n         */\r\n        isConditionalSubmenuDropdown: function() {\r\n            if ( KTUtil.isInResponsiveRange('desktop') && KTUtil.isset(the.options.submenu, 'desktop.state.body') ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * Reset submenu attributes\r\n         * @returns {KTMenu}\r\n         */\r\n        resetSubmenuProps: function(e) {\r\n            var submenus = KTUtil.findAll(element, '.kt-menu__submenu');\r\n            if ( submenus ) {\r\n                for (var i = 0, len = submenus.length; i < len; i++) {\r\n                    KTUtil.css(submenus[0], 'display', '');\r\n                    KTUtil.css(submenus[0], 'overflow', '');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuDrodownHoverEnter: function(e) {\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            if ( the.resumeDropdownHover() === false ) {\r\n                return;\r\n            }\r\n\r\n            var item = this;\r\n\r\n            if ( item.getAttribute('data-hover') == '1' ) {\r\n                item.removeAttribute('data-hover');\r\n                clearTimeout( item.getAttribute('data-timeout') );\r\n                item.removeAttribute('data-timeout');\r\n            }\r\n\r\n            Plugin.showSubmenuDropdown(item);\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuDrodownHoverExit: function(e) {\r\n            if ( the.resumeDropdownHover() === false ) {\r\n                return;\r\n            }\r\n\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            var item = this;\r\n            var time = the.options.dropdown.timeout;\r\n\r\n            var timeout = setTimeout(function() {\r\n                if ( item.getAttribute('data-hover') == '1' ) {\r\n                    Plugin.hideSubmenuDropdown(item, true);\r\n                }\r\n            }, time);\r\n\r\n            item.setAttribute('data-hover', '1');\r\n            item.setAttribute('data-timeout', timeout);\r\n        },\r\n\r\n        /**\r\n         * Handles submenu click toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuDropdownClick: function(e) {\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            var item = this.closest('.kt-menu__item');\r\n\r\n            if ( item.getAttribute('data-ktmenu-submenu-mode') == 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            if ( KTUtil.hasClass(item, 'kt-menu__item--hover') === false ) {\r\n                KTUtil.addClass(item, 'kt-menu__item--open-dropdown');\r\n                Plugin.showSubmenuDropdown(item);\r\n            } else {\r\n                KTUtil.removeClass(item, 'kt-menu__item--open-dropdown' );\r\n                Plugin.hideSubmenuDropdown(item, true);\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Handles tab click toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuDropdownTabClick: function(e) {\r\n            if (Plugin.getSubmenuMode(this) === 'accordion') {\r\n                return;\r\n            }\r\n\r\n            var item = this.closest('.kt-menu__item');\r\n\r\n            if (item.getAttribute('data-ktmenu-submenu-mode') == 'accordion') {\r\n                return;\r\n            }\r\n\r\n            if (KTUtil.hasClass(item, 'kt-menu__item--hover') == false) {\r\n                KTUtil.addClass(item, 'kt-menu__item--open-dropdown');\r\n                Plugin.showSubmenuDropdown(item);\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Handles link click\r\n         * @returns {KTMenu}\r\n         */\r\n        handleLinkClick: function(e) {\r\n            var submenu = this.closest('.kt-menu__item.kt-menu__item--submenu'); //\r\n\r\n            var result = Plugin.eventTrigger('linkClick', this, e);\r\n            if (result === false) {\r\n                return;\r\n            }\r\n\r\n            if ( submenu && Plugin.getSubmenuMode(submenu) === 'dropdown' ) {\r\n                Plugin.hideSubmenuDropdowns();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu dropdown close on link click\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuDropdownClose: function(e, el) {\r\n            // exit if its not submenu dropdown mode\r\n            if (Plugin.getSubmenuMode(el) === 'accordion') {\r\n                return;\r\n            }\r\n\r\n            var shown = element.querySelectorAll('.kt-menu__item.kt-menu__item--submenu.kt-menu__item--hover:not(.kt-menu__item--tabs)');\r\n\r\n            // check if currently clicked link's parent item ha\r\n            if (shown.length > 0 && KTUtil.hasClass(el, 'kt-menu__toggle') === false && el.querySelectorAll('.kt-menu__toggle').length === 0) {\r\n                // close opened dropdown menus\r\n                for (var i = 0, len = shown.length; i < len; i++) {\r\n                    Plugin.hideSubmenuDropdown(shown[0], true);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * helper functions\r\n         * @returns {KTMenu}\r\n         */\r\n        handleSubmenuAccordion: function(e, el) {\r\n            var query;\r\n            var item = el ? el : this;\r\n\r\n            if ( Plugin.getSubmenuMode(el) === 'dropdown' && (query = item.closest('.kt-menu__item') ) ) {\r\n                if (query.getAttribute('data-ktmenu-submenu-mode') != 'accordion' ) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var li = item.closest('.kt-menu__item');\r\n            var submenu = KTUtil.child(li, '.kt-menu__submenu, .kt-menu__inner');\r\n\r\n            if (KTUtil.hasClass(item.closest('.kt-menu__item'), 'kt-menu__item--open-always')) {\r\n                return;\r\n            }\r\n\r\n            if ( li && submenu ) {\r\n                e.preventDefault();\r\n                var speed = the.options.accordion.slideSpeed;\r\n                var hasClosables = false;\r\n\r\n                if ( KTUtil.hasClass(li, 'kt-menu__item--open') === false ) {\r\n                    // hide other accordions\r\n                    if ( the.options.accordion.expandAll === false ) {\r\n                        var subnav = item.closest('.kt-menu__nav, .kt-menu__subnav');\r\n                        var closables = KTUtil.children(subnav, '.kt-menu__item.kt-menu__item--open.kt-menu__item--submenu:not(.kt-menu__item--here):not(.kt-menu__item--open-always)');\r\n\r\n                        if ( subnav && closables ) {\r\n                            for (var i = 0, len = closables.length; i < len; i++) {\r\n                                var el_ = closables[0];\r\n                                var submenu_ = KTUtil.child(el_, '.kt-menu__submenu');\r\n                                if ( submenu_ ) {\r\n                                    KTUtil.slideUp(submenu_, speed, function() {\r\n                                        Plugin.scrollUpdate();\r\n                                        KTUtil.removeClass(el_, 'kt-menu__item--open');\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    KTUtil.slideDown(submenu, speed, function() {\r\n                        Plugin.scrollToItem(item);\r\n                        Plugin.scrollUpdate();\r\n\r\n                        Plugin.eventTrigger('submenuToggle', submenu, e);\r\n                    });\r\n\r\n                    KTUtil.addClass(li, 'kt-menu__item--open');\r\n\r\n                } else {\r\n                    KTUtil.slideUp(submenu, speed, function() {\r\n                        Plugin.scrollToItem(item);\r\n                        Plugin.eventTrigger('submenuToggle', submenu, e);\r\n                    });\r\n\r\n                    KTUtil.removeClass(li, 'kt-menu__item--open');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * scroll to item function\r\n         * @returns {KTMenu}\r\n         */\r\n        scrollToItem: function(item) {\r\n            // handle auto scroll for accordion submenus\r\n            if ( KTUtil.isInResponsiveRange('desktop') && the.options.accordion.autoScroll && element.getAttribute('data-ktmenu-scroll') !== '1' ) {\r\n                KTUtil.scrollTo(item, the.options.accordion.autoScrollSpeed);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide submenu dropdown\r\n         * @returns {KTMenu}\r\n         */\r\n        hideSubmenuDropdown: function(item, classAlso) {\r\n            // remove submenu activation class\r\n            if ( classAlso ) {\r\n                KTUtil.removeClass(item, 'kt-menu__item--hover');\r\n                KTUtil.removeClass(item, 'kt-menu__item--active-tab');\r\n            }\r\n\r\n            // clear timeout\r\n            item.removeAttribute('data-hover');\r\n\r\n            if ( item.getAttribute('data-ktmenu-dropdown-toggle-class') ) {\r\n                KTUtil.removeClass(body, item.getAttribute('data-ktmenu-dropdown-toggle-class'));\r\n            }\r\n\r\n            var timeout = item.getAttribute('data-timeout');\r\n            item.removeAttribute('data-timeout');\r\n            clearTimeout(timeout);\r\n        },\r\n\r\n        /**\r\n         * Hide submenu dropdowns\r\n         * @returns {KTMenu}\r\n         */\r\n        hideSubmenuDropdowns: function() {\r\n            var items;\r\n            if ( items = element.querySelectorAll('.kt-menu__item--submenu.kt-menu__item--hover:not(.kt-menu__item--tabs):not([data-ktmenu-submenu-toggle=\"tab\"])') ) {\r\n                for (var j = 0, cnt = items.length; j < cnt; j++) {\r\n                    Plugin.hideSubmenuDropdown(items[j], true);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * helper functions\r\n         * @returns {KTMenu}\r\n         */\r\n        showSubmenuDropdown: function(item) {\r\n            // close active submenus\r\n            var list = element.querySelectorAll('.kt-menu__item--submenu.kt-menu__item--hover, .kt-menu__item--submenu.kt-menu__item--active-tab');\r\n\r\n            if ( list ) {\r\n                for (var i = 0, len = list.length; i < len; i++) {\r\n                    var el = list[i];\r\n                    if ( item !== el && el.contains(item) === false && item.contains(el) === false ) {\r\n                        Plugin.hideSubmenuDropdown(el, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add submenu activation class\r\n            KTUtil.addClass(item, 'kt-menu__item--hover');\r\n\r\n            if ( item.getAttribute('data-ktmenu-dropdown-toggle-class') ) {\r\n                KTUtil.addClass(body, item.getAttribute('data-ktmenu-dropdown-toggle-class'));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu slide toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        createSubmenuDropdownClickDropoff: function(el) {\r\n            var query;\r\n            var zIndex = (query = KTUtil.child(el, '.kt-menu__submenu') ? KTUtil.css(query, 'z-index') : 0) - 1;\r\n\r\n            var dropoff = document.createElement('<div class=\"kt-menu__dropoff\" style=\"background: transparent; position: fixed; top: 0; bottom: 0; left: 0; right: 0; z-index: ' + zIndex + '\"></div>');\r\n\r\n            body.appendChild(dropoff);\r\n\r\n            KTUtil.addEvent(dropoff, 'click', function(e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                KTUtil.remove(this);\r\n                Plugin.hideSubmenuDropdown(el, true);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        pauseDropdownHover: function(time) {\r\n            var date = new Date();\r\n\r\n            the.pauseDropdownHoverTime = date.getTime() + time;\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {KTMenu}\r\n         */\r\n        resumeDropdownHover: function() {\r\n            var date = new Date();\r\n\r\n            return (date.getTime() > the.pauseDropdownHoverTime ? true : false);\r\n        },\r\n\r\n        /**\r\n         * Reset menu's current active item\r\n         * @returns {KTMenu}\r\n         */\r\n        resetActiveItem: function(item) {\r\n            var list;\r\n            var parents;\r\n\r\n            list = element.querySelectorAll('.kt-menu__item--active');\r\n\r\n            for (var i = 0, len = list.length; i < len; i++) {\r\n                var el = list[0];\r\n                KTUtil.removeClass(el, 'kt-menu__item--active');\r\n                KTUtil.hide( KTUtil.child(el, '.kt-menu__submenu') );\r\n                parents = KTUtil.parents(el, '.kt-menu__item--submenu') || [];\r\n\r\n                for (var i_ = 0, len_ = parents.length; i_ < len_; i_++) {\r\n                    var el_ = parents[i];\r\n                    KTUtil.removeClass(el_, 'kt-menu__item--open');\r\n                    KTUtil.hide( KTUtil.child(el_, '.kt-menu__submenu') );\r\n                }\r\n            }\r\n\r\n            // close open submenus\r\n            if ( the.options.accordion.expandAll === false ) {\r\n                if ( list = element.querySelectorAll('.kt-menu__item--open') ) {\r\n                    for (var i = 0, len = list.length; i < len; i++) {\r\n                        KTUtil.removeClass(parents[0], 'kt-menu__item--open');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets menu's active item\r\n         * @returns {KTMenu}\r\n         */\r\n        setActiveItem: function(item) {\r\n            // reset current active item\r\n            Plugin.resetActiveItem();\r\n\r\n            var parents = KTUtil.parents(item, '.kt-menu__item--submenu') || [];\r\n            for (var i = 0, len = parents.length; i < len; i++) {\r\n                KTUtil.addClass(KTUtil.get(parents[i]), 'kt-menu__item--open');\r\n            }\r\n\r\n            KTUtil.addClass(KTUtil.get(item), 'kt-menu__item--active');\r\n        },\r\n\r\n        /**\r\n         * Returns page breadcrumbs for the menu's active item\r\n         * @returns {KTMenu}\r\n         */\r\n        getBreadcrumbs: function(item) {\r\n            var query;\r\n            var breadcrumbs = [];\r\n            var link = KTUtil.child(item, '.kt-menu__link');\r\n\r\n            breadcrumbs.push({\r\n                text: (query = KTUtil.child(link, '.kt-menu__link-text') ? query.innerHTML : ''),\r\n                title: link.getAttribute('title'),\r\n                href: link.getAttribute('href')\r\n            });\r\n\r\n            var parents = KTUtil.parents(item, '.kt-menu__item--submenu');\r\n            for (var i = 0, len = parents.length; i < len; i++) {\r\n                var submenuLink = KTUtil.child(parents[i], '.kt-menu__link');\r\n\r\n                breadcrumbs.push({\r\n                    text: (query = KTUtil.child(submenuLink, '.kt-menu__link-text') ? query.innerHTML : ''),\r\n                    title: submenuLink.getAttribute('title'),\r\n                    href: submenuLink.getAttribute('href')\r\n                });\r\n            }\r\n\r\n            return  breadcrumbs.reverse();\r\n        },\r\n\r\n        /**\r\n         * Returns page title for the menu's active item\r\n         * @returns {KTMenu}\r\n         */\r\n        getPageTitle: function(item) {\r\n            var query;\r\n\r\n            return (query = KTUtil.child(item, '.kt-menu__link-text') ? query.innerHTML : '');\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, target, e) {\r\n            for (var i = 0; i < the.events.length; i++ ) {\r\n                var event = the.events[i];\r\n                if ( event.name == name ) {\r\n                    if ( event.one == true ) {\r\n                        if ( event.fired == false ) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, target, e);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, target, e);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        },\r\n\r\n        removeEvent: function(name) {\r\n            if (the.events[name]) {\r\n                delete the.events[name];\r\n            }\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options\r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Update scroll\r\n     */\r\n    the.scrollUpdate = function() {\r\n        return Plugin.scrollUpdate();\r\n    };\r\n\r\n    /**\r\n     * Re-init scroll\r\n     */\r\n    the.scrollReInit = function() {\r\n        return Plugin.scrollInit();\r\n    };\r\n\r\n    /**\r\n     * Scroll top\r\n     */\r\n    the.scrollTop = function() {\r\n        return Plugin.scrollTop();\r\n    };\r\n\r\n    /**\r\n     * Set active menu item\r\n     */\r\n    the.setActiveItem = function(item) {\r\n        return Plugin.setActiveItem(item);\r\n    };\r\n\r\n    the.reload = function() {\r\n        return Plugin.reload();\r\n    };\r\n\r\n    the.update = function(options) {\r\n        return Plugin.update(options);\r\n    };\r\n\r\n    /**\r\n     * Set breadcrumb for menu item\r\n     */\r\n    the.getBreadcrumbs = function(item) {\r\n        return Plugin.getBreadcrumbs(item);\r\n    };\r\n\r\n    /**\r\n     * Set page title for menu item\r\n     */\r\n    the.getPageTitle = function(item) {\r\n        return Plugin.getPageTitle(item);\r\n    };\r\n\r\n    /**\r\n     * Get submenu mode\r\n     */\r\n    the.getSubmenuMode = function(el) {\r\n        return Plugin.getSubmenuMode(el);\r\n    };\r\n\r\n    /**\r\n     * Hide dropdown\r\n     * @returns {Object}\r\n     */\r\n    the.hideDropdown = function(item) {\r\n        Plugin.hideSubmenuDropdown(item, true);\r\n    };\r\n\r\n    /**\r\n     * Hide dropdowns\r\n     * @returns {Object}\r\n     */\r\n    the.hideDropdowns = function() {\r\n        Plugin.hideSubmenuDropdowns();\r\n    };\r\n\r\n    /**\r\n     * Disable menu for given time\r\n     * @returns {Object}\r\n     */\r\n    the.pauseDropdownHover = function(time) {\r\n        Plugin.pauseDropdownHover(time);\r\n    };\r\n\r\n    /**\r\n     * Disable menu for given time\r\n     * @returns {Object}\r\n     */\r\n    the.resumeDropdownHover = function() {\r\n        return Plugin.resumeDropdownHover();\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    the.off = function(name) {\r\n        return Plugin.removeEvent(name);\r\n    };\r\n\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    // Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    // Handle plugin on window resize\r\n    KTUtil.addResizeHandler(function() {\r\n        if (init) {\r\n            the.reload();\r\n        }\r\n    });\r\n\r\n    // Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTMenu;\r\n}\r\n\r\n// Plugin global lazy initialization\r\ndocument.addEventListener(\"click\", function (e) {\r\n    var body = KTUtil.get('body');\r\n    var query;\r\n    if ( query = body.querySelectorAll('.kt-menu__nav .kt-menu__item.kt-menu__item--submenu.kt-menu__item--hover:not(.kt-menu__item--tabs)[data-ktmenu-submenu-toggle=\"click\"]') ) {\r\n        for (var i = 0, len = query.length; i < len; i++) {\r\n            var element = query[i].closest('.kt-menu__nav').parentNode;\r\n\r\n            if ( element ) {\r\n                var the = KTUtil.data(element).get('menu');\r\n\r\n                if ( !the ) {\r\n                    break;\r\n                }\r\n\r\n                if ( !the || the.getSubmenuMode() !== 'dropdown' ) {\r\n                    break;\r\n                }\r\n\r\n                if ( e.target !== element && element.contains(e.target) === false ) {\r\n                    the.hideDropdowns();\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default  KTMenu;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\n\r\n// plugin setup\r\nvar KTToggle = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');  \r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        togglerState: '',\r\n        targetState: ''\r\n    };    \r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('toggle')) {\r\n                the = KTUtil.data(element).get('toggle');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('toggle', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subtoggle click toggle\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            the.target = KTUtil.get(the.options.target);\r\n            the.targetState = the.options.targetState;\r\n            the.togglerState = the.options.togglerState;\r\n\r\n            the.state = KTUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\r\n        },\r\n\r\n        /**\r\n         * Setup toggle\r\n         */\r\n        build: function() {\r\n            KTUtil.addEvent(element, 'mouseup', Plugin.toggle);\r\n        },\r\n        \r\n        /**\r\n         * Handles offcanvas click toggle\r\n         */\r\n        toggle: function(e) {\r\n            Plugin.eventTrigger('beforeToggle');\r\n\r\n            if (the.state == 'off') {\r\n                Plugin.toggleOn();\r\n            } else {\r\n                Plugin.toggleOff();\r\n            }\r\n\r\n            Plugin.eventTrigger('afterToggle');\r\n\r\n            e.preventDefault();\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOn: function() {\r\n            Plugin.eventTrigger('beforeOn');\r\n\r\n            KTUtil.addClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                KTUtil.addClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'on';\r\n\r\n            Plugin.eventTrigger('afterOn');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOff: function() {\r\n            Plugin.eventTrigger('beforeOff');\r\n\r\n            KTUtil.removeClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                KTUtil.removeClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'off';\r\n\r\n            Plugin.eventTrigger('afterOff');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;                            \r\n                            return event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get toggle state \r\n     */\r\n    the.getState = function() {\r\n        return the.state;\r\n    };\r\n\r\n    /**\r\n     * Toggle \r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Toggle on \r\n     */\r\n    the.toggleOn = function() {\r\n        return Plugin.toggleOn();\r\n    };\r\n\r\n    /**\r\n     * Toggle off \r\n     */\r\n    the.toggleOff = function() {\r\n        return Plugin.toggleOff();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     * @returns {KTToggle}\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     * @returns {KTToggle}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    // Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTToggle;\r\n}\r\n\r\nexport default KTToggle;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\nimport KTUtil from \"./util\";\r\n\r\n\"use strict\";\r\nvar KTHeader = function(elementId, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = KTUtil.get(elementId);\r\n    var body = KTUtil.get('body');\r\n\r\n    if (element === undefined) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        classic: false,\r\n        offset: {\r\n            mobile: 150,\r\n            desktop: 200\r\n        },\r\n        minimize: {\r\n            mobile: false,\r\n            desktop: false\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {KTHeader}\r\n         */\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('header')) {\r\n                the = KTUtil.data(element).get('header');\r\n            } else {\r\n                // reset header\r\n                Plugin.init(options);\r\n\r\n                // build header\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('header', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subheader click toggle\r\n         * @returns {KTHeader}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n        },\r\n\r\n        /**\r\n         * Reset header\r\n         * @returns {KTHeader}\r\n         */\r\n        build: function() {\r\n            var lastScrollTop = 0;\r\n            var eventTriggerState = true;\r\n            var viewportHeight = KTUtil.getViewPort().height;\r\n            var documentHeight = KTUtil.getDocumentHeight();\r\n\r\n            if (the.options.minimize.mobile === false && the.options.minimize.desktop === false) {\r\n                return;\r\n            }\r\n\r\n            window.addEventListener('scroll', function() {\r\n                var offset = 0, on, off, st;\r\n\r\n                if (KTUtil.isInResponsiveRange('desktop')) {\r\n                    offset = the.options.offset.desktop;\r\n                    on = the.options.minimize.desktop.on;\r\n                    off = the.options.minimize.desktop.off;\r\n                } else if (KTUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                    offset = the.options.offset.mobile;\r\n                    on = the.options.minimize.mobile.on;\r\n                    off = the.options.minimize.mobile.off;\r\n                }\r\n\r\n                st = KTUtil.getScrollTop();\r\n\r\n                if (\r\n                    (KTUtil.isInResponsiveRange('tablet-and-mobile') && the.options.classic && the.options.classic.mobile) ||\r\n                    (KTUtil.isInResponsiveRange('desktop') && the.options.classic && the.options.classic.desktop)\r\n                ) {\r\n                    if (st > offset) { // down scroll mode\r\n                        KTUtil.addClass(body, on);\r\n                        KTUtil.removeClass(body, off);\r\n\r\n                        if (eventTriggerState) {\r\n                            Plugin.eventTrigger('minimizeOn', the);\r\n                            eventTriggerState = false;\r\n                        }\r\n                    } else { // back scroll mode\r\n                        KTUtil.addClass(body, off);\r\n                        KTUtil.removeClass(body, on);\r\n\r\n                        if (eventTriggerState == false) {\r\n                            Plugin.eventTrigger('minimizeOff', the);\r\n                            eventTriggerState = true;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (st > offset && lastScrollTop < st) { // down scroll mode\r\n                        KTUtil.addClass(body, on);\r\n                        KTUtil.removeClass(body, off);\r\n\r\n                        if (eventTriggerState) {\r\n                            Plugin.eventTrigger('minimizeOn', the);\r\n                            eventTriggerState = false;\r\n                        }\r\n                    } else { // back scroll mode\r\n                        KTUtil.addClass(body, off);\r\n                        KTUtil.removeClass(body, on);\r\n\r\n                        if (eventTriggerState == false) {\r\n                            Plugin.eventTrigger('minimizeOff', the);\r\n                            eventTriggerState = true;\r\n                        }\r\n                    }\r\n\r\n                    lastScrollTop = st;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options\r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    // Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    // Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTHeader;\r\n}\r\n\r\nexport default KTHeader;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,no-loop-func,no-undef,no-restricted-globals,strict,no-unused-vars,no-cond-assign,eqeqeq,no-throw-literal,no-unreachable,no-useless-escape,no-redeclare,no-useless-concat,no-unused-expressions,no-sequences */\r\n\"use strict\";\r\n/**\r\n * @class KTUtil  base utilize class that privides helper functions\r\n */\r\n\r\n// Polyfills\r\n/**\r\n * Element.matches() polyfill (simple version)\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\r\n */\r\nif (!Element.prototype.matches) {\r\n\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n}\r\n\r\n/**\r\n * Element.closest() polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\r\nif (!Element.prototype.closest) {\r\n\tif (!Element.prototype.matches) {\r\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n\t}\r\n\tElement.prototype.closest = function (s) {\r\n\t\tvar el = this;\r\n\t\tvar ancestor = this;\r\n\t\tif (!document.documentElement.contains(el)) return null;\r\n\t\tdo {\r\n\t\t\tif (ancestor.matches(s)) return ancestor;\r\n\t\t\tancestor = ancestor.parentElement;\r\n\t\t} while (ancestor !== null);\r\n\t\treturn null;\r\n\t};\r\n}\r\n\r\n/**\r\n * ChildNode.remove() polyfill\r\n * https://gomakethings.com/removing-an-element-from-the-dom-the-es6-way/\r\n * @author Chris Ferdinandi\r\n * @license MIT\r\n */\r\n(function (elem) {\r\n\tfor (var i = 0; i < elem.length; i++) {\r\n\t\tif (!window[elem[i]] || 'remove' in window[elem[i]].prototype) continue;\r\n\t\twindow[elem[i]].prototype.remove = function () {\r\n\t\t\tthis.parentNode.removeChild(this);\r\n\t\t};\r\n\t}\r\n})(['Element', 'CharacterData', 'DocumentType']);\r\n\r\n//\r\n// requestAnimationFrame polyfill by Erik Möller.\r\n//  With fixes from Paul Irish and Tino Zijdel\r\n//\r\n//  http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n//  http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n//\r\n//  MIT license\r\n//\r\n(function() {\r\n    var lastTime = 0;\r\n    var vendors = ['webkit', 'moz'];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame =\r\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function(callback) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = window.setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\n// Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\r\n(function(arr) {\r\n    arr.forEach(function(item) {\r\n        if (item.hasOwnProperty('prepend')) {\r\n            return;\r\n        }\r\n        Object.defineProperty(item, 'prepend', {\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true,\r\n            value: function prepend() {\r\n                var argArr = Array.prototype.slice.call(arguments),\r\n                    docFrag = document.createDocumentFragment();\r\n\r\n                argArr.forEach(function(argItem) {\r\n                    var isNode = argItem instanceof Node;\r\n                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\r\n                });\r\n\r\n                this.insertBefore(docFrag, this.firstChild);\r\n            }\r\n        });\r\n    });\r\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]);\r\n\r\n// Global variables\r\nwindow.KTUtilElementDataStore = {};\r\nwindow.KTUtilElementDataStoreID = 0;\r\nwindow.KTUtilDelegatedEventHandlers = {};\r\n\r\nvar KTUtil = function() {\r\n    var resizeHandlers = [];\r\n\r\n    /** @type {object} breakpoints The device width breakpoints **/\r\n    var breakpoints = {\r\n        sm: 544, // Small screen / phone\r\n        md: 768, // Medium screen / tablet\r\n        lg: 1024, // Large screen / desktop\r\n        xl: 1200 // Extra large screen / wide desktop\r\n    };\r\n\r\n    /**\r\n     * Handle window resize event with some\r\n     * delay to attach event handlers upon resize complete\r\n     */\r\n    var _windowResizeHandler = function() {\r\n        var _runResizeHandlers = function() {\r\n            // reinitialize other subscribed elements\r\n            for (var i = 0; i < resizeHandlers.length; i++) {\r\n                var each = resizeHandlers[i];\r\n                each.call();\r\n            }\r\n        };\r\n\r\n        var timeout = false; // holder for timeout id\r\n        var delay = 250; // delay after event is \"complete\" to run callback\r\n\r\n        window.addEventListener('resize', function() {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(function() {\r\n                _runResizeHandlers();\r\n            }, delay); // wait 50ms until window resize finishes.\r\n        });\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Class main initializer.\r\n         * @param {object} options.\r\n         * @returns null\r\n         */\r\n        //main function to initiate the theme\r\n        init: function(options) {\r\n            if (options && options.breakpoints) {\r\n                breakpoints = options.breakpoints;\r\n            }\r\n\r\n            _windowResizeHandler();\r\n        },\r\n\r\n        /**\r\n         * Adds window resize event handler.\r\n         * @param {function} callback function.\r\n         */\r\n        addResizeHandler: function(callback) {\r\n            resizeHandlers.push(callback);\r\n        },\r\n\r\n        /**\r\n         * Removes window resize event handler.\r\n         * @param {function} callback function.\r\n         */\r\n        removeResizeHandler: function(callback) {\r\n            for (var i = 0; i < resizeHandlers.length; i++) {\r\n                if (callback === resizeHandlers[i]) {\r\n                    delete resizeHandlers[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger window resize handlers.\r\n         */\r\n        runResizeHandlers: function() {\r\n            _runResizeHandlers();\r\n        },\r\n\r\n        resize: function() {\r\n            if (typeof(Event) === 'function') {\r\n                // modern browsers\r\n                window.dispatchEvent(new Event('resize'));\r\n            } else {\r\n                // for IE and other old browsers\r\n                // causes deprecation warning on modern browsers\r\n                var evt = window.document.createEvent('UIEvents');\r\n                evt.initUIEvent('resize', true, false, window, 0);\r\n                window.dispatchEvent(evt);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get GET parameter value from URL.\r\n         * @param {string} paramName Parameter name.\r\n         * @returns {string}\r\n         */\r\n        getURLParam: function(paramName) {\r\n            var searchString = window.location.search.substring(1),\r\n                i, val, params = searchString.split(\"&\");\r\n\r\n            for (i = 0; i < params.length; i++) {\r\n                val = params[i].split(\"=\");\r\n                if (val[0] == paramName) {\r\n                    return unescape(val[1]);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Checks whether current device is mobile touch.\r\n         * @returns {boolean}\r\n         */\r\n        isMobileDevice: function() {\r\n            return (this.getViewPort().width < this.getBreakpoint('lg') ? true : false);\r\n        },\r\n\r\n        /**\r\n         * Checks whether current device is desktop.\r\n         * @returns {boolean}\r\n         */\r\n        isDesktopDevice: function() {\r\n            return KTUtil.isMobileDevice() ? false : true;\r\n        },\r\n\r\n        /**\r\n         * Gets browser window viewport size. Ref:\r\n         * http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\r\n         * @returns {object}\r\n         */\r\n        getViewPort: function() {\r\n            var e = window,\r\n                a = 'inner';\r\n            if (!('innerWidth' in window)) {\r\n                a = 'client';\r\n                e = document.documentElement || document.body;\r\n            }\r\n\r\n            return {\r\n                width: e[a + 'Width'],\r\n                height: e[a + 'Height']\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks whether given device mode is currently activated.\r\n         * @param {string} mode Responsive mode name(e.g: desktop,\r\n         *     desktop-and-tablet, tablet, tablet-and-mobile, mobile)\r\n         * @returns {boolean}\r\n         */\r\n        isInResponsiveRange: function(mode) {\r\n            var breakpoint = this.getViewPort().width;\r\n\r\n            if (mode == 'general') {\r\n                return true;\r\n            } else if (mode == 'desktop' && breakpoint >= (this.getBreakpoint('lg') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet' && (breakpoint >= (this.getBreakpoint('md') + 1) && breakpoint < this.getBreakpoint('lg'))) {\r\n                return true;\r\n            } else if (mode == 'mobile' && breakpoint <= this.getBreakpoint('md')) {\r\n                return true;\r\n            } else if (mode == 'desktop-and-tablet' && breakpoint >= (this.getBreakpoint('md') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet-and-mobile' && breakpoint <= this.getBreakpoint('lg')) {\r\n                return true;\r\n            } else if (mode == 'minimal-desktop-and-below' && breakpoint <= this.getBreakpoint('xl')) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Generates unique ID for give prefix.\r\n         * @param {string} prefix Prefix for generated ID\r\n         * @returns {boolean}\r\n         */\r\n        getUniqueID: function(prefix) {\r\n            return prefix + Math.floor(Math.random() * (new Date()).getTime());\r\n        },\r\n\r\n        /**\r\n         * Gets window width for give breakpoint mode.\r\n         * @param {string} mode Responsive mode name(e.g: xl, lg, md, sm)\r\n         * @returns {number}\r\n         */\r\n        getBreakpoint: function(mode) {\r\n            return breakpoints[mode];\r\n        },\r\n\r\n        /**\r\n         * Checks whether object has property matchs given key path.\r\n         * @param {object} obj Object contains values paired with given key path\r\n         * @param {string} keys Keys path seperated with dots\r\n         * @returns {object}\r\n         */\r\n        isset: function(obj, keys) {\r\n            var stone;\r\n\r\n            keys = keys || '';\r\n\r\n            if (keys.indexOf('[') !== -1) {\r\n                throw new Error('Unsupported object path notation.');\r\n            }\r\n\r\n            keys = keys.split('.');\r\n\r\n            do {\r\n                if (obj === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                stone = keys.shift();\r\n\r\n                if (!obj.hasOwnProperty(stone)) {\r\n                    return false;\r\n                }\r\n\r\n                obj = obj[stone];\r\n\r\n            } while (keys.length);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Gets highest z-index of the given element parents\r\n         * @param {object} el jQuery element object\r\n         * @returns {number}\r\n         */\r\n        getHighestZindex: function(el) {\r\n            var elem = KTUtil.get(el),\r\n                position, value;\r\n\r\n            while (elem && elem !== document) {\r\n                // Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n                // This makes behavior of this function consistent across browsers\r\n                // WebKit always returns auto if the element is positioned\r\n                position = KTUtil.css(elem, 'position');\r\n\r\n                if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\r\n                    // IE returns 0 when zIndex is not specified\r\n                    // other browsers return a string\r\n                    // we ignore the case of nested elements with an explicit value of 0\r\n                    // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n                    value = parseInt(KTUtil.css(elem, 'z-index'));\r\n\r\n                    if (!isNaN(value) && value !== 0) {\r\n                        return value;\r\n                    }\r\n                }\r\n\r\n                elem = elem.parentNode;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Checks whether the element has any parent with fixed positionfreg\r\n         * @param {object} el jQuery element object\r\n         * @returns {boolean}\r\n         */\r\n        hasFixedPositionedParent: function(el) {\r\n            var position;\r\n\r\n            while (el && el !== document) {\r\n                position = KTUtil.css(el, 'position');\r\n\r\n                if (position === \"fixed\") {\r\n                    return true;\r\n                }\r\n\r\n                el = el.parentNode;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Simulates delay\r\n         */\r\n        sleep: function(milliseconds) {\r\n            var start = new Date().getTime();\r\n            for (var i = 0; i < 1e7; i++) {\r\n                if ((new Date().getTime() - start) > milliseconds) {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets randomly generated integer value within given min and max range\r\n         * @param {number} min Range start value\r\n         * @param {number} max Range end value\r\n         * @returns {number}\r\n         */\r\n        getRandomInt: function(min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        },\r\n\r\n        /**\r\n         * Checks whether Angular library is included\r\n         * @returns {boolean}\r\n         */\r\n        isAngularVersion: function() {\r\n            return window.Zone !== undefined ? true : false;\r\n        },\r\n\r\n        // jQuery Workarounds\r\n\r\n        // Deep extend:  $.extend(true, {}, objA, objB);\r\n        deepExtend: function(out) {\r\n            out = out || {};\r\n\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                var obj = arguments[i];\r\n\r\n                if (!obj)\r\n                    continue;\r\n\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if (typeof obj[key] === 'object')\r\n                            out[key] = KTUtil.deepExtend(out[key], obj[key]);\r\n                        else\r\n                            out[key] = obj[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return out;\r\n        },\r\n\r\n        // extend:  $.extend({}, objA, objB);\r\n        extend: function(out) {\r\n            out = out || {};\r\n\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                if (!arguments[i])\r\n                    continue;\r\n\r\n                for (var key in arguments[i]) {\r\n                    if (arguments[i].hasOwnProperty(key))\r\n                        out[key] = arguments[i][key];\r\n                }\r\n            }\r\n\r\n            return out;\r\n        },\r\n\r\n        get: function(query) {\r\n            var el;\r\n\r\n            if (query === document) {\r\n                return document;\r\n            }\r\n\r\n            if (!!(query && query.nodeType === 1)) {\r\n                return query;\r\n            }\r\n\r\n            if (el = document.getElementById(query)) {\r\n                return el;\r\n            } else if (el = document.getElementsByTagName(query), el.length > 0) {\r\n                return el[0];\r\n            } else if (el = document.getElementsByClassName(query), el.length > 0) {\r\n                return el[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        getByID: function(query) {\r\n            if (!!(query && query.nodeType === 1)) {\r\n                return query;\r\n            }\r\n\r\n            return document.getElementById(query);\r\n        },\r\n\r\n        getByTag: function(query) {\r\n            var el;\r\n\r\n            if (el = document.getElementsByTagName(query)) {\r\n                return el[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        getByClass: function(query) {\r\n            var el;\r\n\r\n            if (el = document.getElementsByClassName(query)) {\r\n                return el[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Checks whether the element has given classes\r\n         * @param {object} el jQuery element object\r\n         * @param {string} Classes string\r\n         * @returns {boolean}\r\n         */\r\n        hasClasses: function(el, classes) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            var classesArr = classes.split(\" \");\r\n\r\n            for (var i = 0; i < classesArr.length; i++) {\r\n                if (KTUtil.hasClass(el, KTUtil.trim(classesArr[i])) == false) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        hasClass: function(el, className) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            return el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\r\n        },\r\n\r\n        addClass: function(el, className) {\r\n            if (!el || typeof className === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            var classNames = className.split(' ');\r\n\r\n            if (el.classList) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    if (classNames[i] && classNames[i].length > 0) {\r\n                        el.classList.add(KTUtil.trim(classNames[i]));\r\n                    }\r\n                }\r\n            } else if (!KTUtil.hasClass(el, className)) {\r\n                for (var x = 0; x < classNames.length; x++) {\r\n                    el.className += ' ' + KTUtil.trim(classNames[x]);\r\n                }\r\n            }\r\n        },\r\n\r\n        removeClass: function(el, className) {\r\n          if (!el || typeof className === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            var classNames = className.split(' ');\r\n\r\n            if (el.classList) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    el.classList.remove(KTUtil.trim(classNames[i]));\r\n                }\r\n            } else if (KTUtil.hasClass(el, className)) {\r\n                for (var x = 0; x < classNames.length; x++) {\r\n                    el.className = el.className.replace(new RegExp('\\\\b' + KTUtil.trim(classNames[x]) + '\\\\b', 'g'), '');\r\n                }\r\n            }\r\n        },\r\n\r\n        triggerCustomEvent: function(el, eventName, data) {\r\n            var event;\r\n            if (window.CustomEvent) {\r\n                event = new CustomEvent(eventName, {\r\n                    detail: data\r\n                });\r\n            } else {\r\n                event = document.createEvent('CustomEvent');\r\n                event.initCustomEvent(eventName, true, true, data);\r\n            }\r\n\r\n            el.dispatchEvent(event);\r\n        },\r\n\r\n        triggerEvent: function(node, eventName) {\r\n            // Make sure we use the ownerDocument from the provided node to avoid cross-window problems\r\n            var doc;\r\n            if (node.ownerDocument) {\r\n                doc = node.ownerDocument;\r\n            } else if (node.nodeType == 9) {\r\n                // the node may be the document itself, nodeType 9 = DOCUMENT_NODE\r\n                doc = node;\r\n            } else {\r\n                throw new Error(\"Invalid node passed to fireEvent: \" + node.id);\r\n            }\r\n\r\n            if (node.dispatchEvent) {\r\n                // Gecko-style approach (now the standard) takes more work\r\n                var eventClass = \"\";\r\n\r\n                // Different events have different event classes.\r\n                // If this switch statement can't map an eventName to an eventClass,\r\n                // the event firing is going to fail.\r\n                switch (eventName) {\r\n                case \"click\": // Dispatching of 'click' appears to not work correctly in Safari. Use 'mousedown' or 'mouseup' instead.\r\n                case \"mouseenter\":\r\n                case \"mouseleave\":\r\n                case \"mousedown\":\r\n                case \"mouseup\":\r\n                    eventClass = \"MouseEvents\";\r\n                    break;\r\n\r\n                case \"focus\":\r\n                case \"change\":\r\n                case \"blur\":\r\n                case \"select\":\r\n                    eventClass = \"HTMLEvents\";\r\n                    break;\r\n\r\n                default:\r\n                    throw \"fireEvent: Couldn't find an event class for event '\" + eventName + \"'.\";\r\n                    break;\r\n                }\r\n                var event = doc.createEvent(eventClass);\r\n\r\n                var bubbles = eventName == \"change\" ? false : true;\r\n                event.initEvent(eventName, bubbles, true); // All events created as bubbling and cancelable.\r\n\r\n                event.synthetic = true; // allow detection of synthetic events\r\n                // The second parameter says go ahead with the default action\r\n                node.dispatchEvent(event, true);\r\n            } else if (node.fireEvent) {\r\n                // IE-old school style\r\n                var event = doc.createEventObject();\r\n                event.synthetic = true; // allow detection of synthetic events\r\n                node.fireEvent(\"on\" + eventName, event);\r\n            }\r\n        },\r\n\r\n        index: function( elm ){\r\n            elm = KTUtil.get(elm);\r\n            var c = elm.parentNode.children, i = 0;\r\n            for(; i < c.length; i++ )\r\n                if( c[i] == elm ) return i;\r\n        },\r\n\r\n        trim: function(string) {\r\n            return string.trim();\r\n        },\r\n\r\n        eventTriggered: function(e) {\r\n            if (e.currentTarget.dataset.triggered) {\r\n                return true;\r\n            } else {\r\n                e.currentTarget.dataset.triggered = true;\r\n\r\n                return false;\r\n            }\r\n        },\r\n\r\n        remove: function(el) {\r\n            if (el && el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n        },\r\n\r\n        find: function(parent, query) {\r\n            parent = KTUtil.get(parent);\r\n            if (parent) {\r\n                return parent.querySelector(query);\r\n            }\r\n        },\r\n\r\n        findAll: function(parent, query) {\r\n            parent = KTUtil.get(parent);\r\n            if (parent) {\r\n                return parent.querySelectorAll(query);\r\n            }\r\n        },\r\n\r\n        insertAfter: function(el, referenceNode) {\r\n            return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\r\n        },\r\n\r\n        parents: function(elem, selector) {\r\n            // Element.matches() polyfill\r\n            if (!Element.prototype.matches) {\r\n                Element.prototype.matches =\r\n                    Element.prototype.matchesSelector ||\r\n                    Element.prototype.mozMatchesSelector ||\r\n                    Element.prototype.msMatchesSelector ||\r\n                    Element.prototype.oMatchesSelector ||\r\n                    Element.prototype.webkitMatchesSelector ||\r\n                    function(s) {\r\n                        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                            i = matches.length;\r\n                        while (--i >= 0 && matches.item(i) !== this) {}\r\n                        return i > -1;\r\n                    };\r\n            }\r\n\r\n            // Set up a parent array\r\n            var parents = [];\r\n\r\n            // Push each parent element to the array\r\n            for ( ; elem && elem !== document; elem = elem.parentNode ) {\r\n                if (selector) {\r\n                    if (elem.matches(selector)) {\r\n                        parents.push(elem);\r\n                    }\r\n                    continue;\r\n                }\r\n                parents.push(elem);\r\n            }\r\n\r\n            // Return our parent array\r\n            return parents;\r\n        },\r\n\r\n        children: function(el, selector, log) {\r\n            if (!el || !el.childNodes) {\r\n                return;\r\n            }\r\n\r\n            var result = [],\r\n                i = 0,\r\n                l = el.childNodes.length;\r\n\r\n            for (var i; i < l; ++i) {\r\n                if (el.childNodes[i].nodeType == 1 && KTUtil.matches(el.childNodes[i], selector, log)) {\r\n                    result.push(el.childNodes[i]);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        child: function(el, selector, log) {\r\n            var children = KTUtil.children(el, selector, log);\r\n\r\n            return children ? children[0] : null;\r\n        },\r\n\r\n        matches: function(el, selector, log) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n\r\n            if (el && el.tagName) {\r\n                return f.call(el, selector);\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        data: function(element) {\r\n            element = KTUtil.get(element);\r\n\r\n            return {\r\n                set: function(name, data) {\r\n                    if (element === undefined) {\r\n                        return;\r\n                    }\r\n\r\n                    if (element.customDataTag === undefined) {\r\n                        window.KTUtilElementDataStoreID++;\r\n                        element.customDataTag = window.KTUtilElementDataStoreID;\r\n                    }\r\n\r\n                    if (window.KTUtilElementDataStore[element.customDataTag] === undefined) {\r\n                        window.KTUtilElementDataStore[element.customDataTag] = {};\r\n                    }\r\n\r\n                    window.KTUtilElementDataStore[element.customDataTag][name] = data;\r\n                },\r\n\r\n                get: function(name) {\r\n                    if (element === undefined) {\r\n                        return;\r\n                    }\r\n\r\n                    if (element.customDataTag === undefined) {\r\n                        return null;\r\n                    }\r\n\r\n                    return this.has(name) ? window.KTUtilElementDataStore[element.customDataTag][name] : null;\r\n                },\r\n\r\n                has: function(name) {\r\n                    if (element === undefined) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (element.customDataTag === undefined) {\r\n                        return false;\r\n                    }\r\n\r\n                    return (window.KTUtilElementDataStore[element.customDataTag] && window.KTUtilElementDataStore[element.customDataTag][name]) ? true : false;\r\n                },\r\n\r\n                remove: function(name) {\r\n                    if (element && this.has(name)) {\r\n                        delete window.KTUtilElementDataStore[element.customDataTag][name];\r\n                    }\r\n                }\r\n            };\r\n        },\r\n\r\n        outerWidth: function(el, margin) {\r\n            var width;\r\n\r\n            if (margin === true) {\r\n                width = parseFloat(el.offsetWidth);\r\n                width += parseFloat(KTUtil.css(el, 'margin-left')) + parseFloat(KTUtil.css(el, 'margin-right'));\r\n\r\n                return parseFloat(width);\r\n            } else {\r\n                width = parseFloat(el.offsetWidth);\r\n\r\n                return width;\r\n            }\r\n        },\r\n\r\n        offset: function(elem) {\r\n            var rect, win;\r\n            elem = KTUtil.get(elem);\r\n\r\n            if ( !elem ) {\r\n                return;\r\n            }\r\n\r\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\r\n            // Support: IE <=11 only\r\n            // Running getBoundingClientRect on a\r\n            // disconnected node in IE throws an error\r\n\r\n            if ( !elem.getClientRects().length ) {\r\n                return { top: 0, left: 0 };\r\n            }\r\n\r\n            // Get document-relative position by adding viewport scroll to viewport-relative gBCR\r\n            rect = elem.getBoundingClientRect();\r\n            win = elem.ownerDocument.defaultView;\r\n\r\n            return {\r\n                top: rect.top + win.pageYOffset,\r\n                left: rect.left + win.pageXOffset\r\n            };\r\n        },\r\n\r\n        height: function(el) {\r\n            return KTUtil.css(el, 'height');\r\n        },\r\n\r\n        visible: function(el) {\r\n            return !(el.offsetWidth === 0 && el.offsetHeight === 0);\r\n        },\r\n\r\n        attr: function(el, name, value) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                el.setAttribute(name, value);\r\n            } else {\r\n                return el.getAttribute(name);\r\n            }\r\n        },\r\n\r\n        hasAttr: function(el, name) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            return el.getAttribute(name) ? true : false;\r\n        },\r\n\r\n        removeAttr: function(el, name) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            el.removeAttribute(name);\r\n        },\r\n\r\n        animate: function(from, to, duration, update, easing, done) {\r\n            /**\r\n             * TinyAnimate.easings\r\n             *  Adapted from jQuery Easing\r\n             */\r\n            var easings = {};\r\n            var easing;\r\n\r\n            easings.linear = function(t, b, c, d) {\r\n                return c * t / d + b;\r\n            };\r\n\r\n            easing = easings.linear;\r\n\r\n            // Early bail out if called incorrectly\r\n            if (typeof from !== 'number' ||\r\n                typeof to !== 'number' ||\r\n                typeof duration !== 'number' ||\r\n                typeof update !== 'function') {\r\n                return;\r\n            }\r\n\r\n            // Create mock done() function if necessary\r\n            if (typeof done !== 'function') {\r\n                done = function() {};\r\n            }\r\n\r\n            // Pick implementation (requestAnimationFrame | setTimeout)\r\n            var rAF = window.requestAnimationFrame || function(callback) {\r\n                window.setTimeout(callback, 1000 / 50);\r\n            };\r\n\r\n            // Animation loop\r\n            var canceled = false;\r\n            var change = to - from;\r\n\r\n            function loop(timestamp) {\r\n                var time = (timestamp || +new Date()) - start;\r\n\r\n                if (time >= 0) {\r\n                    update(easing(time, from, change, duration));\r\n                }\r\n                if (time >= 0 && time >= duration) {\r\n                    update(to);\r\n                    done();\r\n                } else {\r\n                    rAF(loop);\r\n                }\r\n            }\r\n\r\n            update(from);\r\n\r\n            // Start animation loop\r\n            var start = window.performance && window.performance.now ? window.performance.now() : +new Date();\r\n\r\n            rAF(loop);\r\n        },\r\n\r\n        actualCss: function(el, prop, cache) {\r\n            el = KTUtil.get(el);\r\n            var css = '';\r\n\r\n            if (el instanceof HTMLElement === false) {\r\n                return;\r\n            }\r\n\r\n            if (!el.getAttribute('kt-hidden-' + prop) || cache === false) {\r\n                var value;\r\n\r\n                // the element is hidden so:\r\n                // making the el block so we can meassure its height but still be hidden\r\n                css = el.style.cssText;\r\n                el.style.cssText = 'position: absolute; visibility: hidden; display: block;';\r\n\r\n                if (prop == 'width') {\r\n                    value = el.offsetWidth;\r\n                } else if (prop == 'height') {\r\n                    value = el.offsetHeight;\r\n                }\r\n\r\n                el.style.cssText = css;\r\n\r\n                // store it in cache\r\n                el.setAttribute('kt-hidden-' + prop, value);\r\n\r\n                return parseFloat(value);\r\n            } else {\r\n                // store it in cache\r\n                return parseFloat(el.getAttribute('kt-hidden-' + prop));\r\n            }\r\n        },\r\n\r\n        actualHeight: function(el, cache) {\r\n            return KTUtil.actualCss(el, 'height', cache);\r\n        },\r\n\r\n        actualWidth: function(el, cache) {\r\n            return KTUtil.actualCss(el, 'width', cache);\r\n        },\r\n\r\n        getScroll: function(element, method) {\r\n            // The passed in `method` value should be 'Top' or 'Left'\r\n            method = 'scroll' + method;\r\n            return (element == window || element == document) ? (\r\n                self[(method == 'scrollTop') ? 'pageYOffset' : 'pageXOffset'] ||\r\n                (browserSupportsBoxModel && document.documentElement[method]) ||\r\n                document.body[method]\r\n            ) : element[method];\r\n        },\r\n\r\n        css: function(el, styleProp, value) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                el.style[styleProp] = value;\r\n            } else {\r\n                var defaultView = (el.ownerDocument || document).defaultView;\r\n                // W3C standard way:\r\n                if (defaultView && defaultView.getComputedStyle) {\r\n                    // sanitize property name to css notation\r\n                    // (hyphen separated words eg. font-Size)\r\n                    styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n                    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\r\n                } else if (el.currentStyle) { // IE\r\n                    // sanitize property name to camelCase\r\n                    styleProp = styleProp.replace(/\\-(\\w)/g, function(str, letter) {\r\n                        return letter.toUpperCase();\r\n                    });\r\n                    value = el.currentStyle[styleProp];\r\n                    // convert other units to pixels on IE\r\n                    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\r\n                        return (function(value) {\r\n                            var oldLeft = el.style.left,\r\n                                oldRsLeft = el.runtimeStyle.left;\r\n                            el.runtimeStyle.left = el.currentStyle.left;\r\n                            el.style.left = value || 0;\r\n                            value = el.style.pixelLeft + \"px\";\r\n                            el.style.left = oldLeft;\r\n                            el.runtimeStyle.left = oldRsLeft;\r\n                            return value;\r\n                        })(value);\r\n                    }\r\n                    return value;\r\n                }\r\n            }\r\n        },\r\n\r\n        slide: function(el, dir, speed, callback, recalcMaxHeight) {\r\n            if (!el || (dir == 'up' && KTUtil.visible(el) === false) || (dir == 'down' && KTUtil.visible(el) === true)) {\r\n                return;\r\n            }\r\n\r\n            speed = (speed ? speed : 600);\r\n            var calcHeight = KTUtil.actualHeight(el);\r\n            var calcPaddingTop = false;\r\n            var calcPaddingBottom = false;\r\n\r\n            if (KTUtil.css(el, 'padding-top') && KTUtil.data(el).has('slide-padding-top') !== true) {\r\n                KTUtil.data(el).set('slide-padding-top', KTUtil.css(el, 'padding-top'));\r\n            }\r\n\r\n            if (KTUtil.css(el, 'padding-bottom') && KTUtil.data(el).has('slide-padding-bottom') !== true) {\r\n                KTUtil.data(el).set('slide-padding-bottom', KTUtil.css(el, 'padding-bottom'));\r\n            }\r\n\r\n            if (KTUtil.data(el).has('slide-padding-top')) {\r\n                calcPaddingTop = parseInt(KTUtil.data(el).get('slide-padding-top'));\r\n            }\r\n\r\n            if (KTUtil.data(el).has('slide-padding-bottom')) {\r\n                calcPaddingBottom = parseInt(KTUtil.data(el).get('slide-padding-bottom'));\r\n            }\r\n\r\n            if (dir == 'up') { // up\r\n                el.style.cssText = 'display: block; overflow: hidden;';\r\n\r\n                if (calcPaddingTop) {\r\n                    KTUtil.animate(0, calcPaddingTop, speed, function(value) {\r\n                        el.style.paddingTop = (calcPaddingTop - value) + 'px';\r\n                    }, 'linear');\r\n                }\r\n\r\n                if (calcPaddingBottom) {\r\n                    KTUtil.animate(0, calcPaddingBottom, speed, function(value) {\r\n                        el.style.paddingBottom = (calcPaddingBottom - value) + 'px';\r\n                    }, 'linear');\r\n                }\r\n\r\n                KTUtil.animate(0, calcHeight, speed, function(value) {\r\n                    el.style.height = (calcHeight - value) + 'px';\r\n                }, 'linear', function() {\r\n                    callback();\r\n                    el.style.height = '';\r\n                    el.style.display = 'none';\r\n                });\r\n\r\n\r\n            } else if (dir == 'down') { // down\r\n                el.style.cssText = 'display: block; overflow: hidden;';\r\n\r\n                if (calcPaddingTop) {\r\n                    KTUtil.animate(0, calcPaddingTop, speed, function(value) {\r\n                        el.style.paddingTop = value + 'px';\r\n                    }, 'linear', function() {\r\n                        el.style.paddingTop = '';\r\n                    });\r\n                }\r\n\r\n                if (calcPaddingBottom) {\r\n                    KTUtil.animate(0, calcPaddingBottom, speed, function(value) {\r\n                        el.style.paddingBottom = value + 'px';\r\n                    }, 'linear', function() {\r\n                        el.style.paddingBottom = '';\r\n                    });\r\n                }\r\n\r\n                KTUtil.animate(0, calcHeight, speed, function(value) {\r\n                    el.style.height = value + 'px';\r\n                }, 'linear', function() {\r\n                    callback();\r\n                    el.style.height = '';\r\n                    el.style.display = '';\r\n                    el.style.overflow = '';\r\n                });\r\n            }\r\n        },\r\n\r\n        slideUp: function(el, speed, callback) {\r\n            KTUtil.slide(el, 'up', speed, callback);\r\n        },\r\n\r\n        slideDown: function(el, speed, callback) {\r\n            KTUtil.slide(el, 'down', speed, callback);\r\n        },\r\n\r\n        show: function(el, display) {\r\n            if (typeof el !== 'undefined') {\r\n                el.style.display = (display ? display : 'block');\r\n            }\r\n        },\r\n\r\n        hide: function(el) {\r\n            if (typeof el !== 'undefined') {\r\n                el.style.display = 'none';\r\n            }\r\n        },\r\n\r\n        addEvent: function(el, type, handler, one) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (typeof el !== 'undefined' && el !== null) {\r\n                el.addEventListener(type, handler);\r\n            }\r\n        },\r\n\r\n        removeEvent: function(el, type, handler) {\r\n            el = KTUtil.get(el);\r\n\r\n            if (el !== null) {\r\n                el.removeEventListener(type, handler);\r\n            }\r\n        },\r\n\r\n        on: function(element, selector, event, handler) {\r\n            if (!selector) {\r\n                return;\r\n            }\r\n\r\n            var eventId = KTUtil.getUniqueID('event');\r\n\r\n            window.KTUtilDelegatedEventHandlers[eventId] = function(e) {\r\n                var targets = element.querySelectorAll(selector);\r\n                var target = e.target;\r\n\r\n                while (target && target !== element) {\r\n                    for (var i = 0, j = targets.length; i < j; i++) {\r\n                        if (target === targets[i]) {\r\n                            handler.call(target, e);\r\n                        }\r\n                    }\r\n\r\n                    target = target.parentNode;\r\n                }\r\n            }\r\n\r\n            KTUtil.addEvent(element, event, window.KTUtilDelegatedEventHandlers[eventId]);\r\n\r\n            return eventId;\r\n        },\r\n\r\n        off: function(element, event, eventId) {\r\n            if (!element || !window.KTUtilDelegatedEventHandlers[eventId]) {\r\n                return;\r\n            }\r\n\r\n            KTUtil.removeEvent(element, event, window.KTUtilDelegatedEventHandlers[eventId]);\r\n\r\n            delete window.KTUtilDelegatedEventHandlers[eventId];\r\n        },\r\n\r\n        one: function onetime(el, type, callback) {\r\n            el = KTUtil.get(el);\r\n\r\n            el.addEventListener(type, function callee(e) {\r\n                // remove event\r\n                if (e.target && e.target.removeEventListener) {\r\n                    e.target.removeEventListener(e.type, callee);\r\n                }\r\n\r\n                // call handler\r\n                return callback(e);\r\n            });\r\n        },\r\n\r\n        hash: function(str) {\r\n            var hash = 0,\r\n                i, chr;\r\n\r\n            if (str.length === 0) return hash;\r\n            for (i = 0; i < str.length; i++) {\r\n                chr = str.charCodeAt(i);\r\n                hash = ((hash << 5) - hash) + chr;\r\n                hash |= 0; // Convert to 32bit integer\r\n            }\r\n\r\n            return hash;\r\n        },\r\n\r\n        animateClass: function(el, animationName, callback) {\r\n            var animation;\r\n            var animations = {\r\n                animation: 'animationend',\r\n                OAnimation: 'oAnimationEnd',\r\n                MozAnimation: 'mozAnimationEnd',\r\n                WebkitAnimation: 'webkitAnimationEnd',\r\n                msAnimation: 'msAnimationEnd',\r\n            };\r\n\r\n            for (var t in animations) {\r\n                if (el.style[t] !== undefined) {\r\n                    animation = animations[t];\r\n                }\r\n            }\r\n\r\n            KTUtil.addClass(el, 'animated ' + animationName);\r\n\r\n            KTUtil.one(el, animation, function() {\r\n                KTUtil.removeClass(el, 'animated ' + animationName);\r\n            });\r\n\r\n            if (callback) {\r\n                KTUtil.one(el, animation, callback);\r\n            }\r\n        },\r\n\r\n        transitionEnd: function(el, callback) {\r\n            var transition;\r\n            var transitions = {\r\n                transition: 'transitionend',\r\n                OTransition: 'oTransitionEnd',\r\n                MozTransition: 'mozTransitionEnd',\r\n                WebkitTransition: 'webkitTransitionEnd',\r\n                msTransition: 'msTransitionEnd'\r\n            };\r\n\r\n            for (var t in transitions) {\r\n                if (el.style[t] !== undefined) {\r\n                    transition = transitions[t];\r\n                }\r\n            }\r\n\r\n            KTUtil.one(el, transition, callback);\r\n        },\r\n\r\n        animationEnd: function(el, callback) {\r\n            var animation;\r\n            var animations = {\r\n                animation: 'animationend',\r\n                OAnimation: 'oAnimationEnd',\r\n                MozAnimation: 'mozAnimationEnd',\r\n                WebkitAnimation: 'webkitAnimationEnd',\r\n                msAnimation: 'msAnimationEnd'\r\n            };\r\n\r\n            for (var t in animations) {\r\n                if (el.style[t] !== undefined) {\r\n                    animation = animations[t];\r\n                }\r\n            }\r\n\r\n            KTUtil.one(el, animation, callback);\r\n        },\r\n\r\n        animateDelay: function(el, value) {\r\n            var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n            for (var i = 0; i < vendors.length; i++) {\r\n                KTUtil.css(el, vendors[i] + 'animation-delay', value);\r\n            }\r\n        },\r\n\r\n        animateDuration: function(el, value) {\r\n            var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n            for (var i = 0; i < vendors.length; i++) {\r\n                KTUtil.css(el, vendors[i] + 'animation-duration', value);\r\n            }\r\n        },\r\n\r\n        scrollTo: function(target, offset, duration) {\r\n            var duration = duration ? duration : 500;\r\n            var target = KTUtil.get(target);\r\n            var targetPos = target ? KTUtil.offset(target).top : 0;\r\n            var scrollPos = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n            var from, to;\r\n\r\n            if (offset) {\r\n                scrollPos += offset;\r\n            }\r\n\r\n            from = scrollPos;\r\n            to = targetPos;\r\n\r\n            KTUtil.animate(from, to, duration, function(value) {\r\n                document.documentElement.scrollTop = value;\r\n                document.body.parentNode.scrollTop = value;\r\n                document.body.scrollTop = value;\r\n            }); //, easing, done\r\n        },\r\n\r\n        scrollTop: function(offset, duration) {\r\n            KTUtil.scrollTo(null, offset, duration);\r\n        },\r\n\r\n        isArray: function(obj) {\r\n            return obj && Array.isArray(obj);\r\n        },\r\n\r\n        ready: function(callback) {\r\n            if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n                callback();\r\n            } else {\r\n                document.addEventListener('DOMContentLoaded', callback);\r\n            }\r\n        },\r\n\r\n        isEmpty: function(obj) {\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        numberString: function(nStr) {\r\n            nStr += '';\r\n            var x = nStr.split('.');\r\n            var x1 = x[0];\r\n            var x2 = x.length > 1 ? '.' + x[1] : '';\r\n            var rgx = /(\\d+)(\\d{3})/;\r\n            while (rgx.test(x1)) {\r\n                x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n            }\r\n            return x1 + x2;\r\n        },\r\n\r\n        detectIE: function() {\r\n            var ua = window.navigator.userAgent;\r\n\r\n            // Test values; Uncomment to check result …\r\n\r\n            // IE 10\r\n            // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n            // IE 11\r\n            // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n            // Edge 12 (Spartan)\r\n            // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n            // Edge 13\r\n            // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n            var msie = ua.indexOf('MSIE ');\r\n            if (msie > 0) {\r\n                // IE 10 or older => return version number\r\n                return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n            }\r\n\r\n            var trident = ua.indexOf('Trident/');\r\n            if (trident > 0) {\r\n                // IE 11 => return version number\r\n                var rv = ua.indexOf('rv:');\r\n                return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n            }\r\n\r\n            var edge = ua.indexOf('Edge/');\r\n            if (edge > 0) {\r\n                // Edge (IE 12+) => return version number\r\n                return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n            }\r\n\r\n            // other browser\r\n            return false;\r\n        },\r\n\r\n        isRTL: function() {\r\n            return (KTUtil.attr(KTUtil.get('html'), 'direction') == 'rtl');\r\n        },\r\n\r\n        //\r\n\r\n        // Scroller\r\n        scrollInit: function(element, options) {\r\n            if(!element) return;\r\n            // Define init function\r\n            function init() {\r\n                var ps;\r\n                var height;\r\n\r\n                if (options.height instanceof Function) {\r\n                    height = parseInt(options.height.call());\r\n                } else {\r\n                    height = parseInt(options.height);\r\n                }\r\n\r\n                // Destroy scroll on table and mobile modes\r\n                if ((options.mobileNativeScroll || options.disableForMobile) && KTUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                    ps = KTUtil.data(element).get('ps');\r\n                    if (ps) {\r\n                        if (options.resetHeightOnDestroy) {\r\n                            KTUtil.css(element, 'height', 'auto');\r\n                        } else {\r\n                            KTUtil.css(element, 'overflow', 'auto');\r\n                            if (height > 0) {\r\n                                KTUtil.css(element, 'height', height + 'px');\r\n                            }\r\n                        }\r\n\r\n                        ps.destroy();\r\n                        ps = KTUtil.data(element).remove('ps');\r\n                    } else if (height > 0){\r\n                        KTUtil.css(element, 'overflow', 'auto');\r\n                        KTUtil.css(element, 'height', height + 'px');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                if (height > 0) {\r\n                    KTUtil.css(element, 'height', height + 'px');\r\n                }\r\n\r\n                if (options.desktopNativeScroll) {\r\n                    KTUtil.css(element, 'overflow', 'auto');\r\n                    return;\r\n                }\r\n\r\n                // Init scroll\r\n                KTUtil.css(element, 'overflow', 'hidden');\r\n\r\n                ps = KTUtil.data(element).get('ps');\r\n                if (ps) {\r\n                    ps.update();\r\n                } else {\r\n                    KTUtil.addClass(element, 'kt-scroll');\r\n                    ps = new PerfectScrollbar(element, {\r\n                        wheelSpeed: 0.5,\r\n                        swipeEasing: true,\r\n                        wheelPropagation: (options.windowScroll === false ? false : true),\r\n                        minScrollbarLength: 40,\r\n                        maxScrollbarLength: 300,\r\n                        suppressScrollX: KTUtil.attr(element, 'data-scroll-x') != 'true' ? true : false\r\n                    });\r\n\r\n                    KTUtil.data(element).set('ps', ps);\r\n                }\r\n\r\n                // Remember scroll position in cookie\r\n                var uid = KTUtil.attr(element, 'id');\r\n\r\n                if (options.rememberPosition === true && Cookies && uid) {\r\n                    if (Cookies.get(uid)) {\r\n                        var pos = parseInt(Cookies.get(uid));\r\n\r\n                        if (pos > 0) {\r\n                            element.scrollTop = pos;\r\n                        }\r\n                    }\r\n\r\n                    element.addEventListener('ps-scroll-y', function() {\r\n                        Cookies.set(uid, element.scrollTop);\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Init\r\n            init();\r\n\r\n            // Handle window resize\r\n            if (options.handleWindowResize) {\r\n                KTUtil.addResizeHandler(function() {\r\n                    init();\r\n                });\r\n            }\r\n        },\r\n\r\n        scrollUpdate: function(element) {\r\n            var ps = KTUtil.data(element).get('ps');\r\n            if (ps) {\r\n                ps.update();\r\n            }\r\n        },\r\n\r\n        scrollUpdateAll: function(parent) {\r\n            var scrollers = KTUtil.findAll(parent, '.ps');\r\n            for (var i = 0, len = scrollers.length; i < len; i++) {\r\n                KTUtil.scrollUpdate(scrollers[i]);\r\n            }\r\n        },\r\n\r\n        scrollDestroy: function(element) {\r\n            var ps = KTUtil.data(element).get('ps');\r\n            if (ps) {\r\n                ps.destroy();\r\n                ps = KTUtil.data(element).remove('ps');\r\n            }\r\n        },\r\n\r\n        setHTML: function(el, html) {\r\n            if (KTUtil.get(el)) {\r\n                KTUtil.get(el).innerHTML = html;\r\n            }\r\n        },\r\n\r\n        getHTML: function(el) {\r\n            if (KTUtil.get(el)) {\r\n                return KTUtil.get(el).innerHTML;\r\n            }\r\n        },\r\n\r\n        getDocumentHeight: function() {\r\n            var body = document.body;\r\n            var html = document.documentElement;\r\n\r\n            return Math.max( body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight );\r\n        },\r\n\r\n        getScrollTop: function() {\r\n            return  (document.scrollingElement || document.documentElement).scrollTop;\r\n        }\r\n    }\r\n}();\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTUtil;\r\n}\r\n\r\n// Initialize KTUtil class on document ready\r\nKTUtil.ready(function() {\r\n    KTUtil.init();\r\n});\r\n\r\n// CSS3 Transitions only after page load(.kt-page-loading class added to body tag and remove with JS on page load)\r\nwindow.onload = function() {\r\n    KTUtil.removeClass(KTUtil.get('body'), 'kt-page--loading');\r\n}\r\n\r\nexport default KTUtil;\r\n"],"sourceRoot":""}